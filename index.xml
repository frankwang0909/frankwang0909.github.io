<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Frank Wang&#39;s Coding World</title>
    <link>http://www.wangxingfeng.com/index.xml</link>
    <description>Recent content on Frank Wang&#39;s Coding World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>[Frank Wang](//www.wangxingfeng.com). Powered by [Hugo](//gohugo.io). Theme by [PPOffice](http://github.com/ppoffice).</copyright>
    <lastBuildDate>Thu, 06 Apr 2017 20:33:42 +0800</lastBuildDate>
    <atom:link href="http://www.wangxingfeng.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>童鞋，放开那本词汇书</title>
      <link>http://www.wangxingfeng.com/throw-away-vocabulary-books</link>
      <pubDate>Thu, 06 Apr 2017 20:33:42 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/throw-away-vocabulary-books</guid>
      <description>

&lt;h2 id=&#34;词汇是都是攒出来的&#34;&gt;词汇是都是攒出来的&lt;/h2&gt;

&lt;p&gt;其实，语言学习的本质是相通的。我们不妨先来回顾一下学习汉语（普通话）的过程。有多少人在学习语文的过程中，遇到过要求背诵《新华字典》、《辞海》的语文老师或者家长？我想绝大部分人应该是没有这种经历的。&lt;/p&gt;

&lt;p&gt;我们绝大部分人，基本上是通过日复一日地学习，逐渐把中文词汇量攒起来的。实际上，到了中学阶段，我们掌握了常用的3500个汉字后，阅读中文基本已经没有什么障碍了。你也许有遇到一些生僻字或词组，比如“同侪”、“鬼魅魍魉”。这时候，你可能会停下来去查一下字典，看看它是怎么读的，有什么含义。如果这个字，是个多音字，你可能还会留意一下这个字的读音。&lt;/p&gt;

&lt;p&gt;学习英语也是同样的道理，遇到不懂的单词就去查词典。现在，我们有了智能手机、电脑，你都不用纸质版的字典了，直接搜索一下，立马出来结果。这样慢慢攒起来的词汇，才是你真正掌握的词汇。&lt;/p&gt;

&lt;p&gt;可是，为什么有那么多人想通过背单词书，快速提升自己的英语词汇量呢？大部分英语词汇书第1页都有一个单词叫做&amp;rdquo;abandon&amp;rdquo;，意思是“放弃”。你看词汇书的小编多么用心良苦，在第1页就告诉你了：放弃吧，别背单词书了。当然，这是一个关于背单词的老梗。&lt;/p&gt;

&lt;p&gt;如果你是在准备某个考试，比如说四六级，那么，你很可能会买一本词汇书。但是，千万别妄想通过背完这个词汇书，你的词汇量就上去。仅仅是背诵单词书，背完就会忘掉。背单词书，本身是一件极其低效和反人类的事情。所以，你的大脑根本就不配合你。这就是为什么，很多人买了各种各样的英语单词书，却只有最前和最后的几个单元是脏兮兮的，中间都是崭新的。&lt;/p&gt;

&lt;h2 id=&#34;放下词汇书-踏踏实实攒单词&#34;&gt;放下词汇书，踏踏实实攒单词&lt;/h2&gt;

&lt;p&gt;别整什么艾斯豪宾的记忆曲线法了！也别整什么词根词缀、联想记忆法了！这些方法有用，那也是辅助记忆的方法。如果你在备考某个英语考试，乖乖地把历年真题刷一遍。每做完一套题目，就把你不熟悉的单词用手机查出来，标注出来，弄懂文章中的每一句话。这些词汇才是你应该需要重点记忆的词汇。你会看到这些词汇反复出现在真题里。一段时间之后，你会惊喜地发现自己不仅能够记住某个单词的中文意思，还知道它是怎么用的。这时候，你才真正掌握了这个单词，而且不会轻易忘掉。&lt;/p&gt;

&lt;p&gt;童鞋，放下你手中的单词书，放下心中快速提升词汇量的妄念。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JavaScript实现复制内容到剪贴板的功能</title>
      <link>http://www.wangxingfeng.com/copy2clipboard</link>
      <pubDate>Wed, 05 Apr 2017 20:29:51 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/copy2clipboard</guid>
      <description>

&lt;h2 id=&#34;1-zeroclipboard-js&#34;&gt;1.ZeroClipboard.js&lt;/h2&gt;

&lt;p&gt;点击按钮实现复制链接或者一段文本到剪贴板，这个小功能想必不少人都见过。GitHub上就有这么一个点击按钮复制仓库地址的功能。如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2017040501.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Github&lt;/code&gt;用的是&lt;a href=&#34;http://zeroclipboard.org/&#34;&gt;ZeroClipboard&lt;/a&gt;来实现这一功能。这个库是用一个不可见的Flash来完成剪贴操作的。即将 Flash 做成透明的，以便于我们放在诸如链接、按钮等需要放置的任何地方。这样，用户界面看起来没有变化，当点击链接或按钮时，实际上点击是却是 Flash，从而实现复制操作。具体实现方法，可以参考官方文档&lt;a href=&#34;http://zeroclipboard.org。&#34;&gt;http://zeroclipboard.org。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我们知道&lt;code&gt;Flash&lt;/code&gt;正走向没落，不少功能被越来越强大的&lt;code&gt;HTML5&lt;/code&gt;所替代。而且，出于安全方面的考虑，不少浏览器都默认禁用了Flash。那么有没有不是Flash的实现方式呢？&lt;/p&gt;

&lt;h2 id=&#34;2-clipboard-js&#34;&gt;2.clipboard.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://clipboardjs.com/&#34;&gt;clipboard.js&lt;/a&gt;是个更加轻量的JavaScript库，没有使用Flash，而是依赖于&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Selection&#34;&gt;Selection&lt;/a&gt;和&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand&#34;&gt;execCommand&lt;/a&gt;这两个API，并且使用了HTML5的特性，比如自定义数据的&lt;code&gt;data-* 属性&lt;/code&gt;。因此，clipboard.js在兼容性方面比ZeroClipboard.js差，但现代浏览器(IE9+)基本能够兼容。&lt;/p&gt;

&lt;p&gt;使用方法非常简单：&lt;/p&gt;

&lt;p&gt;1)&lt;a href=&#34;https://github.com/zenorocha/clipboard.js/archive/master.zip&#34;&gt;下载代码&lt;/a&gt;，并引入到文件中。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;dist/clipboard.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2)实例化一个Clipboard对象，参数可以是&lt;code&gt;CSS选择器&lt;/code&gt;、&lt;code&gt;HTML节点&lt;/code&gt;、NodeList对象&lt;/p&gt;

&lt;p&gt;参数为&lt;code&gt;CSS选择器&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;new Clipboard(&#39;.btn&#39;); // btn为DOM元素的class名, 跟jQuery的用法一样。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参数为&lt;code&gt;HTML节点&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var btn = document.getElementById(&#39;btn&#39;);
var clipboard = new Clipboard(btn);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参数为&lt;code&gt;NodeList对象&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var btns = document.querySelectorAll(&#39;button&#39;);
var clipboard = new Clipboard(btns);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3)实例化对象的时候，可以同时设置复制的内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var clipboard = new Clipboard(&#39;.btn&#39;, {
    text: function() {
        return &#39;to be or not to be&#39;; //剪贴板上的文本
    }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4)也可以通过data-*属性来设置要复制的内容&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!-- Target --&amp;gt;
&amp;lt;input id=&amp;quot;foo&amp;quot; value=&amp;quot;https://github.com/zenorocha/clipboard.js.git&amp;quot;&amp;gt;

&amp;lt;!-- Trigger --&amp;gt;
&amp;lt;button class=&amp;quot;btn&amp;quot; data-clipboard-target=&amp;quot;#foo&amp;quot;&amp;gt;点击复制&amp;lt;/button&amp;gt;

&amp;lt;script&amp;gt;
    var clipboard = new Clipboard(&#39;.btn&#39;);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;点击一下，看看是否成功复制到剪贴板：&lt;/p&gt;

&lt;p&gt;&lt;input id=&#34;foo&#34; value=&#34;https://github.com/zenorocha/clipboard.js.git&#34; style=&#34;width:300px;&#34;&gt;
&lt;button class=&#34;btn&#34; data-clipboard-target=&#34;#foo&#34;&gt;点击复制&lt;/button&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/1.6.0/clipboard.min.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34; &gt;
    var clipboard = new Clipboard(&#39;.btn&#39;);
&lt;/script&gt;

&lt;p&gt;&lt;code&gt;data-clipboard-target&lt;/code&gt;属性的值&lt;code&gt;#foo&lt;/code&gt;对应的是目标节点的CSS选择器。&lt;/p&gt;

&lt;p&gt;5）更多的配置信息和使用方法，请查阅&lt;a href=&#34;https://clipboardjs.com/&#34;&gt;clipboard.js官网&lt;/a&gt;，有兴趣的朋友，应该看看它的源码。&lt;/p&gt;

&lt;p&gt;注意我说的看源码，指的是&lt;code&gt;src目录&lt;/code&gt;的代码。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2017040502.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2017040505.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;代码是长这样的。没错，这是ES6的写法。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2017040504.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;千万不要去看&lt;code&gt;dist&lt;/code&gt;下的&lt;code&gt;clipboard.js&lt;/code&gt; ，那个是编译之后的代码。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2017040503.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>通过userAgent识别移动设备，自动跳转移动端站点</title>
      <link>http://www.wangxingfeng.com/useragent</link>
      <pubDate>Tue, 04 Apr 2017 21:02:50 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/useragent</guid>
      <description>

&lt;p&gt;不少互联网公司的网站都分为PC端和手机端。如果用户用手机访问PC站点，受限于手机网络，很可能会出现加载网页缓慢的情况。
因此，如何识别用户访问网站的设备，并且自动跳转到对应的站点呢？&lt;/p&gt;

&lt;h2 id=&#34;navigator-useragent&#34;&gt;navigator.userAgent&lt;/h2&gt;

&lt;p&gt;navigator是JavaScript中的一个独立的对象，用于提供用户所使用的浏览器以及操作系统等信息，以navigator对象属性的形式来提供。所有浏览器都支持该对象。&lt;/p&gt;

&lt;p&gt;navigator对象有一个userAgent属性，会返回用户的设备操作系统和浏览器的信息。&lt;/p&gt;

&lt;p&gt;1.用&lt;code&gt;谷歌浏览器&lt;/code&gt;，随便打开一个网页，&lt;code&gt;F12&lt;/code&gt;打开Chrome调试工具，输入&lt;code&gt;navigator.userAgent&lt;/code&gt;, 会返回如下的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.98 Safari/537.36&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个字符串可以分成四个主要的部分，我来解释一下各个部分的含义：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1）Mozilla/5.0 ：表示兼容Mozilla, 几乎所有的浏览器都有这个字符;
2) (Windows NT 6.1; Win64; x64): 表示设备的操作系统版本，以及CPU信息；
3）AppleWebKit/537.36 (KHTML, like Gecko)：表示浏览器的内核；
4) Chrome/57.0.2987.98 Safari/537.36: 表示浏览器的版本号。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.用&lt;code&gt;火狐浏览器&lt;/code&gt;，随便打开一个网页，&lt;code&gt;F12&lt;/code&gt;打开调试工具，同样地在控制台输入&lt;code&gt;navigator.userAgent&lt;/code&gt;, 返回如下的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:52.0) Gecko/20100101 Firefox/52.0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;与之前的结果区别：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1)浏览器内核是Gecko内核，
2)浏览器版本是火狐的Firefox/52.0。从这里我们可以看出火狐浏览器是基于Gecko内核。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.用&lt;code&gt;谷歌浏览器&lt;/code&gt;模拟&lt;code&gt;手机&lt;/code&gt;访问，选择&lt;code&gt;iPhone6s&lt;/code&gt;，同样在调试工具控制台输入&lt;code&gt;navigator.userAgent&lt;/code&gt;, 会返回如下的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意看出现了&lt;code&gt;iPhone&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;4.用&lt;code&gt;谷歌浏览器&lt;/code&gt;模拟&lt;code&gt;平板设备&lt;/code&gt;访问，选择&lt;code&gt;iPad&lt;/code&gt;，同样在调试工具控制台输入&lt;code&gt;navigator.userAgent&lt;/code&gt;, 会返回如下的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;Mozilla/5.0 (iPad; CPU OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意看出现了&lt;code&gt;iPad&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;5.用&lt;code&gt;谷歌浏览器&lt;/code&gt;模拟&lt;code&gt;安卓设备&lt;/code&gt;，比如选择&lt;code&gt;Galaxy S5&lt;/code&gt;，同样在调试工具控制台输入&lt;code&gt;navigator.userAgent&lt;/code&gt;, 会返回如下的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.98 Mobile Safari/537.36&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意看出现了&lt;code&gt;Android&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;6.用&lt;code&gt;谷歌浏览器&lt;/code&gt;模拟&lt;code&gt;winPhone设备&lt;/code&gt;，比如选择&lt;code&gt;Microsoft Lumia 950&lt;/code&gt;，同样在调试工具控制台输入&lt;code&gt;navigator.userAgent&lt;/code&gt;, 会返回如下的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;Mozilla/5.0 (Windows Phone 10.0; Android 4.2.1; Microsoft; Lumia 950) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Mobile Safari/537.36 Edge/14.14263&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意看出现了&lt;code&gt;Windows Phone&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;通过以上的小测试，我们还可以能够发现一个规律：手机和平板设备访问时，&lt;code&gt;navigator.userAgent&lt;/code&gt;返回的字符串都会包含&lt;code&gt;Mobile&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&#34;useragent的用途-识别手机-平板设备&#34;&gt;userAgent的用途：识别手机、平板设备&lt;/h2&gt;

&lt;p&gt;刚才我们已经看到了手机和平板设备访问时，&lt;code&gt;navigator.userAgent&lt;/code&gt;返回的字符串都会包含&lt;code&gt;Mobile&lt;/code&gt;，可以利用这一点，来实现文章开头提出的需求，自动识别用户访问设备从而跳转对应的站点。&lt;/p&gt;

&lt;p&gt;PC端站点可以加上如下代码，自动跳转到移动端站点&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var ua = navigator.userAgent.toLowerCase();
if (/mobile|android|iphone|ipad|phone/i.test(ua)) {
   window.location.href = &amp;quot;http://m.example.com&amp;quot;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果在&lt;code&gt;微信&lt;/code&gt;中打开和在&lt;code&gt;手机浏览器&lt;/code&gt;打开网页执行的是不同的脚本的话，还可以通过&lt;code&gt;userAgent&lt;/code&gt;来判断是否是在&lt;code&gt;微信&lt;/code&gt;中打开的。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var ua = navigator.userAgent.toLowerCase();
if(/micromessenger/i.test(ua){
    //to do
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;本文首发于&lt;a href=&#34;http://www.wangxingfeng.com/&#34;&gt;Frank Wang的个人博客&lt;/a&gt;, 转载时请附上原文链接。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>快速启动Node服务器，调试本地静态文件代码</title>
      <link>http://www.wangxingfeng.com/anywhere-npm</link>
      <pubDate>Tue, 04 Apr 2017 17:41:35 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/anywhere-npm</guid>
      <description>

&lt;h2 id=&#34;如何在移动设备上测试静态文件&#34;&gt;如何在移动设备上测试静态文件？&lt;/h2&gt;

&lt;p&gt;现在移动端优先的情况下，前端工程师写好静态页面后，通常是需要测试不同的设备上效果，看看有没有兼容性的问题。谷歌浏览器有一个模拟手机的调试功能，一般，我们先用谷歌调试好。但毕竟是模拟的，为了保险起见，还是需要用真机测试的。&lt;/p&gt;

&lt;p&gt;可是静态的html文件怎么放到手机上调试呢？难不成把文件拷一份，放到不同的手机上？显然不是。&lt;/p&gt;

&lt;p&gt;NodeJS的一个&lt;code&gt;npm&lt;/code&gt;模块&lt;code&gt;anywhere&lt;/code&gt; 就可以快速地把你的当前目录变成一个静态文件服务器的根目录。&lt;/p&gt;

&lt;h2 id=&#34;anywhere-的安装及使用&#34;&gt;&lt;code&gt;anywhere&lt;/code&gt;的安装及使用&lt;/h2&gt;

&lt;p&gt;首先，安装Node。具体操作请看&lt;a href=&#34;https://nodejs.org&#34;&gt;Node的官网&lt;/a&gt;。傻瓜式地安装。&lt;/p&gt;

&lt;p&gt;其次，安装&lt;code&gt;anywhere&lt;/code&gt;。在命令行输入&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install anywhere -g
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;npm install + 模块名&lt;/code&gt; 从NPM服务器下载别人编写的第三方包的固定写法。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;-g&lt;/code&gt; 表示全局安装，在电脑的任何部门都可以使用anywhere模块。&lt;/p&gt;

&lt;p&gt;启动服务：&lt;/p&gt;

&lt;p&gt;在命令行切换到项目的根目录，然后输入&lt;code&gt;anywhere&lt;/code&gt;即可。服务启动后，会自动打开你的默认浏览器，&lt;a href=&#34;http://192.168.31.192:8000/。&#34;&gt;http://192.168.31.192:8000/。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;此时，如果你想在手机上测试index.html页面，你只需要在手机上访问 &lt;code&gt;http://192.168.31.192:8000/index.html&lt;/code&gt; 即可看到效果。&lt;/p&gt;

&lt;p&gt;当然，这里有一个前提，就是你的手机和电脑是在同一个局域网内的。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>人人都能说英语</title>
      <link>http://www.wangxingfeng.com/everybody-can-speak-english</link>
      <pubDate>Tue, 04 Apr 2017 15:31:56 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/everybody-can-speak-english</guid>
      <description>

&lt;h2 id=&#34;1-为什么要学习英语&#34;&gt;1.为什么要学习英语？&lt;/h2&gt;

&lt;h3 id=&#34;1-1真的有必要学习英语吗&#34;&gt;1.1真的有必要学习英语吗？&lt;/h3&gt;

&lt;p&gt;对于学生而言，英语是一门必修课，不得不学。对于上班族而言，有人因为工作需要而学习英语，比如外企员工、涉外导游、外贸从业者；有人出于兴趣爱好而学习英语，比如想看原版的英美电影、听英文歌，甚至看英文小说。&lt;/p&gt;

&lt;p&gt;然而，绝大多数的人，学习了十多年的英语，却从未真正掌握这门语言，原因何在？我觉得，学习目的不明确，导致没有内在的学习动力是一个很重要的原因。&lt;/p&gt;

&lt;p&gt;试着问问自己，为什么要学习英语？真的有必要花费时间在学习英语这件事情上吗？也许，你真的不用白费力气学英语。&lt;/p&gt;

&lt;h3 id=&#34;1-2谈谈英语给我带来的好处&#34;&gt;1.2谈谈英语给我带来的好处&lt;/h3&gt;

&lt;p&gt;1）休闲：去国外旅游，不需要导游，全程自助；&lt;/p&gt;

&lt;p&gt;2）娱乐：看最新的英剧、美剧或者英文电影，不用等待字幕组翻译字幕，不怕被剧透；&lt;/p&gt;

&lt;p&gt;3）工作：查阅技术文档，直接看官网，不用看他人蹩脚的翻译；&lt;/p&gt;

&lt;p&gt;4）学习：在Coursera、Khan Academy、FutureLearn 上学习自己感兴趣的课程。&lt;/p&gt;

&lt;h2 id=&#34;2-如何才能学好英语&#34;&gt;2.如何才能学好英语？&lt;/h2&gt;

&lt;h3 id=&#34;2-1刻意地练习&#34;&gt;2.1刻意地练习&lt;/h3&gt;

&lt;p&gt;我们是如何学习并掌握一项技能的呢？需要我们有多高的智商，或者需要有强大的毅力吗？&lt;/p&gt;

&lt;p&gt;如果你会开车，那么你可以试着回顾一下自己学习并掌握驾驶汽车这项技能的过程。你需要的仅仅是在教练的指导下，刻意地练习一段时间。&lt;/p&gt;

&lt;p&gt;英语，就像开车一样，是几乎人人都可以孰能生巧的技能，仅仅需要你刻意地练习一段时间。不需要纠结于词汇量，也不需要背诵各种语法规则以及各种规则的例外情况。&lt;/p&gt;

&lt;h3 id=&#34;2-2-词汇&#34;&gt;2.2 词汇&lt;/h3&gt;

&lt;p&gt;曾经有不少学生跟我说，老师，我每天拿个单词书背单词，可是第二天就全忘了，怎么办？&lt;/p&gt;

&lt;p&gt;如果是备考托福、SAT的学生跟我这么说，我会问他，你是正常人吗？  第一遍就记得住的都不是正常人！单词就得反反复复背几遍，同时TOP或者SAT真题练习别偷懒。等你在做题中遇到这些词汇，你就认识他们了。&lt;/p&gt;

&lt;p&gt;如果是实用口语班的学生，我通常会粗暴地说：背个毛线的单词书！好好练习常用的句型就够了，有空多看看美剧。&lt;/p&gt;

&lt;h3 id=&#34;2-3-语法&#34;&gt;2.3 语法&lt;/h3&gt;

&lt;p&gt;语法重要吗？废话，当然重要，但是没有你想象得那么重要。最基本的语法，尤其是句法还是要懂一点。&lt;/p&gt;

&lt;p&gt;什么主谓宾、定状补同，还有就是三大从句还是要会的，不然你看到复杂的句子，就一脸懵逼了。只看单词都认识，放一起就不知所云的，多半是没搞明白三大从句，不知道怎么断句的。&lt;/p&gt;

&lt;p&gt;如果不是英语专业，想要专研语法的，就别整什么薄冰、张道真的语法书。推荐两本比较好的语法书：旋元佑的《文法俱乐部》、张满胜《英语语法新思维》。&lt;/p&gt;

&lt;h3 id=&#34;2-4-一直在学习-从来没实践&#34;&gt;2.4 一直在学习，从来没实践&lt;/h3&gt;

&lt;p&gt;既然人人都可以习得英语这项技能，为什么有那么多人花费大量时间、金钱仍然无法熟练使用英语？因为一直在学习，从来没有实际使用过英语！&lt;/p&gt;

&lt;p&gt;在国内，没有老外朋友，工作上也用不上英语，怎么用起来呢？&lt;/p&gt;

&lt;p&gt;看看美剧、听听英文歌、阅读英文小说、看BBC的纪录片、 听VOA的新闻、看TED上的视频、交个外国朋友或网友。只要你想，你总能找到使用英语的场景。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>用Hugo快速搭建个人静态博客</title>
      <link>http://www.wangxingfeng.com/build-blog-with-hugo</link>
      <pubDate>Mon, 03 Apr 2017 20:49:23 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/build-blog-with-hugo</guid>
      <description>

&lt;p&gt;最近心血来潮，想要重新折腾一番自己的博客。于是，发现了Hugo比之前使用的Jekyll更好用。本文是个人参照&lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34;&gt;Hugo官网&lt;/a&gt; 搭建个人博客的记录。&lt;/p&gt;

&lt;h2 id=&#34;step-1-install-hugo-下载-安装hugo&#34;&gt;Step 1. Install Hugo 下载、安装Hugo&lt;/h2&gt;

&lt;p&gt;下载地址：&lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;https://github.com/spf13/hugo/releases&lt;/a&gt;。
根据自己的操作系统，下载对应的安装包。我的操作系统是&lt;code&gt;Win7 64bit&lt;/code&gt;， 选择了&lt;code&gt;hugo_0.19_Windows-64bit.zip&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;下载完成之后，解压的文件夹包含以下3个文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo_0.19_windows_amd64.exe
LICENSE.md
README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将 &lt;code&gt;hugo_0.19_windows_amd64.exe&lt;/code&gt; 重命名为&lt;code&gt;hugo.exe&lt;/code&gt;。在你的软件安装盘新增名为&lt;code&gt;hugo&lt;/code&gt;的文件目录，在里面在新建一个&lt;code&gt;bin&lt;/code&gt;子目录。然后将&lt;code&gt;hugo.exe&lt;/code&gt;放到&lt;code&gt;hugo\bin&lt;/code&gt;目录下。再将这个&lt;code&gt;bin&lt;/code&gt;目录的路径添加到&lt;code&gt;系统环境变量&lt;/code&gt;中。&lt;/p&gt;

&lt;p&gt;完成以上步骤后，打开命令行输入&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果得到如下信息，说明安装成功。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo is the main command, used to build your Hugo site.

Hugo is a Fast and Flexible Static Site Generator
built with love by spf13 and friends in Go.

Complete documentation is available at http://gohugo.io/.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-2-创建一个名为blog的hugo站点&#34;&gt;Step 2. 创建一个名为blog的Hugo站点&lt;/h2&gt;

&lt;p&gt;我希望在E盘下创建站点，所以我先切换目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd e:
e:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后输入命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new site blog 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;得到如下提示创建成功的信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Congratulations! Your new Hugo site is created in E:\blog.

Just a few more steps and you&#39;re ready to go:

1. Download a theme into the same-named folder.
Choose a theme from https://themes.gohugo.io/, or
create your own with the &amp;quot;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;quot; command.
2. Perhaps you want to add some content. You can add single files
with &amp;quot;hugo new &amp;lt;SECTIONNAME&amp;gt;\&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;&amp;quot;.
3. Start the built-in live server via &amp;quot;hugo server&amp;quot;.

Visit https://gohugo.io/ for quickstart guide and full documentation.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进入该目录，可以看到自动生成了5个目录和一个配置文件config.toml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;|-- archetypes
|-- content   #存放内容的目录
|-- data      
|-- layouts   
|-- static    #存放静态资源（图片,css,js）
|-- themes    #存放主题
|-- config.toml  #配置文件
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-3-添加内容&#34;&gt;Step 3. 添加内容&lt;/h2&gt;

&lt;p&gt;切换到该目录下，然后输入如下命令，会在&lt;code&gt;content&lt;/code&gt;的目录下创建&lt;code&gt;post&lt;/code&gt;目录，在&lt;code&gt;post&lt;/code&gt;目录下创建名为&lt;code&gt;test.md&lt;/code&gt;的文件。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd blog
hugo new post/test.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;提示文件创建成功：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;E:\blog\content\post\test.md created
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;用文本编辑器打开文件&lt;code&gt;test.md&lt;/code&gt;文件
可以看到如下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+++
date = &amp;quot;2017-01-02T17:45:06+08:00&amp;quot;  #创建文件的时间
title = &amp;quot;test&amp;quot;                      #文件的标题
draft = true                        # 是否为草稿

+++
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上述内容为自动创建的与文章有关的内容。自己也可以在两个&lt;code&gt;+++&lt;/code&gt;之间添加如下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;image = &amp;quot;hugo.png&amp;quot;            #指定图片。
category = &amp;quot;test&amp;quot;             #文章的类别
tags = [&amp;quot;Hugo&amp;quot;, &amp;quot;intro&amp;quot;]      #文章的标签分类。
url = &amp;quot;new_start&amp;quot;             #该文章访问时的相对的url地址，默认为文件名。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更多的设置，可以参考&lt;a href=&#34;https://gohugo.io/content/front-matter/&#34;&gt;官方文档&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;以后写博客文章就是这样创建&lt;code&gt;markdown&lt;/code&gt;文件, 之后通过&lt;code&gt;Hugo&lt;/code&gt;编译成静态的html文件。&lt;/p&gt;

&lt;h2 id=&#34;step-4-添加主题&#34;&gt;Step 4. 添加主题&lt;/h2&gt;

&lt;p&gt;官方提供了多种主题可供选择，具体在 &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;https://themes.gohugo.io/&lt;/a&gt; 可以找到。&lt;/p&gt;

&lt;p&gt;找到想要的主题后，切换到&lt;code&gt;themes&lt;/code&gt;目录（该目录可以存放多个不同的主题）。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd themes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由于需要使用到Git下载主题，以及版本管理和代码推送。需要事先下载安装好&lt;a href=&#34;https://git-for-windows.github.io/&#34;&gt;Git&lt;/a&gt;，关于如何安装和使用Git，可以参考我之前的一篇文章：&lt;a href=&#34;http://www.wangxingfeng.com/git-intro/&#34;&gt;Git学习笔记&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;把选定的主题下载到&lt;code&gt;themes&lt;/code&gt;目录下。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/dim0627/hugo-icarus-theme.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-5-启动服务-本地预览&#34;&gt;Step 5. 启动服务，本地预览&lt;/h2&gt;

&lt;p&gt;先从&lt;code&gt;themes&lt;/code&gt;目录下退回到&lt;code&gt;blog&lt;/code&gt;目录, 然后启动服务。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ..
hugo server --theme=hugo-icarus-theme --buildDrafts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器中打开 &lt;code&gt;[http://localhost:1313/](https://themes.gohugo.io/)&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;step-6-修改配置文件-config-toml&#34;&gt;Step 6. 修改配置文件&lt;code&gt;config.toml&lt;/code&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;languageCode = &amp;quot;zh-cn&amp;quot;
title = &amp;quot;Frank Wang&#39;s Coding World&amp;quot;
baseurl = &amp;quot;http://www.wangxingfeng.com/&amp;quot;  

[Params]
    Author =&amp;quot;Frank Wang&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-7-生成网站&#34;&gt;Step 7.  生成网站&lt;/h2&gt;

&lt;h3 id=&#34;1-改变文章-draft-草稿-状态&#34;&gt;1.改变文章&lt;code&gt;draft&lt;/code&gt;（草稿）状态：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;hugo undraft content/post/*.md
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-启动-hugo-生成发布文件到-public-目录下&#34;&gt;2. 启动&lt;code&gt;hugo&lt;/code&gt;, 生成发布文件到&lt;code&gt;public&lt;/code&gt;目录下。&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;hugo --theme=hugo-icarus-theme
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-8-托管到-github-pages&#34;&gt;Step 8. 托管到&lt;code&gt;GitHub Pages&lt;/code&gt;&lt;/h2&gt;

&lt;h3 id=&#34;1-使用-git-来进行版本管理&#34;&gt;1. 使用&lt;code&gt;Git&lt;/code&gt;来进行版本管理&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;git init
echo &amp;quot;/public/&amp;quot; &amp;gt;&amp;gt; .gitignore
echo &amp;quot;/themes/&amp;quot; &amp;gt;&amp;gt; .gitignore
git add --all
git commit -m &amp;quot;Initial commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-创建-git-远程仓库&#34;&gt;2. 创建&lt;code&gt;Git&lt;/code&gt; 远程仓库：&lt;/h3&gt;

&lt;p&gt;登录你的&lt;code&gt;GitHub&lt;/code&gt;. 创建一个新的仓库，仓库名为&lt;code&gt;Github用户.github.io&lt;/code&gt;
比如我的是&lt;code&gt;frankwang0909.github.io&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;3-添加-git-远程仓库-并提交代码&#34;&gt;3. 添加&lt;code&gt;Git&lt;/code&gt; 远程仓库，并提交代码。&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd public
git init
git remote add origin git@github.com:frankwang0909/frankwang0909.github.io.git

git add --all
git commit -m &amp;quot;blog added&amp;quot;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-以后有内容改动-提交代码&#34;&gt;4.以后有内容改动，提交代码.&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;(cd ..; hugo --theme=hugo_theme_robust)
git add --all
git commit -m &amp;quot;&amp;lt;some change message&amp;gt;&amp;quot;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>代码换行导致的inline元素间距bug</title>
      <link>http://www.wangxingfeng.com/fix-inline-bug</link>
      <pubDate>Wed, 11 Jan 2017 21:48:19 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/fix-inline-bug</guid>
      <description>

&lt;h2 id=&#34;inline-元素&#34;&gt;inline 元素：&lt;/h2&gt;

&lt;p&gt;如果inline元素(span, strong, b, em, i等)代码换行，它们之间会产生我们不希望的间隔。通过设置&lt;code&gt;margin:0&lt;/code&gt;或者&lt;code&gt;padding:0&lt;/code&gt; , 这个都间隔仍然存在，说明这个间隔并不是margin或者padding。&lt;/p&gt;

&lt;style type=&#34;text/css&#34;&gt;
    .inline p span:first-child {
        background-color: #66d9ef;
    }
    .inline p span:nth-child(2) {
        background-color: #c191c1;
    }
    .inline p span:nth-child(3) {
        background-color: #9fe89f;
    }
    .inline p span:nth-child(4) {
        background-color: #8787f1;
    }
    .inline p span:last-child{
        background-color: #464141;
    }
    .inline p span{
        font-size:16px;
        color:#fff;
        line-height:30px;
    }

    .inline-block span{
        display: inline-block;
        width:20%;
    }
    .fs0{
        font-size: 0;
    }
&lt;/style&gt;

&lt;div class=&#34;inline &#34;&gt;
    &lt;p&gt;
        &lt;span&gt;inline元素 1&lt;/span&gt;
        &lt;span&gt;inline元素 2&lt;/span&gt;
        &lt;span&gt;inline元素 3&lt;/span&gt;
    &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;是否为了不消除这个间隔，就必须把inline元素的html代码写在一行内呢？答案是否定的。
开发的时候，为了方便阅读和调试，我们习惯于把代码写成这样：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;
    &amp;lt;span&amp;gt;inline元素 1&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;inline元素 2&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;inline元素 3&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;inline元素 4&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;inline元素 5&amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法：设置父元素&lt;code&gt;font-size:0&lt;/code&gt;，再给子元素单独设置&lt;code&gt;font-size&lt;/code&gt;，修复bug。
&lt;div class=&#34;inline &#34;&gt;
    &lt;p class=&#34;fs0&#34;&gt;
        &lt;span&gt;inline元素 1&lt;/span&gt;
        &lt;span&gt;inline元素 2&lt;/span&gt;
        &lt;span&gt;inline元素 3&lt;/span&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;inline-block-元素&#34;&gt;inline-block 元素：&lt;/h2&gt;

&lt;p&gt;要在一行展示多个并列的元素，除了通过设置浮动&lt;code&gt;float:left;float:right&lt;/code&gt;，我们还可以通过设置&lt;code&gt;display:inline-block&lt;/code&gt; 把inline元素或block元素，转换成一个可以设置高度和宽度的inline-block元素。&lt;/p&gt;

&lt;p&gt;如果有5个&lt;code&gt;inline-block&lt;/code&gt;元素，设置它们的宽度为&lt;code&gt;20%&lt;/code&gt;。我们期望它们是在一行展示的。但是因为html代码换行产生了间距，导致无法在一行内显示。
&lt;div class=&#34;inline &#34;&gt;
    &lt;p class=&#34;inline-block&#34;&gt;
        &lt;span&gt;inline-block元素 1&lt;/span&gt;
        &lt;span&gt;inline-block元素 2&lt;/span&gt;
        &lt;span&gt;inline-block元素 3&lt;/span&gt;
        &lt;span&gt;inline-block元素 4&lt;/span&gt;
        &lt;span&gt;inline-block元素 5&lt;/span&gt;
    &lt;/p&gt;
&lt;/div&gt;
解决方法: 设置父元素&lt;code&gt;font-size:0&lt;/code&gt;，再给子元素单独设置&lt;code&gt;font-size&lt;/code&gt;。
&lt;div class=&#34;inline &#34;&gt;
    &lt;p class=&#34;inline-block fs0&#34;&gt;
        &lt;span&gt;inline-block元素 1&lt;/span&gt;
        &lt;span&gt;inline-block元素 2&lt;/span&gt;
        &lt;span&gt;inline-block元素 3&lt;/span&gt;
        &lt;span&gt;inline-block元素 4&lt;/span&gt;
        &lt;span&gt;inline-block元素 5&lt;/span&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JavaScript的正则表达式</title>
      <link>http://www.wangxingfeng.com/js-reg</link>
      <pubDate>Sun, 18 Dec 2016 21:56:37 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/js-reg</guid>
      <description>

&lt;h2 id=&#34;1-基本概念&#34;&gt;1.基本概念&lt;/h2&gt;

&lt;p&gt;正则表达式(&lt;code&gt;Regular Expression&lt;/code&gt;)是一个字符串，定义了某个规则，按照这种规则来描述、匹配一系列符合条件的字符串。&lt;/p&gt;

&lt;h2 id=&#34;2-通配符&#34;&gt;2.通配符&lt;/h2&gt;

&lt;p&gt;当前目录下查找文件(linux 命令行)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;find ./ -name *.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-在线图形工具&#34;&gt;3.在线图形工具：&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;[https://regexper.com/](https://regexper.com/)&lt;/code&gt; 是一款非常实用的正则表达式图形化工具。你也可以&lt;a href=&#34;https://regexper.com/&#34;&gt;下载&lt;/a&gt;到本地，运行速度更快&lt;/p&gt;

&lt;h2 id=&#34;4-ide中可以支持正则表达式&#34;&gt;4.IDE中可以支持正则表达式：&lt;/h2&gt;

&lt;p&gt;我用的是编辑器是&lt;code&gt;Sublime Text 3&lt;/code&gt;。快捷键&lt;code&gt;Ctrl+F&lt;/code&gt;查找字符串，&lt;code&gt;Ctrl+H&lt;/code&gt;替换字符串，在底部唤出的面板左上角有开启正则表达式（快捷键&lt;code&gt;Alt+R&lt;/code&gt;）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://www.wangxingfeng.com
http://m.wangxingfeng.com
http://cosmic.wangxingfeng.com
http://blog.wangxingfeng.com
http://img.wangxingfeng.com/1234.jpg
http://img.wangxingfeng.com/158.png
https://img.wangxingfeng.com/128744.jpg
http://img.wangxingfeng.com/1285.jpg
http://img.wangxingfeng.com/7884.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Sublime&lt;/code&gt;中找出上面的&lt;code&gt;url&lt;/code&gt;中&lt;code&gt;http&lt;/code&gt;协议的&lt;code&gt;jpg&lt;/code&gt;文件，去掉其协议头&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Find What: http:\/\/(.+\.jpg)
replace with: $1
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;5-javascript中实例化-regexp-对象&#34;&gt;5.JavaScript中实例化&lt;code&gt;RegExp&lt;/code&gt;对象&lt;/h2&gt;

&lt;p&gt;5.1.字面量:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var reg = /\d/; 
var reg2 = /[a-zA-Z0-9]/g;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5.2.构造函数:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var reg = new RegExp(\d); 
var reg = new RegExp(&#39;[a-zA-Z0-9]&#39;, &#39;g&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;6-修饰符&#34;&gt;6.修饰符：&lt;/h2&gt;

&lt;p&gt;6.1.&lt;code&gt;g&lt;/code&gt;(global):表示全局匹配，不添加则默认匹配到第一个字符串。&lt;/p&gt;

&lt;p&gt;6.2.&lt;code&gt;i&lt;/code&gt;(ignore case):表示忽略大小写,不添加则默认大小写敏感。&lt;/p&gt;

&lt;p&gt;6.3.&lt;code&gt;m&lt;/code&gt;(multiple lines):表示多行匹配。&lt;/p&gt;

&lt;h2 id=&#34;7-原意文本字符-和元字符&#34;&gt;7.原意文本字符 和元字符：&lt;/h2&gt;

&lt;p&gt;7.1.原意文本字符：表示字符的原本含义，如&lt;code&gt;a&lt;/code&gt;表示小写字母a，&lt;code&gt;1&lt;/code&gt;表示数字1。&lt;/p&gt;

&lt;p&gt;7.2.元字符：在正则表达式中有特殊含义的非字母字符，如星号&lt;code&gt;*&lt;/code&gt;，问号&lt;code&gt;？&lt;/code&gt;等。&lt;/p&gt;

&lt;p&gt;7.3.常用元字符及其含义：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1）[]:构建字符类，范围类等；
2）{}:量词，表示字符的个数；
3）():构建分组；
4）*：表示任意个字符；可理解为{0,}；
5）？：表示最多有一个该字符{0,1}；
6）+：表示至少有一个该字符{1,}；
7）^: 取反；
8）\n: 换行符；
9）\r: 回车符；
10）\0: 空字符；
11）\t: 水平制表符；
12）\v:  垂直制表符；
13）\f: 换页符。
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;8-字符类&#34;&gt;8.字符类：&lt;/h2&gt;

&lt;p&gt;8.1.通常，正则表达式一个字符对应字符串一个字符，如&lt;code&gt;/a/&lt;/code&gt;对应字母a。元字符&lt;code&gt;[]&lt;/code&gt;构建一个字符类，如&lt;code&gt;[abc]&lt;/code&gt;可以匹配字符a或b或c中的任意一个。在浏览器调试界面控制台输入：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;a1b2c3d4a&#39;.match(/[abc]/g);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;会得到匹配的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;a&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;8.2字符类取反：&lt;/p&gt;

&lt;p&gt;在&lt;code&gt;[]&lt;/code&gt;内使用元字符^创建反向类，即匹配不属于某个字符类的字符串。如&lt;code&gt;[^abc]&lt;/code&gt;匹配不是字符a、b、c的内容。
在浏览器调试界面控制台输入：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;a1b2c3d4a&#39;.match(/[^abc]/g);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;会得到匹配的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[&amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;3&amp;quot;, &amp;quot;d&amp;quot;, &amp;quot;4&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;8.3范围类：&lt;/p&gt;

&lt;p&gt;1)&lt;code&gt;[a-z]&lt;/code&gt;表示：a到z的任意一个字符；&lt;/p&gt;

&lt;p&gt;在浏览器调试界面控制台输入：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;a1b2c3d4a&#39;.match(/[a-z]/g);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;会得到匹配的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;d&amp;quot;, &amp;quot;a&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2)&lt;code&gt;[a-zA-Z]&lt;/code&gt;表示：a到z以及A到Z的任意一个字符。&lt;/p&gt;

&lt;p&gt;在浏览器调试界面控制台输入：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;a1B2Zc3d4&#39;.match(/[a-zA-Z]/g);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;会得到匹配的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[&amp;quot;a&amp;quot;, &amp;quot;B&amp;quot;, &amp;quot;Z&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;d&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;8.4 预定义类（简写）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1) /./ =&amp;gt; /[^\r\n]/  除了回车符和换行符之外的任何字符
2) /\d/ =&amp;gt; [0-9]  数字字符
3) /\D/ =&amp;gt; [^0-9] 非数字字符
4) /\s/ =&amp;gt; 空白字符
5) /\S/ =&amp;gt; 非空白字符
6) /\w/ =&amp;gt; [a-zA-Z0-9_]单词字符（字母，数字，下划线. 
7) /\W/ =&amp;gt; [^a-zA-Z0-9_]非单词字符
8) \b: 单词边界
9) \B：非单词边界；
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;9.量词：在字符后跟一个{}表示重复前面字符的次数。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1.) /\d{1,20}/: 1~20个数字；
2.) /\d*/ =&amp;gt; /\d{0,}/: 任意个数字;
3.) /\d+/ =&amp;gt; /\d{1,}/  :至少一个数字；
4.) /\d?/ =&amp;gt; /\d{0,1}/ :之多一个数字；
5.) /\d{3}/ : 3个数字
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;10-贪婪模式与非贪婪模式&#34;&gt;10.贪婪模式与非贪婪模式：&lt;/h2&gt;

&lt;p&gt;10.1.贪婪模式：正则表达式会尽可能多地去匹配字符。&lt;/p&gt;

&lt;p&gt;例如，下面的正则表达式，匹配3到6个数字的字符串，默认会尽可能多地去匹配。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;b12345678A5879e123&#39;.match(/\d{3,6}/g)

&amp;gt;&amp;gt;&amp;gt;[&amp;quot;123456&amp;quot;, &amp;quot;5879&amp;quot;, &amp;quot;123&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;10.2.非贪婪模式：在量词后加一个问号, 尽可能少地去匹配字符串。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;b12345678A5879e123&#39;.match(/\d{3,6}?/g)

&amp;gt;&amp;gt;&amp;gt;[&amp;quot;123&amp;quot;, &amp;quot;456&amp;quot;, &amp;quot;587&amp;quot;, &amp;quot;123&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;11-分组&#34;&gt;11.分组：&lt;/h2&gt;

&lt;p&gt;11.1.括号“()”把字符串变成分组，使量词作用于分组。&lt;/p&gt;

&lt;p&gt;示例代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;abcabcabccc&#39;.match(/abc{3}/g); 
&amp;gt;&amp;gt;&amp;gt;[&amp;quot;abccc&amp;quot;]

&#39;abcabcabccc&#39;.match(/(abc){3}/g);
&amp;gt;&amp;gt;&amp;gt;[&amp;quot;abcabcabc&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;11.2.逻辑或：竖线 “|” 作用于分组, 可以表示选择多个分支中的一个。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;whatwhaowho&#39;.match(/wh(at|o)/g)；
&amp;gt;&amp;gt;&amp;gt;[&amp;quot;what&amp;quot;, &amp;quot;who&amp;quot;]

&#39;whatwhaowhowhy&#39;.match(/wh(at|o|y)/g)
&amp;gt;&amp;gt;&amp;gt;[&amp;quot;what&amp;quot;, &amp;quot;who&amp;quot;, &amp;quot;why&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;11.3.捕获分组，反向引用&lt;/p&gt;

&lt;p&gt;想要把如下日期格式化：&lt;code&gt;2016-01-20&lt;/code&gt; =&amp;gt; &lt;code&gt;01/20/2016&lt;/code&gt;；可以这样写&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;2016-01-20&#39;.replace(/(\d{4})-(\d{2})-(\d{2})/g, &amp;quot;$2/$3/$1&amp;quot;)
&amp;gt;&amp;gt;&amp;gt;&amp;quot;01/20/2016&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;$&lt;/code&gt;加上一个数字，数字对应的是分组的序号，第一个分组的内容用&lt;code&gt;$1&lt;/code&gt;来捕获，第二分组的内容用&lt;code&gt;$2&lt;/code&gt;来捕获，以此类推。&lt;/p&gt;

&lt;p&gt;11.4.忽略分组：分组内加上&lt;code&gt;?:&lt;/code&gt;表示忽略该分组，而捕获该组的内容。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;2016-01-20&#39;.replace(/(?:\d{4})-(\d{2})-(\d{2})/g, &amp;quot;$1/$2&amp;quot;)
&amp;gt;&amp;gt;&amp;gt;&amp;quot;01/20&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;12-断言&#34;&gt;12.断言：&lt;/h2&gt;

&lt;p&gt;12.1.正则表达式从文本头部向文本尾部开始解析，文本尾部方向称为“前”，反之，为“后”。&lt;/p&gt;

&lt;p&gt;12.2.前瞻与后顾：正则表达式匹配到规则的时候，向前检查是否符合断言，称为&amp;rdquo;前瞻&amp;rdquo;。向后检查是否符合断言则称为&amp;rdquo;后顾&amp;rdquo;。JavaScript不支持后顾。&lt;/p&gt;

&lt;p&gt;12.3.正向/肯定前瞻：向前符合断言。exp(?=assert)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &#39;5a68cz7&#39;.match(/\d(?=[a-z])/g);
    &amp;gt;&amp;gt;&amp;gt;[&amp;quot;5&amp;quot;, &amp;quot;8&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;12.4.负向/否定前瞻：向前不符合断言。exp(?!assert)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;5a68cz7&#39;.match(/\d(?=[a-z])/g);
&amp;gt;&amp;gt;&amp;gt;[&amp;quot;6&amp;quot;, &amp;quot;7&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;13-regexp对象属性&#34;&gt;13.RegExp对象属性&lt;/h3&gt;

&lt;p&gt;13.1.&lt;code&gt;global&lt;/code&gt;: 是否全文搜索（只读属性）;&lt;/p&gt;

&lt;p&gt;13.2.&lt;code&gt;ignoreCase&lt;/code&gt;：是否大小写敏感（只读属性）;&lt;/p&gt;

&lt;p&gt;13.3.&lt;code&gt;multline&lt;/code&gt;: 是否多行（只读属性）;&lt;/p&gt;

&lt;p&gt;13.4.&lt;code&gt;source&lt;/code&gt;：正则表达式文本内容；（只读属性）;&lt;/p&gt;

&lt;p&gt;13.5.&lt;code&gt;lastIndex&lt;/code&gt;: 当前表达式匹配内容的最后一个字符的下一个位置。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var reg1 = /\d{3,5}-\w{6}/, reg2 = /\d{3,5}-\w{6}/gim;
reg1.global
&amp;gt;&amp;gt;&amp;gt;false
reg1.ignoreCase
&amp;gt;&amp;gt;&amp;gt;false
reg1.multiline
&amp;gt;&amp;gt;&amp;gt;false
reg2.global
&amp;gt;&amp;gt;&amp;gt;true
reg2.multiline
&amp;gt;&amp;gt;&amp;gt;true
reg2.ignoreCase
&amp;gt;&amp;gt;&amp;gt;true
reg1.source
&amp;gt;&amp;gt;&amp;gt;&amp;quot;\d{3,5}-\w{6}&amp;quot;
reg2.source
&amp;gt;&amp;gt;&amp;gt;&amp;quot;\d{3,5}-\w{6}&amp;quot;
reg1.source == reg2.source
&amp;gt;&amp;gt;&amp;gt;true
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;14-regexp的方法-test-exec&#34;&gt;14.RegExp的方法：&lt;code&gt;test()&lt;/code&gt;, &lt;code&gt;exec()&lt;/code&gt;;&lt;/h2&gt;

&lt;p&gt;14.1.&lt;code&gt;RegExp.test(string)&lt;/code&gt;: 测试某个字符串是否能够匹配该正则表达式。参数为字符串；返回值为布尔值。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var reg1 = /\d/, reg2 = /\d/g;
reg1.test(&#39;a12ab&#39;);
&amp;gt;&amp;gt;&amp;gt;true

reg2.test(&#39;a12ab&#39;);
&amp;gt;&amp;gt;&amp;gt;true

reg2.test(&#39;a12ab&#39;);
&amp;gt;&amp;gt;&amp;gt;true

reg2.test(&#39;a12ab&#39;); //注意这里变成`false`了就是因为每执行一次，`lastIndex`属性变了一次导致的。所以用`test`方法的RegExp不要用全局匹配模式。
&amp;gt;&amp;gt;&amp;gt;false

reg2.test(&#39;a12ab&#39;);
&amp;gt;&amp;gt;&amp;gt;true

reg2.test(&#39;a12ab&#39;);
&amp;gt;&amp;gt;&amp;gt;true

while(reg2.test(&#39;a12ab&#39;)){
    console.log(&#39;reg2.lastIndex:&#39; +reg2.lastIndex);
}
&amp;gt;&amp;gt;&amp;gt; reg2.lastIndex:2
&amp;gt;&amp;gt;&amp;gt; reg2.lastIndex:3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;14.2.&lt;code&gt;RegExp.exec(string)&lt;/code&gt;: 返回匹配信息的数组。&lt;/p&gt;

&lt;p&gt;如果没有匹配的文本，则返回&lt;code&gt;null&lt;/code&gt;，否则返回一个结果数组。非全局匹配模式，&lt;code&gt;lastIndex&lt;/code&gt;为0，不会变。全局模式下，每次执行，&lt;code&gt;lastIndex&lt;/code&gt;都会跟着改变。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var reg1 = /\d+(\w)\d/, reg2 = /\d+(\w)\d/g, str=&amp;quot;1a2ce58g79ht&amp;quot;;
var result = reg1.exec(str);
console.log(reg1.lastIndex + &#39;\t&#39; + result.index+ &#39;\t&#39; + result.toString());
&amp;gt;&amp;gt;&amp;gt; 0   0   1a2,a
while(result=reg2.exec(str)){
    console.log(&#39;reg2.lastIndex:&#39;+ reg2.lastIndex + &#39;\t&#39; + &#39;result.index:&#39;+ result.index+ &#39;\t&#39; + result.toString());    
}
&amp;gt;&amp;gt;&amp;gt;reg2.lastIndex:3 result.index:0  1a2,a
&amp;gt;&amp;gt;&amp;gt;reg2.lastIndex:9 result.index:5  58g7,g
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;15-string-的一些正则操作-查找-替换-切分等-方法-match-search-replace-split&#34;&gt;15.&lt;code&gt;String&lt;/code&gt;的一些正则操作(查找、替换、切分等)方法：&lt;code&gt;match()&lt;/code&gt;、&lt;code&gt;search()&lt;/code&gt;、&lt;code&gt;replace()&lt;/code&gt;、&lt;code&gt;split()&lt;/code&gt;;&lt;/h2&gt;

&lt;p&gt;15.1. &lt;code&gt;string.match(RegExp)&lt;/code&gt;：&lt;/p&gt;

&lt;p&gt;1)非全局模式下，返回第一个匹配结果及其&lt;code&gt;index&lt;/code&gt;以及原字符串的引用(见示例代码)；&lt;/p&gt;

&lt;p&gt;2)全局模式下，返回所有匹配结果为元素的数组；&lt;/p&gt;

&lt;p&gt;3)匹配失败则返回&lt;code&gt;null&lt;/code&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var reg1 = /\d{4}-\d{2}-\d{2}/;
var reg2 = /\d{4}-\d{2}-\d{2}/g;
var str = &amp;quot;2016-10-01 2017-10-01 20181001&amp;quot;;
var matchArray1 = str.match(reg1);
var matchArray2 = str.match(reg2);
console.log(matchArray1);
&amp;gt;&amp;gt;&amp;gt;[&amp;quot;2016-10-01&amp;quot;, index: 0, input: &amp;quot;2016-10-01 2017-10-01 20181001&amp;quot;]

console.log(matchArray2);
&amp;gt;&amp;gt;&amp;gt;[&amp;quot;2016-10-01&amp;quot;, &amp;quot;2017-10-01&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;15.2.&lt;code&gt;string.search(RegExp)&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;参数可以是&lt;code&gt;子字符串&lt;/code&gt;也可以是&lt;code&gt;正则表达式&lt;/code&gt;。这个方法用来寻找某个子字符串或者正则表达式在该字符串中第一次匹配成功的位置，如果不成功，则返回&lt;code&gt;-1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;15.3.&lt;code&gt;string.replace(RegExp, replacement)&lt;/code&gt;：&lt;/p&gt;

&lt;p&gt;1)这个方法用来进行正则表达式替换，将&lt;code&gt;RegExp&lt;/code&gt;能匹配的文本替换成第二个参数&lt;code&gt;replacement&lt;/code&gt;。默认只进行一次匹配。如果设定为全局模式，则所有能匹配的文本都会替换。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;2016-10-01 2017-10-01 20181001&amp;quot;.replace(/\d{4}-\d{2}-\d{2}/, &amp;quot;Date&amp;quot;);
&amp;gt;&amp;gt;&amp;gt;&amp;quot;Date 2017-10-01 20181001&amp;quot;

&amp;quot;2016-10-01 2017-10-01 20181001&amp;quot;.replace(/\d{4}-\d{2}-\d{2}/g, &amp;quot;Date&amp;quot;);
&amp;gt;&amp;gt;&amp;gt;&amp;quot;Date Date 20181001&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2)如果第二个参数字符串中引用分组，可以使用&lt;code&gt;$1&lt;/code&gt;表示第一个分组，&lt;code&gt;$2&lt;/code&gt;表示第二个分组，以此类推。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;2016-10-01 2017-10-01 20181001&amp;quot;.replace(/(\d{4})-(\d{2})-(\d{2})/, &amp;quot;$2/$3/$1&amp;quot;);
&amp;gt;&amp;gt;&amp;gt;&amp;quot;10/01/2016 2017-10-01 20181001&amp;quot;

&amp;quot;2016-10-01 2017-10-01 20181001&amp;quot;.replace(/(\d{4})-(\d{2})-(\d{2})/g, &amp;quot;$2/$3/$1&amp;quot;);
&amp;gt;&amp;gt;&amp;gt;&amp;quot;10/01/2016 10/01/2017 20181001&amp;quot;

&amp;quot;2016-10-01 2017-10-01 20181001&amp;quot;.replace(/(\d{4})-?(\d{2})-?(\d{2})/g, &amp;quot;$2/$3/$1&amp;quot;);
&amp;gt;&amp;gt;&amp;gt;&amp;quot;10/01/2016 10/01/2017 10/01/2018&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3)如果要在第二个参数中表示&lt;code&gt;$&lt;/code&gt;字符，则必须使用&lt;code&gt;$$&lt;/code&gt;转义。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;the price is 12.99&amp;quot;.replace(/([\d+\.\d{0,2}|\d+])/, &amp;quot;$$$1&amp;quot;);
&amp;gt;&amp;gt;&amp;gt;&amp;quot;the price is $12.99&amp;quot;

&amp;quot;the price is 12&amp;quot;.replace(/([\d+\.\d{0,2}|\d+])/, &amp;quot;$$$1&amp;quot;);
&amp;quot;the price is $12&amp;quot;

&amp;quot;the price is 12.99&amp;quot;.replace(/(\d+\.\d{0,2})/, &amp;quot;￥$1&amp;quot;);
&amp;gt;&amp;gt;&amp;gt;&amp;quot;the price is ￥12.99&amp;quot;

&amp;quot;the price is 12&amp;quot;.replace(/([\d+\.\d{0,2}|\d+])/, &amp;quot;$&amp;quot;);
&amp;quot;the price is $12&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4)第二个参数还可以是函数。&lt;/p&gt;

&lt;p&gt;下面的例子展示了如何将t开头的单词转换为大写。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;one two three&amp;quot;.replace(/\bt[a-zA-Z]+\b/g, function(m){
    return m.toUpperCase();
});
&amp;gt;&amp;gt;&amp;gt;&amp;quot;one TWO THREE&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;15.4. &lt;code&gt;string.split(RegExp)&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;这个方法使用一个正则表达式切分字符串，正则表达式是否使用了全局模式对结果没有影响。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;one two three&amp;quot;.split(/s+/);
&amp;gt;&amp;gt;&amp;gt;[&amp;quot;one two three&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>推荐几个常用的CDN公共库</title>
      <link>http://www.wangxingfeng.com/cdn</link>
      <pubDate>Sat, 20 Aug 2016 21:07:46 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/cdn</guid>
      <description>

&lt;h2 id=&#34;cdn&#34;&gt;CDN&lt;/h2&gt;

&lt;p&gt;CDN的全称是Content Delivery Network，即内容分发网络。是指一种通过互联网互相连接的电脑网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、视频、应用程序及其他文件发送给用户，来提供高性能、可扩展性及低成本的网络内容传递给用户。&lt;/p&gt;

&lt;h2 id=&#34;cdn公共库&#34;&gt;CDN公共库&lt;/h2&gt;

&lt;p&gt;CDN公共库指将常用的js库存放在CDN节点，以方便广大开发者直接调用。与存放在服务器单机上相比，CDN公共库更加稳定、高速。一般的CDN公共库都会包含全球所有最流行的开源JavaScript库，可以直接引用。&lt;/p&gt;

&lt;h3 id=&#34;优点&#34;&gt;优点：&lt;/h3&gt;

&lt;p&gt;1.提高访问速度：&lt;/p&gt;

&lt;p&gt;假设你网站的jQuery引用了新浪的CDN，那么当用户的浏览器提交请求时，浏览器自动下载网络上最近的可用的文件，下载速度会更快。&lt;/p&gt;

&lt;p&gt;2.更好的缓存:&lt;/p&gt;

&lt;p&gt;许多网站都使用了国内或者是国外的几个知名的CDN公共库。很可能用户浏览器的缓存区里早就已经下载了许多版本的jQuery，访问你的网站时，不需要重复下载jQuery。如果你用自己的服务器提供jQuery，那么你的用户至少要下载一次它。&lt;/p&gt;

&lt;h2 id=&#34;推荐几个常用前端公共库cdn&#34;&gt;推荐几个常用前端公共库CDN&lt;/h2&gt;

&lt;h3 id=&#34;国外的&#34;&gt;国外的&lt;/h3&gt;

&lt;p&gt;1.jQuery: &lt;a href=&#34;https://code.jquery.com/&#34;&gt;https://code.jquery.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.Google: &lt;a href=&#34;https://developers.google.com/speed/libraries/&#34;&gt;https://developers.google.com/speed/libraries/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.CDNJS: &lt;a href=&#34;https://cdnjs.com/libraries&#34;&gt;https://cdnjs.com/libraries&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;国内的&#34;&gt;国内的&lt;/h3&gt;

&lt;p&gt;1.cdnjs: &lt;a href=&#34;http://cdnjs.net/&#34;&gt;http://cdnjs.net/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.百度：&lt;a href=&#34;http://developer.baidu.com/wiki/index.php?title=docs/cplat/libs&#34;&gt;http://developer.baidu.com/wiki/index.php?title=docs/cplat/libs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.360：&lt;a href=&#34;http://libs.useso.com/&#34;&gt;http://libs.useso.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.又拍云：&lt;a href=&#34;http://upcdn.b0.upaiyun.com/&#34;&gt;http://upcdn.b0.upaiyun.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.新浪：&lt;a href=&#34;http://lib.sinaapp.com/&#34;&gt;http://lib.sinaapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;国内外常用的jquerycdn&#34;&gt;国内外常用的jQueryCDN：&lt;/h3&gt;

&lt;p&gt;1.jQuery官网： &lt;a href=&#34;http://code.jquery.com/jquery-2.0.0.min.js&#34;&gt;http://code.jquery.com/jquery-2.0.0.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.CDNJS： &lt;a href=&#34;http://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.0/jquery.min.js&#34;&gt;http://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.0/jquery.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.Google Hosted Libraries： &lt;a href=&#34;http://ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js&#34;&gt;http://ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.jsDeliver： &lt;a href=&#34;http://cdn.jsdelivr.net/jquery/2.0.0/jquery-2.0.0.min.js&#34;&gt;http://cdn.jsdelivr.net/jquery/2.0.0/jquery-2.0.0.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.七牛: &lt;a href=&#34;http://cdn.staticfile.org/jquery/2.0.0/jquery.min.js&#34;&gt;http://cdn.staticfile.org/jquery/2.0.0/jquery.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;6.百度: &lt;a href=&#34;http://libs.baidu.com/jquery/2.0.0/jquery.min.js&#34;&gt;http://libs.baidu.com/jquery/2.0.0/jquery.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;7.新浪: &lt;a href=&#34;http://lib.sinaapp.com/js/jquery/2.0/jquery.min.js&#34;&gt;http://lib.sinaapp.com/js/jquery/2.0/jquery.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;8.又拍云: &lt;a href=&#34;http://upcdn.b0.upaiyun.com/libs/jquery/jquery-2.0.0.min.js&#34;&gt;http://upcdn.b0.upaiyun.com/libs/jquery/jquery-2.0.0.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;9.360: &lt;a href=&#34;http://libs.useso.com/js/jquery/2.0.0/jquery.min.js&#34;&gt;http://libs.useso.com/js/jquery/2.0.0/jquery.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;当然，毕竟第三方的服务也不一定完全靠谱，如果引用的是国外的站点的话，哪天被墙了也有可能。所以，我们可以加入以下代码，当
CDN加载失败时，还可以加载自己本地的jQuery文件。&lt;a href=&#34;https://paulund.co.uk/fallback-on-local-jquery-if-cdn-fails&#34;&gt;以下代码来源链接&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    window.jQuery || document.write(&#39;&amp;lt;script src=&amp;quot;js/libs/jquery-2.1.0.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&#39;);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>前端工程师应该具备的SEO基础知识</title>
      <link>http://www.wangxingfeng.com/seo</link>
      <pubDate>Mon, 01 Aug 2016 21:49:40 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/seo</guid>
      <description>

&lt;h2 id=&#34;seo-是什么&#34;&gt;SEO 是什么？&lt;/h2&gt;

&lt;p&gt;SEO 是“Search Engine Optimization”（搜索引擎优化）或“Search Engine Optimizer”（搜索引擎优化服务商）的首字母缩略词。通俗地说，SEO就是通过对网站内部调整优化及站外优化，使网站满足搜索引擎收录排名需求，在搜索引擎中提高关键词排名，从而把精准用户带到网站，获得免费流量，产生直接销售或品牌推广。&lt;/p&gt;

&lt;p&gt;新手入门可以阅读&lt;a href=&#34;https://support.google.com/webmasters/answer/35291?hl=zh-Hans&#34;&gt;Google 搜索引擎优化 (SEO) 单页指南.pdf&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;如果想要进一步学习，可以参考&lt;a href=&#34;http://static.googleusercontent.com/media/www.google.com/en/us/intl/zh-cn/webmasters/docs/search-engine-optimization-starter-guide-zh-cn.pdf&#34;&gt;Google搜索引擎优化入门指南&lt;/a&gt; （需翻墙），&lt;a href=&#34;http://www.wangxingfeng.com/posts/search-engine-optimization-starter-guide-zh-cn.pdf&#34;&gt;如果翻不了，可以点击这里&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&#34;前端工程师应该掌握的seo知识&#34;&gt;前端工程师应该掌握的SEO知识&lt;/h2&gt;

&lt;p&gt;目前不少公司设有SEO的专职岗位，而前端工程师不是专业做SEO优化推广的，并不需要变成SEO专家，但应掌握以下SEO基础知识。&lt;/p&gt;

&lt;h3 id=&#34;一-结构布局的优化&#34;&gt;一、结构布局的优化&lt;/h3&gt;

&lt;p&gt;1.结构扁平化。&lt;/p&gt;

&lt;p&gt;网站的层次结构尽量不超过三层。这样搜索引擎或者用户点击跳转3次可以到达网站内任何一个内页。&lt;/p&gt;

&lt;p&gt;2.优化导航。&lt;/p&gt;

&lt;p&gt;设置页面的主导航、副导航、分类导航、面包屑导航、分页页码等，方便用户跳转到想访问的页面。&lt;/p&gt;

&lt;h3 id=&#34;二-标签的语义化&#34;&gt;二、标签的语义化&lt;/h3&gt;

&lt;p&gt;搜索引擎的爬虫会依赖于标记来确定上下文和各个关键字的权重.因此，正确使用语义化的标签有利于搜索引擎抓取和收录网页内容。&lt;/p&gt;

&lt;p&gt;1.锚链接 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 标签：&lt;/p&gt;

&lt;p&gt;1）添加属性 &lt;strong&gt;title=&amp;ldquo;链接的文字说明&amp;rdquo;&lt;/strong&gt;，增加对该链接的说明，尤其是指向本站的链接。&lt;/p&gt;

&lt;p&gt;2）添加属性 &lt;strong&gt;rel=&amp;ldquo;no follow&amp;rdquo;&lt;/strong&gt;。 对于指向非本站的链接，增加这个属性是告诉爬虫该页面无需追踪。&lt;/p&gt;

&lt;p&gt;2.正文标题用&lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;,副标题用&lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;, 不要滥用标题。&lt;/p&gt;

&lt;p&gt;3.正文内容用&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;，正文内的换行用&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;， 其他地方不要滥用&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;来换行，而是通过CSS样式来设置。&lt;/p&gt;

&lt;p&gt;4.图片&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;添加属性 &lt;strong&gt;alt=&amp;ldquo;图片的文字注释&amp;rdquo;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;5.表格用&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; ，表格的标题使用 &lt;code&gt;&amp;lt;caption&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;6.有序列表用&lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt;， 无序列表用&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;， 定义列表用&lt;code&gt;&amp;lt; dl&amp;gt;&lt;/code&gt;、&lt;/p&gt;

&lt;p&gt;7.强调标签： &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; 表示强调， 可以用于突出关键词，有较大的权重。&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;也表示强调，权重比strong稍低。&lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt;标签虽然也有加粗效果，但没有强调的作用，因此不会增加标签内的文本权重。&lt;/p&gt;

&lt;p&gt;8.减少&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;的使用。iframes 阻塞页面加载, 延迟触发window.onload事件，给用户的感觉就是这个网页非常慢。&lt;/p&gt;

&lt;p&gt;9.重要内容HTML代码放在最前面，然后通过CSS属性控制位置。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title> CSS3 动画效果</title>
      <link>http://www.wangxingfeng.com/css3-%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C</link>
      <pubDate>Mon, 11 Jul 2016 21:03:27 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/css3-%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C</guid>
      <description>

&lt;h2 id=&#34;作用&#34;&gt;作用&lt;/h2&gt;

&lt;p&gt;用来定义样式变化的过渡效果, 在某些情况下（移动端），可以代替JavaScript代码来实现动画效果。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;transition&lt;/code&gt;属性是一个简写属性，用于设置四个过渡属性：&lt;/p&gt;

&lt;h3 id=&#34;1-transition-property&#34;&gt;1. transition-property&lt;/h3&gt;

&lt;p&gt;规定设置过渡效果的 CSS 属性的名称, 默认值为&lt;code&gt;all&lt;/code&gt;, 表示所有属性，也可以单独设置某个css属性。&lt;/p&gt;

&lt;h3 id=&#34;2-transition-duration&#34;&gt;2. transition-duration&lt;/h3&gt;

&lt;p&gt;过渡时间，值以秒或毫秒计。&lt;/p&gt;

&lt;h3 id=&#34;3-transition-timing-function&#34;&gt;3. transition-timing-function&lt;/h3&gt;

&lt;p&gt;过渡效果的速度曲线。该属性允许过渡效果随着时间来改变其速度。&lt;/p&gt;

&lt;p&gt;默认值为&lt;code&gt;linear&lt;/code&gt;。常见的有以下值：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;linear  匀速
ease    慢速开始，然后变快，然后慢速结束。
ease-in 以慢速开始
ease-out    以慢速结束
ease-in-out 以慢速开始和结束的过渡效果
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-transition-delay&#34;&gt;4. transition-delay&lt;/h3&gt;

&lt;p&gt;过渡效果的延迟，值以秒或毫秒计。默认为0。如果为正值，则表示延迟执行过渡效果；如果为负值（如-0.1s)，则会从过渡效果的执行0.1s的状态为初始状态开始执行过渡效果。&lt;/p&gt;

&lt;h2 id=&#34;兼容性&#34;&gt;兼容性&lt;/h2&gt;

&lt;p&gt;Internet Explorer 10、Firefox、Opera 和 Chrome等现代浏览器 支持 transition 属性。
Safari 支持替代的 -webkit-transition 属性。&lt;/p&gt;

&lt;h2 id=&#34;示例&#34;&gt;示例&lt;/h2&gt;

&lt;style&gt;
 .trans {
    display:block;
    width:100px;
    height:30px;
    background:#0ff;
    transition:width 2s ease;
 }
 .trans:hover{
    width:500px;
 }
&lt;/style&gt;

&lt;p&gt;&lt;a class=&#34;trans&#34;&gt;过渡效果&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Markdown 学习笔记</title>
      <link>http://www.wangxingfeng.com/markdonw-notes</link>
      <pubDate>Sun, 05 Jun 2016 22:05:46 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/markdonw-notes</guid>
      <description>

&lt;h2 id=&#34;定义&#34;&gt;定义：&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/zh-cn/Markdown&#34;&gt;维基百科&lt;/a&gt;上的介绍：&lt;/p&gt;

&lt;p&gt;Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯（John Gruber）。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML(或者HTML)文档”。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。&lt;/p&gt;

&lt;p&gt;Markdown同时还是一个由Gruber编写的Perl脚本：Markdown.pl。它把用markdown语法编写的内容转换成有效的、结构良好的XHTML或HTML内容，并将左尖括号(&amp;rsquo;&amp;lt;&amp;lsquo;)和&amp;amp;号替换成它们各自的字符实体引用。它可以用作单独的脚本，Blosxom和Movable Type的插件又或者BBEdit的文本过滤器.&lt;/p&gt;

&lt;h2 id=&#34;用处&#34;&gt;用处：&lt;/h2&gt;

&lt;p&gt;从维基百科的介绍来看，markdown就是一种标记语言。它简洁的语法代替排版，可以使我们专心于码字，用「标记」语法来代替常见的排版格式。比如我现在这个博客的内容，就是直接用Markdown写的。 不用考虑复杂的排版，只需要记住几个简单常用的语法就行，然后可以轻松地转换成HTML文件，变成可以被浏览器解析的网页。
如果你有一个自己独立的博客，只是想码码字，不想编写复杂HTML和CSS代码，Markdown无疑是一个很好地选择。&lt;/p&gt;

&lt;h2 id=&#34;最基本的语法&#34;&gt;最基本的语法：&lt;/h2&gt;

&lt;p&gt;1.标题：&lt;/p&gt;

&lt;p&gt;如果一段文字被定义为标题，只要在这段文字前加 &lt;code&gt;#&lt;/code&gt;号即可。1个&lt;code&gt;#&lt;/code&gt;表示 一级标题；&lt;code&gt;##&lt;/code&gt;表示 二级标题；以此类推，总共6级标题， &lt;code&gt;#&lt;/code&gt;号后加一个空格。&lt;/p&gt;

&lt;p&gt;2.引用代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1）引用整段代码，只需要空是个空格或者一个Tab键，完整地保留代码缩进格式。
2）在一行内引入代码片段。用Tab键上方的反引号(`  `) 包围代码。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.链接：&lt;/p&gt;

&lt;p&gt;用方括号&lt;code&gt;[]&lt;/code&gt;括起来要添加超链接的文字，用圆括号&lt;code&gt;()&lt;/code&gt;把url括起来。写法如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;`[Markdown维基百科英文版](https://en.wikipedia.org/wiki/Markdown)`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果如右边所示：&lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34;&gt;Markdown维基百科英文版&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.图片:&lt;/p&gt;

&lt;p&gt;插入链接与插入图片的语法很像，区别在一个 &lt;code&gt;!&lt;/code&gt;号。图片为：&lt;code&gt;![文字描述](url)。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;5.分割线:&lt;/p&gt;

&lt;p&gt;用三个以上的&lt;code&gt;星号&lt;/code&gt;、&lt;code&gt;减号&lt;/code&gt;、&lt;code&gt;底线&lt;/code&gt;来建立一个分隔线，行内不能有其他东西。可以在星号或是减号中间插入空格&lt;/p&gt;

&lt;p&gt;6.列表：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1)无序列表无序列表使用`星号`、`加号`或是`减号`作为列表标记；
2)有序列表则直接在文字前加`1.` `2.` `3.` 符号要和文字之间加上一个字符的空格。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;7.粗体与斜体:&lt;/p&gt;

&lt;p&gt;用两个 &lt;code&gt;*&lt;/code&gt; 包含一段文本就是粗体的语法，用一个 &lt;code&gt;*&lt;/code&gt;包含一段文本就是斜体的语法。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;这是粗体文字&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;这是斜体文体&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;8.空格与换行：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;单个回车&lt;/code&gt; 视为空格；&lt;code&gt;连续回车&lt;/code&gt;才能分段。&lt;/p&gt;

&lt;p&gt;9.区块引用 &lt;code&gt;Blockquotes&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Markdown 标记区块引用是使用类似 email 中用 &lt;code&gt;&amp;gt;&lt;/code&gt;的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 &lt;code&gt;&amp;gt; ：&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;相关链接&#34;&gt;相关链接：&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://wowubuntu.com/markdown/basic.html&#34;&gt;快速入门指南&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://daringfireball.net/projects/markdown/&#34;&gt;Markdown官网&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Sublime Text 学习笔记</title>
      <link>http://www.wangxingfeng.com/sublimetext-notes</link>
      <pubDate>Fri, 13 May 2016 00:14:00 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/sublimetext-notes</guid>
      <description>

&lt;p&gt;自从把主力代码编辑器改为&lt;a href=&#34;https://www.sublimetext.com/&#34;&gt;Sublime Text&lt;/a&gt;之后，写代码的效率明显高了许多。最近，我开始尝试着给身边的朋友推荐这款编辑器。&lt;/p&gt;

&lt;h2 id=&#34;一-sublime-text-的优点&#34;&gt;一、Sublime Text 的优点&lt;/h2&gt;

&lt;p&gt;1.跨平台；&lt;/p&gt;

&lt;p&gt;2.轻量级，可拓展：有大量插件可由用户自行选择安装(首推&lt;code&gt;Emmet&lt;/code&gt;插件)。&lt;/p&gt;

&lt;p&gt;3.支持几乎所有的主流编程语言的语法高亮显示；&lt;/p&gt;

&lt;p&gt;4.代码自动补全，支持代码段（Code Snippet）；&lt;/p&gt;

&lt;p&gt;5.右上角的&lt;code&gt;minimap&lt;/code&gt;: 用来查看标注、快速拖动、迅速定位；&lt;/p&gt;

&lt;p&gt;6.快速跳转到不同的文件/方法/函数：支持模糊匹配；&lt;/p&gt;

&lt;p&gt;7.快速切换&lt;code&gt;Tab&lt;/code&gt;与&lt;code&gt;Space&lt;/code&gt;；&lt;/p&gt;

&lt;p&gt;8.格式化代码；&lt;/p&gt;

&lt;h2 id=&#34;二-安装sublime-text&#34;&gt;二、安装Sublime Text&lt;/h2&gt;

&lt;p&gt;1.下载安装包：&lt;/p&gt;

&lt;p&gt;Sublime Text官网地址：&lt;a href=&#34;https://www.sublimetext.com/&#34;&gt;https://www.sublimetext.com/&lt;/a&gt; 根据自己的系统选择对应的安装包下载并安装。目前稳定版本为&lt;code&gt;Sublime Text 3&lt;/code&gt;;&lt;/p&gt;

&lt;p&gt;2.安装Package Control:&lt;/p&gt;

&lt;p&gt;下载插件之前需要先安装&lt;code&gt;Package Control&lt;/code&gt;，它是用来管理和下载插件的控制组件。 &lt;code&gt;Package Control&lt;/code&gt;官网安装地址：&lt;a href=&#34;https://packagecontrol.io/installation&#34;&gt;https://packagecontrol.io/installation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2016051301.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;1）使用快键键 &lt;code&gt;ctrl+&lt;/code&gt; &lt;code&gt;或者&lt;/code&gt;View&lt;code&gt;&amp;gt;&lt;/code&gt;Show Console` 菜单打开控制台，然后，然后回车让它安装。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2016051302.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;2）根据Sublime Text的版本选择复制对应的版本代码；&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2016051303.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;3）黏贴到控制台输入框里，按&lt;code&gt;Enter键&lt;/code&gt;，插件管理包就进入正在下载安装的状态（可能需要一点时间）；&lt;/p&gt;

&lt;p&gt;3.自定义安装各种插件：&lt;/p&gt;

&lt;p&gt;在 Package Control官网地址：&lt;a href=&#34;https://packagecontrol.io/&#34;&gt;https://packagecontrol.io/&lt;/a&gt;可以看到各种插件以及它的下载量排名，找到自己感兴趣的，下载下来试用。&lt;/p&gt;

&lt;p&gt;下载安装方法如下： (windows平台)&lt;/p&gt;

&lt;p&gt;1）按下 &lt;code&gt;Ctrl+Shift+P&lt;/code&gt; 调出命令面板，输入&lt;code&gt;install&lt;/code&gt;， 调出 &lt;code&gt;Install Package&lt;/code&gt; 选项并回车，出来这样的画面，&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2016051305.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;2）然后输入自己想要下载的插件名称，比如: &lt;code&gt;HTML Extended&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2016051306.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;3）下载安装完成后会弹出类似这样的文件，说明已经成功安装该插件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2016051307.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;或者在左下角提示成功安装：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2016051308.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;三-推荐几个好用的插件&#34;&gt;三、推荐几个好用的插件：&lt;/h2&gt;

&lt;p&gt;1.Emmet：通过简单的命令直接生成一大段代码。&lt;/p&gt;

&lt;p&gt;2.ConvertToUTF8(转换成utf-8格式): 默认情况下，gbk编码格式的中文会变成乱码，这个插件可以实现自动转换。&lt;/p&gt;

&lt;p&gt;3.JsFormat：格式化js代码。可以还原别人网站被压缩过难以阅读的js代码。&lt;/p&gt;

&lt;p&gt;4.HTMLBeautify：格式化HTML。&lt;/p&gt;

&lt;p&gt;5.Hasher:符号转义。&lt;/p&gt;

&lt;p&gt;6.TrailingSpaces：多余空格标记。&lt;/p&gt;

&lt;p&gt;7.SideBarEnhancementS: 侧边栏增强功能。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ChineseLocalization：汉化插件。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;四-常用的快捷键-windows平台下&#34;&gt;四、常用的快捷键（windows平台下）：&lt;/h2&gt;

&lt;p&gt;1.&lt;code&gt;Ctrl + Shift + N&lt;/code&gt;新建窗口；&lt;code&gt;Ctrl + W&lt;/code&gt;关闭该窗口。&lt;/p&gt;

&lt;p&gt;2.&lt;code&gt;Ctrl + N&lt;/code&gt;新建标签；&lt;code&gt;Ctrl + W&lt;/code&gt; 关闭当前标签；&lt;code&gt;Ctrl + Shift + T&lt;/code&gt; 恢复刚刚关闭的标签。&lt;/p&gt;

&lt;p&gt;3.&lt;code&gt;Alt + Shift + 2&lt;/code&gt;左右分屏； &lt;code&gt;Alt + Shift + 8&lt;/code&gt;  上下分屏；&lt;code&gt;Alt + Shift + 5&lt;/code&gt;  上下左右分为四屏。&lt;code&gt;Ctrl + 数字键&lt;/code&gt; 跳转到指定屏；&lt;code&gt;Ctrl + Shift + 数字键&lt;/code&gt; 将当前屏移动到指定。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ctrl+ 1&lt;/code&gt; 变回一屏显示。&lt;/p&gt;

&lt;p&gt;4.&lt;code&gt;F11&lt;/code&gt; 切换普通全屏; &lt;code&gt;Shift + F11&lt;/code&gt;切换无干扰全屏。&lt;/p&gt;

&lt;p&gt;5.&lt;code&gt;Ctrl + P&lt;/code&gt; 会列出当前打开的所有文件，点击某个文件可以快速跳转；&lt;/p&gt;

&lt;p&gt;6.&lt;code&gt;Ctrl + R&lt;/code&gt; 对于md文件，会列出大纲。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2016051309.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;7.&lt;code&gt;Ctrl + F&lt;/code&gt; 调出搜索框进行搜索；&lt;code&gt;Ctrl + H&lt;/code&gt; 替换&lt;/p&gt;

&lt;p&gt;8.&lt;code&gt;Ctrl + J&lt;/code&gt; 把选中区域合并为一行；&lt;code&gt;Ctrl + Shift + L&lt;/code&gt; 可以将当前选中区域打散，然后进行同时编辑：&lt;/p&gt;

&lt;p&gt;9.多行游标（可同时编辑多行代码）：&lt;code&gt;Ctrl + D&lt;/code&gt; 选择当前光标所在的词并高亮该词所有出现的位置，再次&lt;code&gt;Ctrl + D&lt;/code&gt;选择该词出现的下一个位置，在多重选词的过程中，使用&lt;code&gt;Ctrl + K&lt;/code&gt; 进行跳过，使用&lt;code&gt;Ctrl + U&lt;/code&gt;进行回退，使用&lt;code&gt;Esc&lt;/code&gt;退出多重编辑。&lt;/p&gt;

&lt;p&gt;10.&lt;code&gt;Ctrl + Enter&lt;/code&gt; 在当前行下面新增一行然后跳至该行；&lt;code&gt;Ctrl + Shift + Enter&lt;/code&gt; 在当前行上面增加一行并跳至该行。&lt;/p&gt;

&lt;p&gt;11.&lt;code&gt;Ctrl + E&lt;/code&gt; 自动生成代码片段（安装Emmet插件之后）。&lt;/p&gt;

&lt;p&gt;12.&lt;code&gt;Ctrl + shift + D&lt;/code&gt;在下一行复制当前行内容，并跳至该行。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>实现Tab切换的几种方式</title>
      <link>http://www.wangxingfeng.com/tab</link>
      <pubDate>Sun, 08 May 2016 23:36:44 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/tab</guid>
      <description>

&lt;p&gt;Tab 切换是网页中常见的组件。适当地使用，可以节省页面空间，在同一个大小的页面中展现更多的内容。Tab 切换的效果千差万别，只需要学会基本的思路，便可变换出各种各样的效果。下面我分别使用了原生js和jQuery来实现四种不同的Tab切换效果。&lt;/p&gt;

&lt;h2 id=&#34;方式一-用原生js实现各种tab切换效果&#34;&gt;方式一：用原生js实现各种Tab切换效果。&lt;/h2&gt;

&lt;h3 id=&#34;1-鼠标滑动切换&#34;&gt;1.鼠标滑动切换 :&lt;/h3&gt;

&lt;p&gt;这是最简单的Tab切换。鼠标滑过时，切换Tab.&lt;/p&gt;

&lt;p&gt;首先，通过getElementById、 getElementsByTagNameL等方法来获取相应的元素。&lt;/p&gt;

&lt;p&gt;然后，对相应的元素绑定mouseover事件即可。&lt;/p&gt;

&lt;p&gt;具体代码见  &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/js-mouseover-tab.html&#34;&gt;js-mouseover-tab.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo/js-mouseover-tab.html&#34;&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-鼠标点击切换&#34;&gt;2.鼠标点击切换&lt;/h3&gt;

&lt;p&gt;与第一种的区别在于绑定的事件不同。获取元素的方法是一样的，只需把绑定mouseovers事件改为click事件即可。&lt;/p&gt;

&lt;p&gt;具体代码见  &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/js-click-tab.html&#34;&gt;js-click-tab.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo/js-click-tab.html&#34;&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-鼠标滑动延迟切换&#34;&gt;3.鼠标滑动延迟切换&lt;/h3&gt;

&lt;p&gt;延迟切换涉及到了一个时间问题，可以通过设置定时器来实现延迟的效果。定时器有setTimeout()和setInterval()两种方式来设置。&lt;/p&gt;

&lt;p&gt;setTimeout() 方法用于在指定的毫秒数后调用函数或计算表达式。setTimeout() 只执行 code 一次。如果要多次调用，需要使用 setInterval()。&lt;/p&gt;

&lt;p&gt;setInterval() 方法可按照指定的周期（以毫秒计）来调用函数或计算表达式。setInterval() 方法会不停地调用函数，直到 clearInterval() 被调用或窗口被关闭。由 setInterval() 返回的 ID 值可用作 clearInterval() 方法的参数。&lt;/p&gt;

&lt;p&gt;因为这里的延迟切换是在指定的延迟时间之后才实现切换效果，所以使用setTimeout() 。&lt;/p&gt;

&lt;p&gt;具体代码见  &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/js-delay-tab.html&#34;&gt;js-delay-tab.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo/js-delay-tab.html&#34;&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;4-自动切换&#34;&gt;4.自动切换&lt;/h3&gt;

&lt;p&gt;自动切换，即按指定的周期自动切换到下一个Tab。这里也需要一个定时器，而且是按周期调用函数，因此使用setInterval() 方法来实现。
当鼠标滑动到某个Tab时，高亮显示当前页，同时停止自动切换，此时需要用到 clearInterval()方法来清除定时器。&lt;/p&gt;

&lt;p&gt;具体代码见  &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/js-auto-tab-01.html&#34;&gt;js-auto-tab-01.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;优化后的代码见 &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/js-auto-tab-02.html&#34;&gt;js-auto-tab-02.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo/js-auto-tab-02.html&#34;&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;方式二-用jquery实现各种tab切换效果-实现思路与原生的javascript是一样的-只是jquery封装了一些方法可以更方便操作dom元素&#34;&gt;方式二：用jQuery实现各种Tab切换效果: 实现思路与原生的JavaScript是一样的,只是jQuery封装了一些方法可以更方便操作DOM元素。&lt;/h2&gt;

&lt;h3 id=&#34;1-鼠标滑动切换-1&#34;&gt;1.鼠标滑动切换&lt;/h3&gt;

&lt;p&gt;具体代码见  &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/jQ-mouseover-tab.html&#34;&gt;jQ-mouseover-tab.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo/jQ-mouseover-tab.html&#34;&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-鼠标点击切换-1&#34;&gt;2.鼠标点击切换&lt;/h3&gt;

&lt;p&gt;具体代码见  &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/jQ-click-tab.html&#34;&gt;jQ-click-tab.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo/jQ-click-tab.html&#34;&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-鼠标滑动延迟切换-1&#34;&gt;3.鼠标滑动延迟切换&lt;/h3&gt;

&lt;p&gt;具体代码见  &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/jQ-delay-tab.html&#34;&gt;jQ-delay-tab.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo/jQ-delay-tab.html&#34;&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;4-自动切换-1&#34;&gt;4.自动切换&lt;/h3&gt;

&lt;p&gt;具体代码见  &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/jQ-auto-tab-01.html&#34;&gt;jQ-auto-tab-01.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;优化后的代码 见&lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/jQ-auto-tab-02.html&#34;&gt;jQ-auto-tab-02.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo/jQ-auto-tab-02.html&#34;&gt;DEMO&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>实现返回顶部效果的3种方式</title>
      <link>http://www.wangxingfeng.com/back-to-top</link>
      <pubDate>Fri, 22 Apr 2016 22:56:30 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/back-to-top</guid>
      <description>

&lt;p&gt;现在的网页内容比较多，基本上无法在一屏完全显示出来。这个时候，用户需要移动滚动条（滑动鼠标滚轮）来查看全部内容，如果想要返回顶部同样需要移动滚动条。如果页面太长，这样的体验显然不够好。因此，&lt;code&gt;返回顶部&lt;/code&gt;的按钮就应运而生了。&lt;/p&gt;

&lt;p&gt;返回顶部的实现方式主要有以下3种。&lt;/p&gt;

&lt;h2 id=&#34;实现方式一-设置锚链接&#34;&gt;实现方式一：设置锚链接&lt;/h2&gt;

&lt;p&gt;最简单快捷的方式是设置锚链接&lt;code&gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;&lt;/code&gt; 。&lt;code&gt;京东&lt;/code&gt;就是使用这种方式。&lt;/p&gt;

&lt;p&gt;优点：简单快速，没有浏览器兼容问题。&lt;/p&gt;

&lt;p&gt;参考代码如下：&lt;/p&gt;

&lt;p&gt;HTML代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;div id=&amp;quot;go-top&amp;quot;&amp;gt;
        &amp;lt;a href=&amp;quot;#&amp;quot;  id=&amp;quot;gotop-btn&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;!-- 直接使用锚链接来返回顶部 --&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;实现方式二-借助jquery来实现&#34;&gt;实现方式二：借助jQuery来实现&lt;/h2&gt;

&lt;p&gt;参考代码如下：&lt;/p&gt;

&lt;p&gt;HTML代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div id=&amp;quot;go-top&amp;quot;&amp;gt;
    &amp;lt;a href=&amp;quot;javascript:;&amp;quot;  id=&amp;quot;gotop-btn&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;JavaScript代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    $(function() {
        $(window).scroll(function(){
            // 当滚动条距顶部超过100像素时，返回顶部按钮出现，否则消失
    if ($(window).scrollTop()&amp;gt;=100){
        $(&amp;quot;#gotop-btn&amp;quot;).fadeIn(500);
    }
    else{
        $(&amp;quot;#gotop-btn&amp;quot;).fadeOut(500);
    }
    });
    //当点击跳转链接后，回到页面顶部位置
    $(&amp;quot;#gotop-btn&amp;quot;).click(function(){
        $(&#39;body,html&#39;).animate({scrollTop:0},300);
    });
});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;实现方式三-通过原生javascript来动态操作&#34;&gt;实现方式三：通过原生JavaScript来动态操作。&lt;/h2&gt;

&lt;p&gt;需要用到以下知识&lt;/p&gt;

&lt;h3 id=&#34;dom-操作&#34;&gt;DOM 操作：&lt;/h3&gt;

&lt;p&gt;1.根据ID获取元素：&lt;code&gt;document.getElementById&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;2.滚动条的数值，可读写：&lt;code&gt;document.documentElment.scrollTop&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;事件运用&#34;&gt;事件运用：&lt;/h3&gt;

&lt;p&gt;1.页面加载完毕后触发&lt;code&gt;window.onload&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;2.点击后触发&lt;code&gt;onclick&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;3.滚动条滚动时触发 &lt;code&gt;window.onscroll&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;定时器&#34;&gt;定时器：&lt;/h3&gt;

&lt;p&gt;1.&lt;code&gt;setInterval()&lt;/code&gt; : 设置定时器，需要传两个参数。&lt;/p&gt;

&lt;p&gt;2.&lt;code&gt;clearInterval()&lt;/code&gt;: 关闭定时器，需要传两个参数。&lt;/p&gt;

&lt;p&gt;参考代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;HTML代码
&amp;lt;div id=&amp;quot;go-top&amp;quot;&amp;gt;
    &amp;lt;a href=&amp;quot;javascript:;&amp;quot;  id=&amp;quot;gotop-btn&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;

js代码
&amp;lt;script  type=&amp;quot;text/javascript&amp;quot; &amp;gt;
    // 加载后触发事件
    window.onload = function() {
        var obtn = document.getElementById(&#39;gotop-btn&#39;);
        // 获取页面可视区域高度
        var clientHeight = document.documentElement.clientHeight;
        var timer = null;
        var isTop = true;
        // 滚动条滚动时触发事件，清除定时器，停在当前位置。
        window.onscroll = function() {
            // 获取滚动条距离顶部的数值
            var osTop = document.documentElement.scrollTop || document.body.scrollTop; 

            if(osTop &amp;gt;= clientHeight){
                // 显示返回按钮
                obtn.style.display = &amp;quot;block&amp;quot;;
            }
            else{
                // 隐藏返回按钮
                obtn.style.display = &amp;quot;none&amp;quot;;
            }
            if(!isTop){
                clearInterval(timer);
            }
            isTop = false;
        }
        obtn.onclick = function() {
            // 设置定时器
            timer = setInterval(function() {
                var osTop = document.documentElement.scrollTop || document.body.scrollTop; 
                // chrome使用document.body.scrollTop 来获取滚动条到顶部的距离。
                // 滚动条滚动由快到慢，即减少的距离从大到小。
                var ispeed = Math.floor(-osTop /6);
                // Math.floor()向下取整, 如果ispeed去正数，会导致osTop最后无法等于0，从而无法消除定时器。
                document.documentElement.scrollTop = document.body.scrollTop = osTop + ispeed;
                //滚动条到了顶部之后，清除定时器，否则会一直返回顶部没法下拉滚动条看底下的网页内容。
                isTop = true;
                // console.log(osTop-ispeed);
                if(osTop == 0){
                    clearInterval(timer);
                }
            },50)
        }
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>