<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Css翻转动画 on Frank Wang&#39;s Coding World</title>
    <link>http://www.wangxingfeng.com/tags/css%E7%BF%BB%E8%BD%AC%E5%8A%A8%E7%94%BB/index.xml</link>
    <description>Recent content in Css翻转动画 on Frank Wang&#39;s Coding World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>[Frank Wang](//www.wangxingfeng.com). Powered by [Hugo](//gohugo.io). Theme by [PPOffice](http://github.com/ppoffice).</copyright>
    <atom:link href="http://www.wangxingfeng.com/tags/css%E7%BF%BB%E8%BD%AC%E5%8A%A8%E7%94%BB/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>用CSS实现图片翻转的动画效果</title>
      <link>http://www.wangxingfeng.com/css-flip</link>
      <pubDate>Sat, 29 Apr 2017 21:24:00 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/css-flip</guid>
      <description>

&lt;h2 id=&#34;用css实现页面或图片翻转的动画效果&#34;&gt;用CSS实现页面或图片翻转的动画效果&lt;/h2&gt;

&lt;p&gt;Web开发中常常会有动画的交互效果，以前我们只能用JavaScript来实现，随着浏览器对CSS3新特性的支持度越来越好，很多的特效都可以通过CSS代码来实现。&lt;/p&gt;

&lt;p&gt;我们在浏览网站的时候，经常能够看到图片会翻转的动画效果，比如&lt;code&gt;Demo 1&lt;/code&gt;所示。&lt;/p&gt;

&lt;div class=&#34;rotate-container&#34; style=&#34;border:2px solid #000;&#34;&gt;
    &lt;div class=&#34;flipper&#34;&gt;
        &lt;div class=&#34;front&#34;&gt;
            &lt;!-- 前面内容 --&gt;
            &lt;p &gt;正面内容&lt;/p&gt;
            &lt;img src=&#34;https://images-cn.ssl-images-amazon.com/images/I/51fD0ZgQoXL._SL400_.jpg&#34; alt=&#34;&#34;&gt;
        &lt;/div&gt;
        &lt;div class=&#34;back&#34;&gt;
            &lt;p&gt;反面内容&lt;/p&gt;
            &lt;img src=&#34;https://images-cn.ssl-images-amazon.com/images/G/28/kindle/merch/2014/campaign/Gen7-Launch/Associate/Associate_AssociateCenrter_300_250_Family._V325383366_.jpg&#34; alt=&#34;&#34;&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;能否用纯CSS来实现这种翻转动画效果呢？答案是肯定的。&lt;/p&gt;

&lt;p&gt;我们知道CSS3的&lt;code&gt;transform&lt;/code&gt;属性非常强大，可以实现2D或者3D的旋转、缩放、移动或倾斜。&lt;/p&gt;

&lt;p&gt;上述Demo1是沿着Y轴3D翻转的，我们可以想到用&lt;code&gt;transform&lt;/code&gt;属性的&lt;code&gt;rotateY()&lt;/code&gt;方法来实现。&lt;/p&gt;

&lt;h2 id=&#34;示例代码&#34;&gt;示例代码&lt;/h2&gt;

&lt;p&gt;HTML代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;rotate-container&amp;quot;&amp;quot;&amp;gt;
    &amp;lt;div class=&amp;quot;flipper&amp;quot;&amp;gt;
        &amp;lt;div class=&amp;quot;front&amp;quot;&amp;gt;
            &amp;lt;!-- 前面内容 --&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class=&amp;quot;back&amp;quot;&amp;gt;
            &amp;lt;!-- 背面内容 --&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;CSS代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.rotate-container:hover .flipper{
    transform: rotateY(180deg);
}

.rotate-container, .front, .back {
    width: 320px;
    height: 480px;
}

.flipper {
    transition-duration: 1s;  
    transform-style: preserve-3d;
    position: relative;
}

.front, .back {
    backface-visibility: hidden;
    position: absolute;
    top: 0;
    left: 0;
}

.front {
    z-index: 2;
}

.back {
    transform: rotateY(180deg);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;关键的技术点解释&#34;&gt;关键的技术点解释：&lt;/h2&gt;

&lt;h3 id=&#34;1-transform-变形&#34;&gt;1.transform：变形&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;transform: rotateY(180deg)&lt;/code&gt; 表示沿着Y轴旋转180度。
&lt;style&gt;
    .rotateY{
        transition-duration:1.5s;
    }
    .rotateY45:hover{
        transform: rotateY(45deg);
    }
    .rotateY90:hover{
        transform: rotateY(90deg);
    }
    .rotateY180:hover{
        transform: rotateY(180deg);&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;}
.bf-hidden{
    transform-style: preserve-3d;
    backface-visibility: hidden;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/style&gt;
&lt;p&gt;Demo2：沿着Y轴旋转180度(旋转到背面可见)&lt;/p&gt;
&lt;div class=&#34;rotateY rotateY180&#34;&gt;
    &lt;img src=&#34;https://images-cn.ssl-images-amazon.com/images/I/51fD0ZgQoXL._SL400_.jpg&#34; alt=&#34;&#34;&gt;
&lt;/div&gt;
&lt;p&gt;Demo3：沿着Y轴旋转90度&lt;/p&gt;
&lt;div class=&#34;rotateY rotateY90&#34;&gt;
    &lt;img src=&#34;https://images-cn.ssl-images-amazon.com/images/I/51fD0ZgQoXL._SL400_.jpg&#34; alt=&#34;&#34;&gt;
&lt;/div&gt;
&lt;p&gt;Demo4：沿着Y轴旋转45度&lt;/p&gt;
&lt;div class=&#34;rotateY rotateY45&#34;&gt;
    &lt;img src=&#34;https://images-cn.ssl-images-amazon.com/images/I/51fD0ZgQoXL._SL400_.jpg&#34; alt=&#34;&#34;&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-transform-style-指定该元素的子元素所在空间&#34;&gt;2.transform-style：指定该元素的子元素所在空间。&lt;/h3&gt;

&lt;p&gt;指定该元素的子元素是（看起来）位于三维空间内，还是在该元素所在的平面内被扁平化。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;transform-style&lt;/code&gt;属性有两个参数，&lt;code&gt;flat&lt;/code&gt;和&lt;code&gt;preserve-3d&lt;/code&gt;。&lt;code&gt;flat&lt;/code&gt;为默认值，指定子元素位于此元素所在平面内; &lt;code&gt;preserve-3d&lt;/code&gt;指定子元素定位在三维空间内。&lt;/p&gt;

&lt;h3 id=&#34;3-backface-visibility-指定元素旋转到背面时是否可见&#34;&gt;3.backface-visibility 指定元素旋转到背面时是否可见。&lt;/h3&gt;

&lt;p&gt;默认为visible，即背面是可见的, 如&lt;code&gt;Demo2&lt;/code&gt;所示。&lt;/p&gt;

&lt;p&gt;在Demo1中，由于翻转过来的是另外一张图片，所以设置为backface-visibility:hidden背面是不可见的。&lt;/p&gt;

&lt;p&gt;&lt;p&gt;Demo5: 沿着Y轴旋转180度(旋转到背面不可见)&lt;/p&gt;
&lt;div class=&#34;rotate-container&#34;&gt;
    &lt;div class=&#34;flipper&#34; &gt;
        &lt;div class=&#34;front&#34;&gt;
            &lt;img src=&#34;https://images-cn.ssl-images-amazon.com/images/I/51fD0ZgQoXL._SL400_.jpg&#34; alt=&#34;&#34;&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;h3 id=&#34;4-transition-duration-表示完成过渡效果需要花费的时间&#34;&gt;4.transition-duration：表示完成过渡效果需要花费的时间。&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;transition-duration：1s&lt;/code&gt;可以用简写的形式&lt;code&gt;transition:1s&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&#34;5-position-absolute-绝对定位&#34;&gt;5.position:absolute：绝对定位。&lt;/h3&gt;

&lt;p&gt;使用绝对定位&lt;code&gt;position:absolute&lt;/code&gt;把翻转前后的两个元素摆放到同一个位置。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>