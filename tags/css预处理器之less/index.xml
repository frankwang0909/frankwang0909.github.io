<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Css预处理器之less on Frank Wang&#39;s Coding World</title>
    <link>http://www.wangxingfeng.com/tags/css%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8%E4%B9%8Bless/index.xml</link>
    <description>Recent content in Css预处理器之less on Frank Wang&#39;s Coding World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>[Frank Wang](//www.wangxingfeng.com). Powered by [Hugo](//gohugo.io). Theme by [PPOffice](http://github.com/ppoffice).</copyright>
    <atom:link href="http://www.wangxingfeng.com/tags/css%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8%E4%B9%8Bless/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>CSS预处理器之Less</title>
      <link>http://www.wangxingfeng.com/less</link>
      <pubDate>Sun, 23 Apr 2017 16:28:38 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/less</guid>
      <description>

&lt;h2 id=&#34;1-css&#34;&gt;1.CSS&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;CSS&lt;/code&gt;层叠样式表(Cascading Style Sheets)是一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言。&lt;/p&gt;

&lt;p&gt;由于&lt;code&gt;CSS&lt;/code&gt;不想普通的编程语言有自己的变量、常量、条件语句、函数等编程语法，而只是一行行单纯的属性描述，所以写起来相当的费事，代码难以组织和维护。&lt;/p&gt;

&lt;h2 id=&#34;2-dry&#34;&gt;2.DRY&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;DRY&lt;/code&gt;, 即 Don&amp;rsquo;t Repeat Yourself， 是一种为程序员所熟悉的编程理念，优秀的程序员通常遵循这种规范编写代码。
&lt;code&gt;DRY&lt;/code&gt;可以显著地提升代码的可维护性，比如在需要改变某个参数的时候，只需要改动一处或者少数几处地方。&lt;/p&gt;

&lt;h2 id=&#34;3-css预处理器&#34;&gt;3.CSS预处理器&lt;/h2&gt;

&lt;p&gt;纯粹的&lt;code&gt;CSS&lt;/code&gt;代码并没有变量、嵌套、条件等概念，难以做到DRY, 这令程序员们头痛不已。因此，有程序员尝试为 &lt;code&gt;CSS&lt;/code&gt; 增加一些编程的的特性，使得在 &lt;code&gt;CSS&lt;/code&gt; 中使用变量、简单的程序逻辑、函数成为可能。&lt;/p&gt;

&lt;p&gt;目前，最常用的CSS预处理器，主要有3个：&lt;code&gt;Less&lt;/code&gt;、&lt;code&gt;SASS&lt;/code&gt;、&lt;code&gt;Stylus&lt;/code&gt;。
从&lt;a href=&#34;https://github.com/showcases/css-preprocessors&#34;&gt;GitHub&lt;/a&gt;上可以看出&lt;code&gt;Less&lt;/code&gt;是最受欢迎的&lt;code&gt;CSS&lt;/code&gt;预处理器。
&lt;img src=&#34;http://www.wangxingfeng.com/images/2017042301.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;3-less&#34;&gt;3.Less&lt;/h2&gt;

&lt;h3 id=&#34;3-1-安装&#34;&gt;3.1 安装&lt;/h3&gt;

&lt;p&gt;因为&lt;code&gt;Less&lt;/code&gt;是使用&lt;code&gt;JavaScript&lt;/code&gt;语言写的，它可以运行在服务端的&lt;code&gt;NodeJS&lt;/code&gt;环境中，因此，最简单的安装方式是用 &lt;code&gt;npm install&lt;/code&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install -g less # -g表示全局安装
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-2-编译&#34;&gt;3.2 编译&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Less&lt;/code&gt;文件的后缀名为&lt;code&gt;.less&lt;/code&gt;. 浏览器并不能直接识别&lt;code&gt;.less&lt;/code&gt;的文件，需要编译成&lt;code&gt;.css&lt;/code&gt;结尾的&lt;code&gt;CSS&lt;/code&gt;样式文件。
假设你已经有一个&lt;code&gt;less&lt;/code&gt;文件&lt;code&gt;demo.less&lt;/code&gt;，在命令行执行以下命令，即可编译生成&lt;code&gt;demo.css&lt;/code&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lessc demo.less demo.css  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;lessc&lt;/code&gt;是Less的命令，第一个参数demo.less为指定需要编译的源文件名， 第二个参数demo.css为编译后的CSS文件名。&lt;/p&gt;

&lt;p&gt;如果需要编译成压缩的CSS文件，可以全局安装下载一个Less官方提供的插件 &lt;a href=&#34;https://github.com/less/less-plugin-clean-css&#34;&gt;clean-css plugin&lt;/a&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install -g less-plugin-clean-css
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后，在命令行输入如下命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lessc --clean-css demo.less demo.min.css #多了一个参数 --clean-css
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-3-基本语法&#34;&gt;3.3 基本语法&lt;/h3&gt;

&lt;h4 id=&#34;3-3-1-变量&#34;&gt;3.3.1 变量&lt;/h4&gt;

&lt;p&gt;Less 的变量名使用&lt;code&gt;@&lt;/code&gt;符号开始, 比如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@nice-blue: #5B83AD;
@light-blue: @nice-blue + #111;

#header {
  color: @light-blue;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编译之后，得到如下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#header {
  color: #6c94be;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意：Less的变量本质上是常量，只能定义 一次。&lt;/p&gt;

&lt;h4 id=&#34;3-3-2-mixins&#34;&gt;3.3.2 Mixins&lt;/h4&gt;

&lt;p&gt;将一系列属性从一个规则集引入(“混合”)到另一个规则集的方式。&lt;/p&gt;

&lt;p&gt;比如，先定义了一个规则&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.bordered {
  border-top: dotted 1px black;
  border-bottom: solid 2px black;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;想要在其他的地方使用到这个规则，可以这样：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#menu a {
  color: #111;
  .bordered;
}

.post a {
  color: red;
  .bordered;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编译结果如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.bordered {
  border-top: dotted 1px black;
  border-bottom: solid 2px black;
}
#menu a {
  color: #111;
  border-top: dotted 1px black;
  border-bottom: solid 2px black;
}
.post a {
  color: red;
  border-top: dotted 1px black;
  border-bottom: solid 2px black;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-3-3-嵌套&#34;&gt;3.3.3 嵌套&lt;/h4&gt;

&lt;p&gt;根据HTML结构来嵌套样式规则。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#header {
  color: black;
  .navigation {
    font-size: 12px;
  }
  .logo {
    width: 300px;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编译之后的CSS样式文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#header {
  color: black;
}
#header .navigation {
  font-size: 12px;
}
#header .logo {
  width: 300px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;还可以结合伪类来嵌套，比如“清除浮动”的样式可以这样写：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.clearfix {
  display: block;
  zoom: 1;

  &amp;amp;:after {
    content: &amp;quot; &amp;quot;;
    display: block;
    font-size: 0;
    height: 0;
    clear: both;
    visibility: hidden;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上述代码里的符号&lt;code&gt;&amp;amp;&lt;/code&gt;表示当前选择器的父选择器。&lt;/p&gt;

&lt;p&gt;编译之后的结果如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.clearfix {
  display: block;
  zoom: 1;
}
.clearfix:after {
  content: &amp;quot; &amp;quot;;
  display: block;
  font-size: 0;
  height: 0;
  clear: both;
  visibility: hidden;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-3-4-媒体查询及嵌套&#34;&gt;3.3.4 媒体查询及嵌套&lt;/h4&gt;

&lt;p&gt;媒体查询（Media query ）可以嵌套在选择器中，编译时，会自动把选择器复制到媒体查询体内。媒体查询规则里还可以嵌套媒体查询。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.screen-color {
  @media screen {
    color: green;
    @media (min-width: 768px) {
      color: red;
    }
  }
  @media tv {
    color: black;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编译结果：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@media screen {
  .screen-color {
    color: green;
  }
}
@media screen and (min-width: 768px) {
  .screen-color {
    color: red;
  }
}
@media tv {
  .screen-color {
    color: black;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-3-5-运算&#34;&gt;3.3.5 运算&lt;/h4&gt;

&lt;p&gt;在Less中，数值、颜色、变量可以进行加、减、乘、除的运算。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@color: #224488 / 2; //results in #112244
background-color: #112244 + #111; // result is #223355

@base: 5%;
@filler: @base * 2; // result is 10%
@other: @base + @filler; // result is 15%
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-3-6-函数&#34;&gt;3.3.6 函数&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;Less&lt;/code&gt;提供了许多用于转换颜色、处理字符串 以及进行算术运算的函数。具体可以参考&lt;a href=&#34;http://lesscss.org/functions/&#34;&gt;Less Function Reference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这些函数使用起来非常简单。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@base: #f04615;
@width: 0.5;

.class {
  width: percentage(@width); 
  color: saturate(@base, 5%);
  background-color: spin(lighten(@base, 25%), 8);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在上述代码中我们使用 函数&lt;code&gt;percentage()&lt;/code&gt; 将 0.5 转换为 50%，然后用 函数&lt;code&gt;saturate()&lt;/code&gt;将基础颜色值的饱和度增加了 5%，再使用 函数lighten() 将背景颜色的亮度增加了 25%，最后通过函数spin()又将色相值增加 8。编译之后：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.class {
  width: 50%;
  color: #f6430f;
  background-color: #f8b38d;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-5-官网&#34;&gt;3.5 官网&lt;/h3&gt;

&lt;p&gt;更多内容，可以访问&lt;a href=&#34;http://lesscss.org/&#34;&gt;http://lesscss.org/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>