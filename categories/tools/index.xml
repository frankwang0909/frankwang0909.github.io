<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on Frank Wang&#39;s Coding World</title>
    <link>http://www.wangxingfeng.com/categories/tools/index.xml</link>
    <description>Recent content in Tools on Frank Wang&#39;s Coding World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>[Frank Wang](//www.wangxingfeng.com). Powered by [Hugo](//gohugo.io).</copyright>
    <atom:link href="http://www.wangxingfeng.com/categories/tools/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>用Hugo快速搭建个人静态博客</title>
      <link>http://www.wangxingfeng.com/build-blog-with-hugo</link>
      <pubDate>Mon, 03 Apr 2017 20:49:23 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/build-blog-with-hugo</guid>
      <description>

&lt;p&gt;最近心血来潮，想要重新折腾一番自己的博客。于是，发现了Hugo比之前使用的Jekyll更好用。本文是个人参照&lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34;&gt;Hugo官网&lt;/a&gt; 搭建个人博客的记录。&lt;/p&gt;

&lt;h2 id=&#34;step-1-install-hugo-下载-安装hugo&#34;&gt;Step 1. Install Hugo 下载、安装Hugo&lt;/h2&gt;

&lt;p&gt;下载地址：&lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;https://github.com/spf13/hugo/releases&lt;/a&gt;。
根据自己的操作系统，下载对应的安装包。我的操作系统是&lt;code&gt;Win7 64bit&lt;/code&gt;， 选择了&lt;code&gt;hugo_0.19_Windows-64bit.zip&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;下载完成之后，解压的文件夹包含以下3个文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo_0.19_windows_amd64.exe
LICENSE.md
README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将 &lt;code&gt;hugo_0.19_windows_amd64.exe&lt;/code&gt; 重命名为&lt;code&gt;hugo.exe&lt;/code&gt;。在你的软件安装盘新增名为&lt;code&gt;hugo&lt;/code&gt;的文件目录，在里面在新建一个&lt;code&gt;bin&lt;/code&gt;子目录。然后将&lt;code&gt;hugo.exe&lt;/code&gt;放到&lt;code&gt;hugo\bin&lt;/code&gt;目录下。再将这个&lt;code&gt;bin&lt;/code&gt;目录的路径添加到&lt;code&gt;系统环境变量&lt;/code&gt;中。&lt;/p&gt;

&lt;p&gt;完成以上步骤后，打开命令行输入&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果得到如下信息，说明安装成功。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo is the main command, used to build your Hugo site.

Hugo is a Fast and Flexible Static Site Generator
built with love by spf13 and friends in Go.

Complete documentation is available at http://gohugo.io/.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-2-创建一个名为blog的hugo站点&#34;&gt;Step 2. 创建一个名为blog的Hugo站点&lt;/h2&gt;

&lt;p&gt;我希望在E盘下创建站点，所以我先切换目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd e:
e:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后输入命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new site blog 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;得到如下提示创建成功的信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Congratulations! Your new Hugo site is created in E:\blog.

Just a few more steps and you&#39;re ready to go:

1. Download a theme into the same-named folder.
Choose a theme from https://themes.gohugo.io/, or
create your own with the &amp;quot;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;quot; command.
2. Perhaps you want to add some content. You can add single files
with &amp;quot;hugo new &amp;lt;SECTIONNAME&amp;gt;\&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;&amp;quot;.
3. Start the built-in live server via &amp;quot;hugo server&amp;quot;.

Visit https://gohugo.io/ for quickstart guide and full documentation.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;进入该目录，可以看到自动生成了5个目录和一个配置文件config.toml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;|-- archetypes
|-- content   #存放内容的目录
|-- data      
|-- layouts   
|-- static    #存放静态资源（图片,css,js）
|-- themes    #存放主题
|-- config.toml  #配置文件
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-3-添加内容&#34;&gt;Step 3. 添加内容&lt;/h2&gt;

&lt;p&gt;切换到该目录下，然后输入如下命令，会在&lt;code&gt;content&lt;/code&gt;的目录下创建&lt;code&gt;post&lt;/code&gt;目录，在&lt;code&gt;post&lt;/code&gt;目录下创建名为&lt;code&gt;test.md&lt;/code&gt;的文件。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd blog
hugo new post/test.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;提示文件创建成功：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;E:\blog\content\post\test.md created
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;用文本编辑器打开文件&lt;code&gt;test.md&lt;/code&gt;文件
可以看到如下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;+++
date = &amp;quot;2017-01-02T17:45:06+08:00&amp;quot;  #创建文件的时间
title = &amp;quot;test&amp;quot;                      #文件的标题
draft = true                        # 是否为草稿

+++
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上述内容为自动创建的与文章有关的内容。自己也可以在两个&lt;code&gt;+++&lt;/code&gt;之间添加如下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;image = &amp;quot;hugo.png&amp;quot;            #指定图片。
category = &amp;quot;test&amp;quot;             #文章的类别
tags = [&amp;quot;Hugo&amp;quot;, &amp;quot;intro&amp;quot;]      #文章的标签分类。
url = &amp;quot;new_start&amp;quot;             #该文章访问时的相对的url地址，默认为文件名。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;更多的设置，可以参考&lt;a href=&#34;https://gohugo.io/content/front-matter/&#34;&gt;官方文档&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;以后写博客文章就是这样创建&lt;code&gt;markdown&lt;/code&gt;文件, 之后通过&lt;code&gt;Hugo&lt;/code&gt;编译成静态的html文件。&lt;/p&gt;

&lt;h2 id=&#34;step-4-添加主题&#34;&gt;Step 4. 添加主题&lt;/h2&gt;

&lt;p&gt;官方提供了多种主题可供选择，具体在 &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;https://themes.gohugo.io/&lt;/a&gt; 可以找到。&lt;/p&gt;

&lt;p&gt;找到想要的主题后，切换到&lt;code&gt;themes&lt;/code&gt;目录（该目录可以存放多个不同的主题）。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd themes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由于需要使用到Git下载主题，以及版本管理和代码推送。需要事先下载安装好&lt;a href=&#34;https://git-for-windows.github.io/&#34;&gt;Git&lt;/a&gt;，关于如何安装和使用Git，可以参考我之前的一篇文章：&lt;a href=&#34;http://www.wangxingfeng.com/git-intro/&#34;&gt;Git学习笔记&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;把选定的主题下载到&lt;code&gt;themes&lt;/code&gt;目录下。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/dim0627/hugo-icarus-theme.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-5-启动服务-本地预览&#34;&gt;Step 5. 启动服务，本地预览&lt;/h2&gt;

&lt;p&gt;先从&lt;code&gt;themes&lt;/code&gt;目录下退回到&lt;code&gt;blog&lt;/code&gt;目录, 然后启动服务。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ..
hugo server --theme=hugo-icarus-theme --buildDrafts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在浏览器中打开 &lt;code&gt;[http://localhost:1313/](https://themes.gohugo.io/)&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;step-6-修改配置文件-config-toml&#34;&gt;Step 6. 修改配置文件&lt;code&gt;config.toml&lt;/code&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;languageCode = &amp;quot;zh-cn&amp;quot;
title = &amp;quot;Frank Wang&#39;s Coding World&amp;quot;
baseurl = &amp;quot;http://www.wangxingfeng.com/&amp;quot;  

[Params]
    Author =&amp;quot;Frank Wang&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-7-生成网站&#34;&gt;Step 7.  生成网站&lt;/h2&gt;

&lt;h3 id=&#34;1-改变文章-draft-草稿-状态&#34;&gt;1.改变文章&lt;code&gt;draft&lt;/code&gt;（草稿）状态：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;hugo undraft content/post/*.md
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-启动-hugo-生成发布文件到-public-目录下&#34;&gt;2. 启动&lt;code&gt;hugo&lt;/code&gt;, 生成发布文件到&lt;code&gt;public&lt;/code&gt;目录下。&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;hugo --theme=hugo-icarus-theme
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;step-8-托管到-github-pages&#34;&gt;Step 8. 托管到&lt;code&gt;GitHub Pages&lt;/code&gt;&lt;/h2&gt;

&lt;h3 id=&#34;1-使用-git-来进行版本管理&#34;&gt;1. 使用&lt;code&gt;Git&lt;/code&gt;来进行版本管理&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;git init
echo &amp;quot;/public/&amp;quot; &amp;gt;&amp;gt; .gitignore
echo &amp;quot;/themes/&amp;quot; &amp;gt;&amp;gt; .gitignore
git add --all
git commit -m &amp;quot;Initial commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-创建-git-远程仓库&#34;&gt;2. 创建&lt;code&gt;Git&lt;/code&gt; 远程仓库：&lt;/h3&gt;

&lt;p&gt;登录你的&lt;code&gt;GitHub&lt;/code&gt;. 创建一个新的仓库，仓库名为&lt;code&gt;Github用户.github.io&lt;/code&gt;
比如我的是&lt;code&gt;frankwang0909.github.io&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;3-添加-git-远程仓库-并提交代码&#34;&gt;3. 添加&lt;code&gt;Git&lt;/code&gt; 远程仓库，并提交代码。&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd public
git init
git remote add origin git@github.com:frankwang0909/frankwang0909.github.io.git

git add --all
git commit -m &amp;quot;blog added&amp;quot;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-以后有内容改动-提交代码&#34;&gt;4.以后有内容改动，提交代码.&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;(cd ..; hugo --theme=hugo_theme_robust)
git add --all
git commit -m &amp;quot;&amp;lt;some change message&amp;gt;&amp;quot;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Markdown 学习笔记</title>
      <link>http://www.wangxingfeng.com/markdonw-notes</link>
      <pubDate>Sun, 05 Jun 2016 22:05:46 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/markdonw-notes</guid>
      <description>

&lt;h2 id=&#34;定义&#34;&gt;定义：&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/zh-cn/Markdown&#34;&gt;维基百科&lt;/a&gt;上的介绍：&lt;/p&gt;

&lt;p&gt;Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯（John Gruber）。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML(或者HTML)文档”。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。&lt;/p&gt;

&lt;p&gt;Markdown同时还是一个由Gruber编写的Perl脚本：Markdown.pl。它把用markdown语法编写的内容转换成有效的、结构良好的XHTML或HTML内容，并将左尖括号(&amp;rsquo;&amp;lt;&amp;lsquo;)和&amp;amp;号替换成它们各自的字符实体引用。它可以用作单独的脚本，Blosxom和Movable Type的插件又或者BBEdit的文本过滤器.&lt;/p&gt;

&lt;h2 id=&#34;用处&#34;&gt;用处：&lt;/h2&gt;

&lt;p&gt;从维基百科的介绍来看，markdown就是一种标记语言。它简洁的语法代替排版，可以使我们专心于码字，用「标记」语法来代替常见的排版格式。比如我现在这个博客的内容，就是直接用Markdown写的。 不用考虑复杂的排版，只需要记住几个简单常用的语法就行，然后可以轻松地转换成HTML文件，变成可以被浏览器解析的网页。
如果你有一个自己独立的博客，只是想码码字，不想编写复杂HTML和CSS代码，Markdown无疑是一个很好地选择。&lt;/p&gt;

&lt;h2 id=&#34;最基本的语法&#34;&gt;最基本的语法：&lt;/h2&gt;

&lt;p&gt;1.标题：&lt;/p&gt;

&lt;p&gt;如果一段文字被定义为标题，只要在这段文字前加 &lt;code&gt;#&lt;/code&gt;号即可。1个&lt;code&gt;#&lt;/code&gt;表示 一级标题；&lt;code&gt;##&lt;/code&gt;表示 二级标题；以此类推，总共6级标题， &lt;code&gt;#&lt;/code&gt;号后加一个空格。&lt;/p&gt;

&lt;p&gt;2.引用代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1）引用整段代码，只需要空是个空格或者一个Tab键，完整地保留代码缩进格式。
2）在一行内引入代码片段。用Tab键上方的反引号(`  `) 包围代码。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.链接：&lt;/p&gt;

&lt;p&gt;用方括号&lt;code&gt;[]&lt;/code&gt;括起来要添加超链接的文字，用圆括号&lt;code&gt;()&lt;/code&gt;把url括起来。写法如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;`[Markdown维基百科英文版](https://en.wikipedia.org/wiki/Markdown)`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果如右边所示：&lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34;&gt;Markdown维基百科英文版&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.图片:&lt;/p&gt;

&lt;p&gt;插入链接与插入图片的语法很像，区别在一个 &lt;code&gt;!&lt;/code&gt;号。图片为：&lt;code&gt;![文字描述](url)。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;5.分割线:&lt;/p&gt;

&lt;p&gt;用三个以上的&lt;code&gt;星号&lt;/code&gt;、&lt;code&gt;减号&lt;/code&gt;、&lt;code&gt;底线&lt;/code&gt;来建立一个分隔线，行内不能有其他东西。可以在星号或是减号中间插入空格&lt;/p&gt;

&lt;p&gt;6.列表：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1)无序列表无序列表使用`星号`、`加号`或是`减号`作为列表标记；
2)有序列表则直接在文字前加`1.` `2.` `3.` 符号要和文字之间加上一个字符的空格。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;7.粗体与斜体:&lt;/p&gt;

&lt;p&gt;用两个 &lt;code&gt;*&lt;/code&gt; 包含一段文本就是粗体的语法，用一个 &lt;code&gt;*&lt;/code&gt;包含一段文本就是斜体的语法。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;这是粗体文字&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;这是斜体文体&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;8.空格与换行：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;单个回车&lt;/code&gt; 视为空格；&lt;code&gt;连续回车&lt;/code&gt;才能分段。&lt;/p&gt;

&lt;p&gt;9.区块引用 &lt;code&gt;Blockquotes&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Markdown 标记区块引用是使用类似 email 中用 &lt;code&gt;&amp;gt;&lt;/code&gt;的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 &lt;code&gt;&amp;gt; ：&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;相关链接&#34;&gt;相关链接：&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://wowubuntu.com/markdown/basic.html&#34;&gt;快速入门指南&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://daringfireball.net/projects/markdown/&#34;&gt;Markdown官网&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Sublime Text 学习笔记</title>
      <link>http://www.wangxingfeng.com/sublimetext-notes</link>
      <pubDate>Fri, 13 May 2016 00:14:00 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/sublimetext-notes</guid>
      <description>

&lt;p&gt;自从把主力代码编辑器改为&lt;a href=&#34;https://www.sublimetext.com/&#34;&gt;Sublime Text&lt;/a&gt;之后，写代码的效率明显高了许多。最近，我开始尝试着给身边的朋友推荐这款编辑器。&lt;/p&gt;

&lt;h2 id=&#34;一-sublime-text-的优点&#34;&gt;一、Sublime Text 的优点&lt;/h2&gt;

&lt;p&gt;1.跨平台；&lt;/p&gt;

&lt;p&gt;2.轻量级，可拓展：有大量插件可由用户自行选择安装(首推&lt;code&gt;Emmet&lt;/code&gt;插件)。&lt;/p&gt;

&lt;p&gt;3.支持几乎所有的主流编程语言的语法高亮显示；&lt;/p&gt;

&lt;p&gt;4.代码自动补全，支持代码段（Code Snippet）；&lt;/p&gt;

&lt;p&gt;5.右上角的&lt;code&gt;minimap&lt;/code&gt;: 用来查看标注、快速拖动、迅速定位；&lt;/p&gt;

&lt;p&gt;6.快速跳转到不同的文件/方法/函数：支持模糊匹配；&lt;/p&gt;

&lt;p&gt;7.快速切换&lt;code&gt;Tab&lt;/code&gt;与&lt;code&gt;Space&lt;/code&gt;；&lt;/p&gt;

&lt;p&gt;8.格式化代码；&lt;/p&gt;

&lt;h2 id=&#34;二-安装sublime-text&#34;&gt;二、安装Sublime Text&lt;/h2&gt;

&lt;p&gt;1.下载安装包：&lt;/p&gt;

&lt;p&gt;Sublime Text官网地址：&lt;a href=&#34;https://www.sublimetext.com/&#34;&gt;https://www.sublimetext.com/&lt;/a&gt; 根据自己的系统选择对应的安装包下载并安装。目前稳定版本为&lt;code&gt;Sublime Text 3&lt;/code&gt;;&lt;/p&gt;

&lt;p&gt;2.安装Package Control:&lt;/p&gt;

&lt;p&gt;下载插件之前需要先安装&lt;code&gt;Package Control&lt;/code&gt;，它是用来管理和下载插件的控制组件。 &lt;code&gt;Package Control&lt;/code&gt;官网安装地址：&lt;a href=&#34;https://packagecontrol.io/installation&#34;&gt;https://packagecontrol.io/installation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2016051301.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;1）使用快键键 &lt;code&gt;ctrl+&lt;/code&gt; &lt;code&gt;或者&lt;/code&gt;View&lt;code&gt;&amp;gt;&lt;/code&gt;Show Console` 菜单打开控制台，然后，然后回车让它安装。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2016051302.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;2）根据Sublime Text的版本选择复制对应的版本代码；&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2016051303.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;3）黏贴到控制台输入框里，按&lt;code&gt;Enter键&lt;/code&gt;，插件管理包就进入正在下载安装的状态（可能需要一点时间）；&lt;/p&gt;

&lt;p&gt;3.自定义安装各种插件：&lt;/p&gt;

&lt;p&gt;在 Package Control官网地址：&lt;a href=&#34;https://packagecontrol.io/&#34;&gt;https://packagecontrol.io/&lt;/a&gt;可以看到各种插件以及它的下载量排名，找到自己感兴趣的，下载下来试用。&lt;/p&gt;

&lt;p&gt;下载安装方法如下： (windows平台)&lt;/p&gt;

&lt;p&gt;1）按下 &lt;code&gt;Ctrl+Shift+P&lt;/code&gt; 调出命令面板，输入&lt;code&gt;install&lt;/code&gt;， 调出 &lt;code&gt;Install Package&lt;/code&gt; 选项并回车，出来这样的画面，&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2016051305.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;2）然后输入自己想要下载的插件名称，比如: &lt;code&gt;HTML Extended&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2016051306.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;3）下载安装完成后会弹出类似这样的文件，说明已经成功安装该插件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2016051307.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;或者在左下角提示成功安装：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2016051308.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;三-推荐几个好用的插件&#34;&gt;三、推荐几个好用的插件：&lt;/h2&gt;

&lt;p&gt;1.Emmet：通过简单的命令直接生成一大段代码。&lt;/p&gt;

&lt;p&gt;2.ConvertToUTF8(转换成utf-8格式): 默认情况下，gbk编码格式的中文会变成乱码，这个插件可以实现自动转换。&lt;/p&gt;

&lt;p&gt;3.JsFormat：格式化js代码。可以还原别人网站被压缩过难以阅读的js代码。&lt;/p&gt;

&lt;p&gt;4.HTMLBeautify：格式化HTML。&lt;/p&gt;

&lt;p&gt;5.Hasher:符号转义。&lt;/p&gt;

&lt;p&gt;6.TrailingSpaces：多余空格标记。&lt;/p&gt;

&lt;p&gt;7.SideBarEnhancementS: 侧边栏增强功能。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;ChineseLocalization：汉化插件。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;四-常用的快捷键-windows平台下&#34;&gt;四、常用的快捷键（windows平台下）：&lt;/h2&gt;

&lt;p&gt;1.&lt;code&gt;Ctrl + Shift + N&lt;/code&gt;新建窗口；&lt;code&gt;Ctrl + W&lt;/code&gt;关闭该窗口。&lt;/p&gt;

&lt;p&gt;2.&lt;code&gt;Ctrl + N&lt;/code&gt;新建标签；&lt;code&gt;Ctrl + W&lt;/code&gt; 关闭当前标签；&lt;code&gt;Ctrl + Shift + T&lt;/code&gt; 恢复刚刚关闭的标签。&lt;/p&gt;

&lt;p&gt;3.&lt;code&gt;Alt + Shift + 2&lt;/code&gt;左右分屏； &lt;code&gt;Alt + Shift + 8&lt;/code&gt;  上下分屏；&lt;code&gt;Alt + Shift + 5&lt;/code&gt;  上下左右分为四屏。&lt;code&gt;Ctrl + 数字键&lt;/code&gt; 跳转到指定屏；&lt;code&gt;Ctrl + Shift + 数字键&lt;/code&gt; 将当前屏移动到指定。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ctrl+ 1&lt;/code&gt; 变回一屏显示。&lt;/p&gt;

&lt;p&gt;4.&lt;code&gt;F11&lt;/code&gt; 切换普通全屏; &lt;code&gt;Shift + F11&lt;/code&gt;切换无干扰全屏。&lt;/p&gt;

&lt;p&gt;5.&lt;code&gt;Ctrl + P&lt;/code&gt; 会列出当前打开的所有文件，点击某个文件可以快速跳转；&lt;/p&gt;

&lt;p&gt;6.&lt;code&gt;Ctrl + R&lt;/code&gt; 对于md文件，会列出大纲。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2016051309.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;7.&lt;code&gt;Ctrl + F&lt;/code&gt; 调出搜索框进行搜索；&lt;code&gt;Ctrl + H&lt;/code&gt; 替换&lt;/p&gt;

&lt;p&gt;8.&lt;code&gt;Ctrl + J&lt;/code&gt; 把选中区域合并为一行；&lt;code&gt;Ctrl + Shift + L&lt;/code&gt; 可以将当前选中区域打散，然后进行同时编辑：&lt;/p&gt;

&lt;p&gt;9.多行游标（可同时编辑多行代码）：&lt;code&gt;Ctrl + D&lt;/code&gt; 选择当前光标所在的词并高亮该词所有出现的位置，再次&lt;code&gt;Ctrl + D&lt;/code&gt;选择该词出现的下一个位置，在多重选词的过程中，使用&lt;code&gt;Ctrl + K&lt;/code&gt; 进行跳过，使用&lt;code&gt;Ctrl + U&lt;/code&gt;进行回退，使用&lt;code&gt;Esc&lt;/code&gt;退出多重编辑。&lt;/p&gt;

&lt;p&gt;10.&lt;code&gt;Ctrl + Enter&lt;/code&gt; 在当前行下面新增一行然后跳至该行；&lt;code&gt;Ctrl + Shift + Enter&lt;/code&gt; 在当前行上面增加一行并跳至该行。&lt;/p&gt;

&lt;p&gt;11.&lt;code&gt;Ctrl + E&lt;/code&gt; 自动生成代码片段（安装Emmet插件之后）。&lt;/p&gt;

&lt;p&gt;12.&lt;code&gt;Ctrl + shift + D&lt;/code&gt;在下一行复制当前行内容，并跳至该行。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git学习笔记</title>
      <link>http://www.wangxingfeng.com/git-intro</link>
      <pubDate>Sun, 03 Apr 2016 22:43:39 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/git-intro</guid>
      <description>

&lt;p&gt;&lt;code&gt;Git&lt;/code&gt;是一款分布式的代码管理工具，方便多人协作时的代码管理。在&lt;code&gt;win7&lt;/code&gt;系统中使用Git管理代码有2种主要的方式。&lt;/p&gt;

&lt;h2 id=&#34;方式一-msysgit&#34;&gt;方式一： &lt;code&gt;msysgit&lt;/code&gt;&lt;/h2&gt;

&lt;h3 id=&#34;step-1-下载并安装-msysgit&#34;&gt;Step 1: 下载并安装&lt;code&gt;msysgit&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://git-for-windows.github.io&#34;&gt;msysgit&lt;/a&gt; 是Windows版的Git。下载，然后按默认选项安装即可。安装完成后，在开始菜单里找到“ Git ”-&amp;gt;“ Git Bash ”，点击会弹出一个命令行窗口，说明Git安装成功。&lt;/p&gt;

&lt;h3 id=&#34;step-2-设置用户名&#34;&gt;Step 2: 设置用户名&lt;/h3&gt;

&lt;p&gt;在命令行输入以下命令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git config --global user.name &amp;quot;Your Name&amp;quot;
$ git config --global user.email &amp;quot;email@example.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;： &lt;code&gt;git confi&lt;/code&gt;g命令的&lt;code&gt;--global&lt;/code&gt;参数，用了这个参数，表示你这台电脑上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。&lt;/p&gt;

&lt;h3 id=&#34;step-3-创建版本库&#34;&gt;Step 3: 创建版本库&lt;/h3&gt;

&lt;p&gt;选择一个合适的地方，创建一个空目录：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir  gitskills  // 创建一个名gitskills的目录
$ cd   gitskills    // 切换gitskills目录
$ pwd           //pwd 命令用于显示当前目录
$ git init      //初始化Git仓库，当前目录中会多了一个.git目录（默认是隐藏的）
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：为避免莫名其妙地报错，请确保目录名（包括父目录）不包含 &lt;strong&gt;中文&lt;/strong&gt;。&lt;/p&gt;

&lt;h3 id=&#34;step-4-把文件添加到版本库&#34;&gt;Step 4: 把文件添加到版本库&lt;/h3&gt;

&lt;p&gt;在刚刚创建的目录(比如gitskills)下新建文件，或者从其他地方拷贝文件到该目录下。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git add readme.md  //新增一个readme.md文件
$ git commit -m &amp;quot;提交时的附加信息&amp;quot;  //把文件提交到仓库,并附上相关的说明文字（用引号括起来）
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;： 每次修改文件，都需要先&lt;code&gt;git add&lt;/code&gt;到暂存区，然后才能&lt;code&gt;git commit&lt;/code&gt;到仓库。可以&lt;code&gt;add&lt;/code&gt;一个文件之后&lt;code&gt;commit&lt;/code&gt;，也可以&lt;code&gt;add&lt;/code&gt;多个文件，然后一起&lt;code&gt;commit&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&#34;常用的git命令&#34;&gt;常用的Git命令：&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;查看状态 : &lt;code&gt;git status&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;推送到远程库： &lt;code&gt;git remote add origin git@github.com: 具体远程库的名称&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;查看difference: &lt;code&gt;git diff readme.md&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;查看历史记录： &lt;code&gt;git log&lt;/code&gt; 或者 &lt;code&gt;git log --pretty=oneline&lt;/code&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;你会看到一大串类似&lt;code&gt;commit: 8a56b4...ba53c1e50&lt;/code&gt;十六进制字符串，它是版本号&lt;code&gt;commit id&lt;/code&gt;， 回退时会用到。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;版本回退： 仅退到上一个版本可使用命令 &lt;code&gt;git reset --hard HEAD^&lt;/code&gt;； 如果版本比较多，可以先 &lt;code&gt;git log&lt;/code&gt; 找到对应的版本号commit_id， 然后使用命令 &lt;code&gt;git reset --hard commit_id&lt;/code&gt;（版本号可以不用写全，git会自动查找匹配的）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;查看命令历史： &lt;code&gt;git reflog&lt;/code&gt;， 如果回退之后又后悔了，而且已经关了Git，那就使用 &lt;code&gt;git reflog&lt;/code&gt;，找到对应的commit，以便回到未来的哪个版本。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;更新本地库：推送前先  &lt;code&gt;git pull&lt;/code&gt; 更新本地库，以免远程库已经改变导致推送失败报错。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;方式二-使用-gihub-提供的-github-for-windows&#34;&gt;方式二： 使用&lt;code&gt;GiHub&lt;/code&gt;提供的&lt;code&gt;GitHub for Windows&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;在window平台下使用Git的最简单的方式是使用GitHub网站提供的&lt;a href=&#34;https://desktop.github.com/&#34;&gt;GitHub for Windows&lt;/a&gt;。优点是直接图形化的操作界面，完全不用记命令。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>