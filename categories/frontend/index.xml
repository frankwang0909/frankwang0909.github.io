<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Frontend on Frank Wang&#39;s Coding World</title>
    <link>http://www.wangxingfeng.com/categories/frontend/index.xml</link>
    <description>Recent content in Frontend on Frank Wang&#39;s Coding World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>[Frank Wang](//www.wangxingfeng.com). Powered by [Hugo](//gohugo.io). Theme by [PPOffice](http://github.com/ppoffice).</copyright>
    <atom:link href="http://www.wangxingfeng.com/categories/frontend/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>JavaScript实现复制内容到剪贴板的功能</title>
      <link>http://www.wangxingfeng.com/copy2clipboard</link>
      <pubDate>Wed, 05 Apr 2017 20:29:51 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/copy2clipboard</guid>
      <description>

&lt;h2 id=&#34;1-zeroclipboard-js&#34;&gt;1.ZeroClipboard.js&lt;/h2&gt;

&lt;p&gt;点击按钮实现复制链接或者一段文本到剪贴板，这个小功能想必不少人都见过。GitHub上就有这么一个点击按钮复制仓库地址的功能。如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2017040501.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Github&lt;/code&gt;用的是&lt;a href=&#34;http://zeroclipboard.org/&#34;&gt;ZeroClipboard&lt;/a&gt;来实现这一功能。这个库是用一个不可见的Flash来完成剪贴操作的。即将 Flash 做成透明的，以便于我们放在诸如链接、按钮等需要放置的任何地方。这样，用户界面看起来没有变化，当点击链接或按钮时，实际上点击是却是 Flash，从而实现复制操作。具体实现方法，可以参考官方文档&lt;a href=&#34;http://zeroclipboard.org。&#34;&gt;http://zeroclipboard.org。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;我们知道&lt;code&gt;Flash&lt;/code&gt;正走向没落，不少功能被越来越强大的&lt;code&gt;HTML5&lt;/code&gt;所替代。而且，出于安全方面的考虑，不少浏览器都默认禁用了Flash。那么有没有不是Flash的实现方式呢？&lt;/p&gt;

&lt;h2 id=&#34;2-clipboard-js&#34;&gt;2.clipboard.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://clipboardjs.com/&#34;&gt;clipboard.js&lt;/a&gt;是个更加轻量的JavaScript库，没有使用Flash，而是依赖于&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Selection&#34;&gt;Selection&lt;/a&gt;和&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand&#34;&gt;execCommand&lt;/a&gt;这两个API，并且使用了HTML5的特性，比如自定义数据的&lt;code&gt;data-* 属性&lt;/code&gt;。因此，clipboard.js在兼容性方面比ZeroClipboard.js差，但现代浏览器(IE9+)基本能够兼容。&lt;/p&gt;

&lt;p&gt;使用方法非常简单：&lt;/p&gt;

&lt;p&gt;1)&lt;a href=&#34;https://github.com/zenorocha/clipboard.js/archive/master.zip&#34;&gt;下载代码&lt;/a&gt;，并引入到文件中。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;dist/clipboard.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2)实例化一个Clipboard对象，参数可以是&lt;code&gt;CSS选择器&lt;/code&gt;、&lt;code&gt;HTML节点&lt;/code&gt;、NodeList对象&lt;/p&gt;

&lt;p&gt;参数为&lt;code&gt;CSS选择器&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;new Clipboard(&#39;.btn&#39;); // btn为DOM元素的class名, 跟jQuery的用法一样。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参数为&lt;code&gt;HTML节点&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var btn = document.getElementById(&#39;btn&#39;);
var clipboard = new Clipboard(btn);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;参数为&lt;code&gt;NodeList对象&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var btns = document.querySelectorAll(&#39;button&#39;);
var clipboard = new Clipboard(btns);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3)实例化对象的时候，可以同时设置复制的内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var clipboard = new Clipboard(&#39;.btn&#39;, {
    text: function() {
        return &#39;to be or not to be&#39;; //剪贴板上的文本
    }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4)也可以通过data-*属性来设置要复制的内容&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!-- Target --&amp;gt;
&amp;lt;input id=&amp;quot;foo&amp;quot; value=&amp;quot;https://github.com/zenorocha/clipboard.js.git&amp;quot;&amp;gt;

&amp;lt;!-- Trigger --&amp;gt;
&amp;lt;button class=&amp;quot;btn&amp;quot; data-clipboard-target=&amp;quot;#foo&amp;quot;&amp;gt;点击复制&amp;lt;/button&amp;gt;

&amp;lt;script&amp;gt;
    var clipboard = new Clipboard(&#39;.btn&#39;);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;点击一下，看看是否成功复制到剪贴板：&lt;/p&gt;

&lt;p&gt;&lt;input id=&#34;foo&#34; value=&#34;https://github.com/zenorocha/clipboard.js.git&#34; style=&#34;width:300px;&#34;&gt;
&lt;button class=&#34;btn&#34; data-clipboard-target=&#34;#foo&#34;&gt;点击复制&lt;/button&gt;
&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/1.6.0/clipboard.min.js&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34; &gt;
    var clipboard = new Clipboard(&#39;.btn&#39;);
&lt;/script&gt;

&lt;p&gt;&lt;code&gt;data-clipboard-target&lt;/code&gt;属性的值&lt;code&gt;#foo&lt;/code&gt;对应的是目标节点的CSS选择器。&lt;/p&gt;

&lt;p&gt;5）更多的配置信息和使用方法，请查阅&lt;a href=&#34;https://clipboardjs.com/&#34;&gt;clipboard.js官网&lt;/a&gt;，有兴趣的朋友，应该看看它的源码。&lt;/p&gt;

&lt;p&gt;注意我说的看源码，指的是&lt;code&gt;src目录&lt;/code&gt;的代码。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2017040502.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2017040505.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;代码是长这样的。没错，这是ES6的写法。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2017040504.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;千万不要去看&lt;code&gt;dist&lt;/code&gt;下的&lt;code&gt;clipboard.js&lt;/code&gt; ，那个是编译之后的代码。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.wangxingfeng.com/images/2017040503.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>通过userAgent识别移动设备，自动跳转移动端站点</title>
      <link>http://www.wangxingfeng.com/useragent</link>
      <pubDate>Tue, 04 Apr 2017 21:02:50 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/useragent</guid>
      <description>

&lt;p&gt;不少互联网公司的网站都分为PC端和手机端。如果用户用手机访问PC站点，受限于手机网络，很可能会出现加载网页缓慢的情况。
因此，如何识别用户访问网站的设备，并且自动跳转到对应的站点呢？&lt;/p&gt;

&lt;h2 id=&#34;navigator-useragent&#34;&gt;navigator.userAgent&lt;/h2&gt;

&lt;p&gt;navigator是JavaScript中的一个独立的对象，用于提供用户所使用的浏览器以及操作系统等信息，以navigator对象属性的形式来提供。所有浏览器都支持该对象。&lt;/p&gt;

&lt;p&gt;navigator对象有一个userAgent属性，会返回用户的设备操作系统和浏览器的信息。&lt;/p&gt;

&lt;p&gt;1.用&lt;code&gt;谷歌浏览器&lt;/code&gt;，随便打开一个网页，&lt;code&gt;F12&lt;/code&gt;打开Chrome调试工具，输入&lt;code&gt;navigator.userAgent&lt;/code&gt;, 会返回如下的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.98 Safari/537.36&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个字符串可以分成四个主要的部分，我来解释一下各个部分的含义：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1）Mozilla/5.0 ：表示兼容Mozilla, 几乎所有的浏览器都有这个字符;
2) (Windows NT 6.1; Win64; x64): 表示设备的操作系统版本，以及CPU信息；
3）AppleWebKit/537.36 (KHTML, like Gecko)：表示浏览器的内核；
4) Chrome/57.0.2987.98 Safari/537.36: 表示浏览器的版本号。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.用&lt;code&gt;火狐浏览器&lt;/code&gt;，随便打开一个网页，&lt;code&gt;F12&lt;/code&gt;打开调试工具，同样地在控制台输入&lt;code&gt;navigator.userAgent&lt;/code&gt;, 返回如下的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:52.0) Gecko/20100101 Firefox/52.0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;与之前的结果区别：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1)浏览器内核是Gecko内核，
2)浏览器版本是火狐的Firefox/52.0。从这里我们可以看出火狐浏览器是基于Gecko内核。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.用&lt;code&gt;谷歌浏览器&lt;/code&gt;模拟&lt;code&gt;手机&lt;/code&gt;访问，选择&lt;code&gt;iPhone6s&lt;/code&gt;，同样在调试工具控制台输入&lt;code&gt;navigator.userAgent&lt;/code&gt;, 会返回如下的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意看出现了&lt;code&gt;iPhone&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;4.用&lt;code&gt;谷歌浏览器&lt;/code&gt;模拟&lt;code&gt;平板设备&lt;/code&gt;访问，选择&lt;code&gt;iPad&lt;/code&gt;，同样在调试工具控制台输入&lt;code&gt;navigator.userAgent&lt;/code&gt;, 会返回如下的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;Mozilla/5.0 (iPad; CPU OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意看出现了&lt;code&gt;iPad&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;5.用&lt;code&gt;谷歌浏览器&lt;/code&gt;模拟&lt;code&gt;安卓设备&lt;/code&gt;，比如选择&lt;code&gt;Galaxy S5&lt;/code&gt;，同样在调试工具控制台输入&lt;code&gt;navigator.userAgent&lt;/code&gt;, 会返回如下的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.98 Mobile Safari/537.36&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意看出现了&lt;code&gt;Android&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;6.用&lt;code&gt;谷歌浏览器&lt;/code&gt;模拟&lt;code&gt;winPhone设备&lt;/code&gt;，比如选择&lt;code&gt;Microsoft Lumia 950&lt;/code&gt;，同样在调试工具控制台输入&lt;code&gt;navigator.userAgent&lt;/code&gt;, 会返回如下的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;Mozilla/5.0 (Windows Phone 10.0; Android 4.2.1; Microsoft; Lumia 950) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Mobile Safari/537.36 Edge/14.14263&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意看出现了&lt;code&gt;Windows Phone&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;通过以上的小测试，我们还可以能够发现一个规律：手机和平板设备访问时，&lt;code&gt;navigator.userAgent&lt;/code&gt;返回的字符串都会包含&lt;code&gt;Mobile&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&#34;useragent的用途-识别手机-平板设备&#34;&gt;userAgent的用途：识别手机、平板设备&lt;/h2&gt;

&lt;p&gt;刚才我们已经看到了手机和平板设备访问时，&lt;code&gt;navigator.userAgent&lt;/code&gt;返回的字符串都会包含&lt;code&gt;Mobile&lt;/code&gt;，可以利用这一点，来实现文章开头提出的需求，自动识别用户访问设备从而跳转对应的站点。&lt;/p&gt;

&lt;p&gt;PC端站点可以加上如下代码，自动跳转到移动端站点&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var ua = navigator.userAgent.toLowerCase();
if (/mobile|android|iphone|ipad|phone/i.test(ua)) {
   window.location.href = &amp;quot;http://m.example.com&amp;quot;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果在&lt;code&gt;微信&lt;/code&gt;中打开和在&lt;code&gt;手机浏览器&lt;/code&gt;打开网页执行的是不同的脚本的话，还可以通过&lt;code&gt;userAgent&lt;/code&gt;来判断是否是在&lt;code&gt;微信&lt;/code&gt;中打开的。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var ua = navigator.userAgent.toLowerCase();
if(/micromessenger/i.test(ua){
    //to do
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;本文首发于&lt;a href=&#34;http://www.wangxingfeng.com/&#34;&gt;Frank Wang的个人博客&lt;/a&gt;, 转载时请附上原文链接。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>代码换行导致的inline元素间距bug</title>
      <link>http://www.wangxingfeng.com/fix-inline-bug</link>
      <pubDate>Wed, 11 Jan 2017 21:48:19 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/fix-inline-bug</guid>
      <description>

&lt;h2 id=&#34;inline-元素&#34;&gt;inline 元素：&lt;/h2&gt;

&lt;p&gt;如果inline元素(span, strong, b, em, i等)代码换行，它们之间会产生我们不希望的间隔。通过设置&lt;code&gt;margin:0&lt;/code&gt;或者&lt;code&gt;padding:0&lt;/code&gt; , 这个都间隔仍然存在，说明这个间隔并不是margin或者padding。&lt;/p&gt;

&lt;style type=&#34;text/css&#34;&gt;
    .inline p span:first-child {
        background-color: #66d9ef;
    }
    .inline p span:nth-child(2) {
        background-color: #c191c1;
    }
    .inline p span:nth-child(3) {
        background-color: #9fe89f;
    }
    .inline p span:nth-child(4) {
        background-color: #8787f1;
    }
    .inline p span:last-child{
        background-color: #464141;
    }
    .inline p span{
        font-size:16px;
        color:#fff;
        line-height:30px;
    }

    .inline-block span{
        display: inline-block;
        width:20%;
    }
    .fs0{
        font-size: 0;
    }
&lt;/style&gt;

&lt;div class=&#34;inline &#34;&gt;
    &lt;p&gt;
        &lt;span&gt;inline元素 1&lt;/span&gt;
        &lt;span&gt;inline元素 2&lt;/span&gt;
        &lt;span&gt;inline元素 3&lt;/span&gt;
    &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;是否为了不消除这个间隔，就必须把inline元素的html代码写在一行内呢？答案是否定的。
开发的时候，为了方便阅读和调试，我们习惯于把代码写成这样：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;
    &amp;lt;span&amp;gt;inline元素 1&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;inline元素 2&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;inline元素 3&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;inline元素 4&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;inline元素 5&amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法：设置父元素&lt;code&gt;font-size:0&lt;/code&gt;，再给子元素单独设置&lt;code&gt;font-size&lt;/code&gt;，修复bug。
&lt;div class=&#34;inline &#34;&gt;
    &lt;p class=&#34;fs0&#34;&gt;
        &lt;span&gt;inline元素 1&lt;/span&gt;
        &lt;span&gt;inline元素 2&lt;/span&gt;
        &lt;span&gt;inline元素 3&lt;/span&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;inline-block-元素&#34;&gt;inline-block 元素：&lt;/h2&gt;

&lt;p&gt;要在一行展示多个并列的元素，除了通过设置浮动&lt;code&gt;float:left;float:right&lt;/code&gt;，我们还可以通过设置&lt;code&gt;display:inline-block&lt;/code&gt; 把inline元素或block元素，转换成一个可以设置高度和宽度的inline-block元素。&lt;/p&gt;

&lt;p&gt;如果有5个&lt;code&gt;inline-block&lt;/code&gt;元素，设置它们的宽度为&lt;code&gt;20%&lt;/code&gt;。我们期望它们是在一行展示的。但是因为html代码换行产生了间距，导致无法在一行内显示。
&lt;div class=&#34;inline &#34;&gt;
    &lt;p class=&#34;inline-block&#34;&gt;
        &lt;span&gt;inline-block元素 1&lt;/span&gt;
        &lt;span&gt;inline-block元素 2&lt;/span&gt;
        &lt;span&gt;inline-block元素 3&lt;/span&gt;
        &lt;span&gt;inline-block元素 4&lt;/span&gt;
        &lt;span&gt;inline-block元素 5&lt;/span&gt;
    &lt;/p&gt;
&lt;/div&gt;
解决方法: 设置父元素&lt;code&gt;font-size:0&lt;/code&gt;，再给子元素单独设置&lt;code&gt;font-size&lt;/code&gt;。
&lt;div class=&#34;inline &#34;&gt;
    &lt;p class=&#34;inline-block fs0&#34;&gt;
        &lt;span&gt;inline-block元素 1&lt;/span&gt;
        &lt;span&gt;inline-block元素 2&lt;/span&gt;
        &lt;span&gt;inline-block元素 3&lt;/span&gt;
        &lt;span&gt;inline-block元素 4&lt;/span&gt;
        &lt;span&gt;inline-block元素 5&lt;/span&gt;
    &lt;/p&gt;
&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JavaScript的正则表达式</title>
      <link>http://www.wangxingfeng.com/js-reg</link>
      <pubDate>Sun, 18 Dec 2016 21:56:37 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/js-reg</guid>
      <description>

&lt;h2 id=&#34;1-基本概念&#34;&gt;1.基本概念&lt;/h2&gt;

&lt;p&gt;正则表达式(&lt;code&gt;Regular Expression&lt;/code&gt;)是一个字符串，定义了某个规则，按照这种规则来描述、匹配一系列符合条件的字符串。&lt;/p&gt;

&lt;h2 id=&#34;2-通配符&#34;&gt;2.通配符&lt;/h2&gt;

&lt;p&gt;当前目录下查找文件(linux 命令行)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;find ./ -name *.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-在线图形工具&#34;&gt;3.在线图形工具：&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;[https://regexper.com/](https://regexper.com/)&lt;/code&gt; 是一款非常实用的正则表达式图形化工具。你也可以&lt;a href=&#34;https://regexper.com/&#34;&gt;下载&lt;/a&gt;到本地，运行速度更快&lt;/p&gt;

&lt;h2 id=&#34;4-ide中可以支持正则表达式&#34;&gt;4.IDE中可以支持正则表达式：&lt;/h2&gt;

&lt;p&gt;我用的是编辑器是&lt;code&gt;Sublime Text 3&lt;/code&gt;。快捷键&lt;code&gt;Ctrl+F&lt;/code&gt;查找字符串，&lt;code&gt;Ctrl+H&lt;/code&gt;替换字符串，在底部唤出的面板左上角有开启正则表达式（快捷键&lt;code&gt;Alt+R&lt;/code&gt;）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://www.wangxingfeng.com
http://m.wangxingfeng.com
http://cosmic.wangxingfeng.com
http://blog.wangxingfeng.com
http://img.wangxingfeng.com/1234.jpg
http://img.wangxingfeng.com/158.png
https://img.wangxingfeng.com/128744.jpg
http://img.wangxingfeng.com/1285.jpg
http://img.wangxingfeng.com/7884.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;Sublime&lt;/code&gt;中找出上面的&lt;code&gt;url&lt;/code&gt;中&lt;code&gt;http&lt;/code&gt;协议的&lt;code&gt;jpg&lt;/code&gt;文件，去掉其协议头&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Find What: http:\/\/(.+\.jpg)
replace with: $1
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;5-javascript中实例化-regexp-对象&#34;&gt;5.JavaScript中实例化&lt;code&gt;RegExp&lt;/code&gt;对象&lt;/h2&gt;

&lt;p&gt;5.1.字面量:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var reg = /\d/; 
var reg2 = /[a-zA-Z0-9]/g;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5.2.构造函数:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var reg = new RegExp(\d); 
var reg = new RegExp(&#39;[a-zA-Z0-9]&#39;, &#39;g&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;6-修饰符&#34;&gt;6.修饰符：&lt;/h2&gt;

&lt;p&gt;6.1.&lt;code&gt;g&lt;/code&gt;(global):表示全局匹配，不添加则默认匹配到第一个字符串。&lt;/p&gt;

&lt;p&gt;6.2.&lt;code&gt;i&lt;/code&gt;(ignore case):表示忽略大小写,不添加则默认大小写敏感。&lt;/p&gt;

&lt;p&gt;6.3.&lt;code&gt;m&lt;/code&gt;(multiple lines):表示多行匹配。&lt;/p&gt;

&lt;h2 id=&#34;7-原意文本字符-和元字符&#34;&gt;7.原意文本字符 和元字符：&lt;/h2&gt;

&lt;p&gt;7.1.原意文本字符：表示字符的原本含义，如&lt;code&gt;a&lt;/code&gt;表示小写字母a，&lt;code&gt;1&lt;/code&gt;表示数字1。&lt;/p&gt;

&lt;p&gt;7.2.元字符：在正则表达式中有特殊含义的非字母字符，如星号&lt;code&gt;*&lt;/code&gt;，问号&lt;code&gt;？&lt;/code&gt;等。&lt;/p&gt;

&lt;p&gt;7.3.常用元字符及其含义：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1）[]:构建字符类，范围类等；
2）{}:量词，表示字符的个数；
3）():构建分组；
4）*：表示任意个字符；可理解为{0,}；
5）？：表示最多有一个该字符{0,1}；
6）+：表示至少有一个该字符{1,}；
7）^: 取反；
8）\n: 换行符；
9）\r: 回车符；
10）\0: 空字符；
11）\t: 水平制表符；
12）\v:  垂直制表符；
13）\f: 换页符。
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;8-字符类&#34;&gt;8.字符类：&lt;/h2&gt;

&lt;p&gt;8.1.通常，正则表达式一个字符对应字符串一个字符，如&lt;code&gt;/a/&lt;/code&gt;对应字母a。元字符&lt;code&gt;[]&lt;/code&gt;构建一个字符类，如&lt;code&gt;[abc]&lt;/code&gt;可以匹配字符a或b或c中的任意一个。在浏览器调试界面控制台输入：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;a1b2c3d4a&#39;.match(/[abc]/g);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;会得到匹配的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;a&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;8.2字符类取反：&lt;/p&gt;

&lt;p&gt;在&lt;code&gt;[]&lt;/code&gt;内使用元字符^创建反向类，即匹配不属于某个字符类的字符串。如&lt;code&gt;[^abc]&lt;/code&gt;匹配不是字符a、b、c的内容。
在浏览器调试界面控制台输入：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;a1b2c3d4a&#39;.match(/[^abc]/g);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;会得到匹配的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[&amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;3&amp;quot;, &amp;quot;d&amp;quot;, &amp;quot;4&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;8.3范围类：&lt;/p&gt;

&lt;p&gt;1)&lt;code&gt;[a-z]&lt;/code&gt;表示：a到z的任意一个字符；&lt;/p&gt;

&lt;p&gt;在浏览器调试界面控制台输入：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;a1b2c3d4a&#39;.match(/[a-z]/g);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;会得到匹配的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;d&amp;quot;, &amp;quot;a&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2)&lt;code&gt;[a-zA-Z]&lt;/code&gt;表示：a到z以及A到Z的任意一个字符。&lt;/p&gt;

&lt;p&gt;在浏览器调试界面控制台输入：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;a1B2Zc3d4&#39;.match(/[a-zA-Z]/g);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;会得到匹配的字符串：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[&amp;quot;a&amp;quot;, &amp;quot;B&amp;quot;, &amp;quot;Z&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;d&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;8.4 预定义类（简写）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1) /./ =&amp;gt; /[^\r\n]/  除了回车符和换行符之外的任何字符
2) /\d/ =&amp;gt; [0-9]  数字字符
3) /\D/ =&amp;gt; [^0-9] 非数字字符
4) /\s/ =&amp;gt; 空白字符
5) /\S/ =&amp;gt; 非空白字符
6) /\w/ =&amp;gt; [a-zA-Z0-9_]单词字符（字母，数字，下划线. 
7) /\W/ =&amp;gt; [^a-zA-Z0-9_]非单词字符
8) \b: 单词边界
9) \B：非单词边界；
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;9.量词：在字符后跟一个{}表示重复前面字符的次数。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1.) /\d{1,20}/: 1~20个数字；
2.) /\d*/ =&amp;gt; /\d{0,}/: 任意个数字;
3.) /\d+/ =&amp;gt; /\d{1,}/  :至少一个数字；
4.) /\d?/ =&amp;gt; /\d{0,1}/ :之多一个数字；
5.) /\d{3}/ : 3个数字
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;10-贪婪模式与非贪婪模式&#34;&gt;10.贪婪模式与非贪婪模式：&lt;/h2&gt;

&lt;p&gt;10.1.贪婪模式：正则表达式会尽可能多地去匹配字符。&lt;/p&gt;

&lt;p&gt;例如，下面的正则表达式，匹配3到6个数字的字符串，默认会尽可能多地去匹配。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;b12345678A5879e123&#39;.match(/\d{3,6}/g)

&amp;gt;&amp;gt;&amp;gt;[&amp;quot;123456&amp;quot;, &amp;quot;5879&amp;quot;, &amp;quot;123&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;10.2.非贪婪模式：在量词后加一个问号, 尽可能少地去匹配字符串。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;b12345678A5879e123&#39;.match(/\d{3,6}?/g)

&amp;gt;&amp;gt;&amp;gt;[&amp;quot;123&amp;quot;, &amp;quot;456&amp;quot;, &amp;quot;587&amp;quot;, &amp;quot;123&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;11-分组&#34;&gt;11.分组：&lt;/h2&gt;

&lt;p&gt;11.1.括号“()”把字符串变成分组，使量词作用于分组。&lt;/p&gt;

&lt;p&gt;示例代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;abcabcabccc&#39;.match(/abc{3}/g); 
&amp;gt;&amp;gt;&amp;gt;[&amp;quot;abccc&amp;quot;]

&#39;abcabcabccc&#39;.match(/(abc){3}/g);
&amp;gt;&amp;gt;&amp;gt;[&amp;quot;abcabcabc&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;11.2.逻辑或：竖线 “|” 作用于分组, 可以表示选择多个分支中的一个。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;whatwhaowho&#39;.match(/wh(at|o)/g)；
&amp;gt;&amp;gt;&amp;gt;[&amp;quot;what&amp;quot;, &amp;quot;who&amp;quot;]

&#39;whatwhaowhowhy&#39;.match(/wh(at|o|y)/g)
&amp;gt;&amp;gt;&amp;gt;[&amp;quot;what&amp;quot;, &amp;quot;who&amp;quot;, &amp;quot;why&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;11.3.捕获分组，反向引用&lt;/p&gt;

&lt;p&gt;想要把如下日期格式化：&lt;code&gt;2016-01-20&lt;/code&gt; =&amp;gt; &lt;code&gt;01/20/2016&lt;/code&gt;；可以这样写&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;2016-01-20&#39;.replace(/(\d{4})-(\d{2})-(\d{2})/g, &amp;quot;$2/$3/$1&amp;quot;)
&amp;gt;&amp;gt;&amp;gt;&amp;quot;01/20/2016&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;$&lt;/code&gt;加上一个数字，数字对应的是分组的序号，第一个分组的内容用&lt;code&gt;$1&lt;/code&gt;来捕获，第二分组的内容用&lt;code&gt;$2&lt;/code&gt;来捕获，以此类推。&lt;/p&gt;

&lt;p&gt;11.4.忽略分组：分组内加上&lt;code&gt;?:&lt;/code&gt;表示忽略该分组，而捕获该组的内容。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;2016-01-20&#39;.replace(/(?:\d{4})-(\d{2})-(\d{2})/g, &amp;quot;$1/$2&amp;quot;)
&amp;gt;&amp;gt;&amp;gt;&amp;quot;01/20&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;12-断言&#34;&gt;12.断言：&lt;/h2&gt;

&lt;p&gt;12.1.正则表达式从文本头部向文本尾部开始解析，文本尾部方向称为“前”，反之，为“后”。&lt;/p&gt;

&lt;p&gt;12.2.前瞻与后顾：正则表达式匹配到规则的时候，向前检查是否符合断言，称为&amp;rdquo;前瞻&amp;rdquo;。向后检查是否符合断言则称为&amp;rdquo;后顾&amp;rdquo;。JavaScript不支持后顾。&lt;/p&gt;

&lt;p&gt;12.3.正向/肯定前瞻：向前符合断言。exp(?=assert)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &#39;5a68cz7&#39;.match(/\d(?=[a-z])/g);
    &amp;gt;&amp;gt;&amp;gt;[&amp;quot;5&amp;quot;, &amp;quot;8&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;12.4.负向/否定前瞻：向前不符合断言。exp(?!assert)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;5a68cz7&#39;.match(/\d(?=[a-z])/g);
&amp;gt;&amp;gt;&amp;gt;[&amp;quot;6&amp;quot;, &amp;quot;7&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;13-regexp对象属性&#34;&gt;13.RegExp对象属性&lt;/h3&gt;

&lt;p&gt;13.1.&lt;code&gt;global&lt;/code&gt;: 是否全文搜索（只读属性）;&lt;/p&gt;

&lt;p&gt;13.2.&lt;code&gt;ignoreCase&lt;/code&gt;：是否大小写敏感（只读属性）;&lt;/p&gt;

&lt;p&gt;13.3.&lt;code&gt;multline&lt;/code&gt;: 是否多行（只读属性）;&lt;/p&gt;

&lt;p&gt;13.4.&lt;code&gt;source&lt;/code&gt;：正则表达式文本内容；（只读属性）;&lt;/p&gt;

&lt;p&gt;13.5.&lt;code&gt;lastIndex&lt;/code&gt;: 当前表达式匹配内容的最后一个字符的下一个位置。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var reg1 = /\d{3,5}-\w{6}/, reg2 = /\d{3,5}-\w{6}/gim;
reg1.global
&amp;gt;&amp;gt;&amp;gt;false
reg1.ignoreCase
&amp;gt;&amp;gt;&amp;gt;false
reg1.multiline
&amp;gt;&amp;gt;&amp;gt;false
reg2.global
&amp;gt;&amp;gt;&amp;gt;true
reg2.multiline
&amp;gt;&amp;gt;&amp;gt;true
reg2.ignoreCase
&amp;gt;&amp;gt;&amp;gt;true
reg1.source
&amp;gt;&amp;gt;&amp;gt;&amp;quot;\d{3,5}-\w{6}&amp;quot;
reg2.source
&amp;gt;&amp;gt;&amp;gt;&amp;quot;\d{3,5}-\w{6}&amp;quot;
reg1.source == reg2.source
&amp;gt;&amp;gt;&amp;gt;true
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;14-regexp的方法-test-exec&#34;&gt;14.RegExp的方法：&lt;code&gt;test()&lt;/code&gt;, &lt;code&gt;exec()&lt;/code&gt;;&lt;/h2&gt;

&lt;p&gt;14.1.&lt;code&gt;RegExp.test(string)&lt;/code&gt;: 测试某个字符串是否能够匹配该正则表达式。参数为字符串；返回值为布尔值。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var reg1 = /\d/, reg2 = /\d/g;
reg1.test(&#39;a12ab&#39;);
&amp;gt;&amp;gt;&amp;gt;true

reg2.test(&#39;a12ab&#39;);
&amp;gt;&amp;gt;&amp;gt;true

reg2.test(&#39;a12ab&#39;);
&amp;gt;&amp;gt;&amp;gt;true

reg2.test(&#39;a12ab&#39;); //注意这里变成`false`了就是因为每执行一次，`lastIndex`属性变了一次导致的。所以用`test`方法的RegExp不要用全局匹配模式。
&amp;gt;&amp;gt;&amp;gt;false

reg2.test(&#39;a12ab&#39;);
&amp;gt;&amp;gt;&amp;gt;true

reg2.test(&#39;a12ab&#39;);
&amp;gt;&amp;gt;&amp;gt;true

while(reg2.test(&#39;a12ab&#39;)){
    console.log(&#39;reg2.lastIndex:&#39; +reg2.lastIndex);
}
&amp;gt;&amp;gt;&amp;gt; reg2.lastIndex:2
&amp;gt;&amp;gt;&amp;gt; reg2.lastIndex:3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;14.2.&lt;code&gt;RegExp.exec(string)&lt;/code&gt;: 返回匹配信息的数组。&lt;/p&gt;

&lt;p&gt;如果没有匹配的文本，则返回&lt;code&gt;null&lt;/code&gt;，否则返回一个结果数组。非全局匹配模式，&lt;code&gt;lastIndex&lt;/code&gt;为0，不会变。全局模式下，每次执行，&lt;code&gt;lastIndex&lt;/code&gt;都会跟着改变。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var reg1 = /\d+(\w)\d/, reg2 = /\d+(\w)\d/g, str=&amp;quot;1a2ce58g79ht&amp;quot;;
var result = reg1.exec(str);
console.log(reg1.lastIndex + &#39;\t&#39; + result.index+ &#39;\t&#39; + result.toString());
&amp;gt;&amp;gt;&amp;gt; 0   0   1a2,a
while(result=reg2.exec(str)){
    console.log(&#39;reg2.lastIndex:&#39;+ reg2.lastIndex + &#39;\t&#39; + &#39;result.index:&#39;+ result.index+ &#39;\t&#39; + result.toString());    
}
&amp;gt;&amp;gt;&amp;gt;reg2.lastIndex:3 result.index:0  1a2,a
&amp;gt;&amp;gt;&amp;gt;reg2.lastIndex:9 result.index:5  58g7,g
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;15-string-的一些正则操作-查找-替换-切分等-方法-match-search-replace-split&#34;&gt;15.&lt;code&gt;String&lt;/code&gt;的一些正则操作(查找、替换、切分等)方法：&lt;code&gt;match()&lt;/code&gt;、&lt;code&gt;search()&lt;/code&gt;、&lt;code&gt;replace()&lt;/code&gt;、&lt;code&gt;split()&lt;/code&gt;;&lt;/h2&gt;

&lt;p&gt;15.1. &lt;code&gt;string.match(RegExp)&lt;/code&gt;：&lt;/p&gt;

&lt;p&gt;1)非全局模式下，返回第一个匹配结果及其&lt;code&gt;index&lt;/code&gt;以及原字符串的引用(见示例代码)；&lt;/p&gt;

&lt;p&gt;2)全局模式下，返回所有匹配结果为元素的数组；&lt;/p&gt;

&lt;p&gt;3)匹配失败则返回&lt;code&gt;null&lt;/code&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var reg1 = /\d{4}-\d{2}-\d{2}/;
var reg2 = /\d{4}-\d{2}-\d{2}/g;
var str = &amp;quot;2016-10-01 2017-10-01 20181001&amp;quot;;
var matchArray1 = str.match(reg1);
var matchArray2 = str.match(reg2);
console.log(matchArray1);
&amp;gt;&amp;gt;&amp;gt;[&amp;quot;2016-10-01&amp;quot;, index: 0, input: &amp;quot;2016-10-01 2017-10-01 20181001&amp;quot;]

console.log(matchArray2);
&amp;gt;&amp;gt;&amp;gt;[&amp;quot;2016-10-01&amp;quot;, &amp;quot;2017-10-01&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;15.2.&lt;code&gt;string.search(RegExp)&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;参数可以是&lt;code&gt;子字符串&lt;/code&gt;也可以是&lt;code&gt;正则表达式&lt;/code&gt;。这个方法用来寻找某个子字符串或者正则表达式在该字符串中第一次匹配成功的位置，如果不成功，则返回&lt;code&gt;-1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;15.3.&lt;code&gt;string.replace(RegExp, replacement)&lt;/code&gt;：&lt;/p&gt;

&lt;p&gt;1)这个方法用来进行正则表达式替换，将&lt;code&gt;RegExp&lt;/code&gt;能匹配的文本替换成第二个参数&lt;code&gt;replacement&lt;/code&gt;。默认只进行一次匹配。如果设定为全局模式，则所有能匹配的文本都会替换。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;2016-10-01 2017-10-01 20181001&amp;quot;.replace(/\d{4}-\d{2}-\d{2}/, &amp;quot;Date&amp;quot;);
&amp;gt;&amp;gt;&amp;gt;&amp;quot;Date 2017-10-01 20181001&amp;quot;

&amp;quot;2016-10-01 2017-10-01 20181001&amp;quot;.replace(/\d{4}-\d{2}-\d{2}/g, &amp;quot;Date&amp;quot;);
&amp;gt;&amp;gt;&amp;gt;&amp;quot;Date Date 20181001&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2)如果第二个参数字符串中引用分组，可以使用&lt;code&gt;$1&lt;/code&gt;表示第一个分组，&lt;code&gt;$2&lt;/code&gt;表示第二个分组，以此类推。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;2016-10-01 2017-10-01 20181001&amp;quot;.replace(/(\d{4})-(\d{2})-(\d{2})/, &amp;quot;$2/$3/$1&amp;quot;);
&amp;gt;&amp;gt;&amp;gt;&amp;quot;10/01/2016 2017-10-01 20181001&amp;quot;

&amp;quot;2016-10-01 2017-10-01 20181001&amp;quot;.replace(/(\d{4})-(\d{2})-(\d{2})/g, &amp;quot;$2/$3/$1&amp;quot;);
&amp;gt;&amp;gt;&amp;gt;&amp;quot;10/01/2016 10/01/2017 20181001&amp;quot;

&amp;quot;2016-10-01 2017-10-01 20181001&amp;quot;.replace(/(\d{4})-?(\d{2})-?(\d{2})/g, &amp;quot;$2/$3/$1&amp;quot;);
&amp;gt;&amp;gt;&amp;gt;&amp;quot;10/01/2016 10/01/2017 10/01/2018&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3)如果要在第二个参数中表示&lt;code&gt;$&lt;/code&gt;字符，则必须使用&lt;code&gt;$$&lt;/code&gt;转义。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;the price is 12.99&amp;quot;.replace(/([\d+\.\d{0,2}|\d+])/, &amp;quot;$$$1&amp;quot;);
&amp;gt;&amp;gt;&amp;gt;&amp;quot;the price is $12.99&amp;quot;

&amp;quot;the price is 12&amp;quot;.replace(/([\d+\.\d{0,2}|\d+])/, &amp;quot;$$$1&amp;quot;);
&amp;quot;the price is $12&amp;quot;

&amp;quot;the price is 12.99&amp;quot;.replace(/(\d+\.\d{0,2})/, &amp;quot;￥$1&amp;quot;);
&amp;gt;&amp;gt;&amp;gt;&amp;quot;the price is ￥12.99&amp;quot;

&amp;quot;the price is 12&amp;quot;.replace(/([\d+\.\d{0,2}|\d+])/, &amp;quot;$&amp;quot;);
&amp;quot;the price is $12&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4)第二个参数还可以是函数。&lt;/p&gt;

&lt;p&gt;下面的例子展示了如何将t开头的单词转换为大写。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;one two three&amp;quot;.replace(/\bt[a-zA-Z]+\b/g, function(m){
    return m.toUpperCase();
});
&amp;gt;&amp;gt;&amp;gt;&amp;quot;one TWO THREE&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;15.4. &lt;code&gt;string.split(RegExp)&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;这个方法使用一个正则表达式切分字符串，正则表达式是否使用了全局模式对结果没有影响。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;one two three&amp;quot;.split(/s+/);
&amp;gt;&amp;gt;&amp;gt;[&amp;quot;one two three&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>推荐几个常用的CDN公共库</title>
      <link>http://www.wangxingfeng.com/cdn</link>
      <pubDate>Sat, 20 Aug 2016 21:07:46 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/cdn</guid>
      <description>

&lt;h2 id=&#34;cdn&#34;&gt;CDN&lt;/h2&gt;

&lt;p&gt;CDN的全称是Content Delivery Network，即内容分发网络。是指一种通过互联网互相连接的电脑网络系统，利用最靠近每位用户的服务器，更快、更可靠地将音乐、图片、视频、应用程序及其他文件发送给用户，来提供高性能、可扩展性及低成本的网络内容传递给用户。&lt;/p&gt;

&lt;h2 id=&#34;cdn公共库&#34;&gt;CDN公共库&lt;/h2&gt;

&lt;p&gt;CDN公共库指将常用的js库存放在CDN节点，以方便广大开发者直接调用。与存放在服务器单机上相比，CDN公共库更加稳定、高速。一般的CDN公共库都会包含全球所有最流行的开源JavaScript库，可以直接引用。&lt;/p&gt;

&lt;h3 id=&#34;优点&#34;&gt;优点：&lt;/h3&gt;

&lt;p&gt;1.提高访问速度：&lt;/p&gt;

&lt;p&gt;假设你网站的jQuery引用了新浪的CDN，那么当用户的浏览器提交请求时，浏览器自动下载网络上最近的可用的文件，下载速度会更快。&lt;/p&gt;

&lt;p&gt;2.更好的缓存:&lt;/p&gt;

&lt;p&gt;许多网站都使用了国内或者是国外的几个知名的CDN公共库。很可能用户浏览器的缓存区里早就已经下载了许多版本的jQuery，访问你的网站时，不需要重复下载jQuery。如果你用自己的服务器提供jQuery，那么你的用户至少要下载一次它。&lt;/p&gt;

&lt;h2 id=&#34;推荐几个常用前端公共库cdn&#34;&gt;推荐几个常用前端公共库CDN&lt;/h2&gt;

&lt;h3 id=&#34;国外的&#34;&gt;国外的&lt;/h3&gt;

&lt;p&gt;1.jQuery: &lt;a href=&#34;https://code.jquery.com/&#34;&gt;https://code.jquery.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.Google: &lt;a href=&#34;https://developers.google.com/speed/libraries/&#34;&gt;https://developers.google.com/speed/libraries/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.CDNJS: &lt;a href=&#34;https://cdnjs.com/libraries&#34;&gt;https://cdnjs.com/libraries&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;国内的&#34;&gt;国内的&lt;/h3&gt;

&lt;p&gt;1.cdnjs: &lt;a href=&#34;http://cdnjs.net/&#34;&gt;http://cdnjs.net/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.百度：&lt;a href=&#34;http://developer.baidu.com/wiki/index.php?title=docs/cplat/libs&#34;&gt;http://developer.baidu.com/wiki/index.php?title=docs/cplat/libs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.360：&lt;a href=&#34;http://libs.useso.com/&#34;&gt;http://libs.useso.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.又拍云：&lt;a href=&#34;http://upcdn.b0.upaiyun.com/&#34;&gt;http://upcdn.b0.upaiyun.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.新浪：&lt;a href=&#34;http://lib.sinaapp.com/&#34;&gt;http://lib.sinaapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;国内外常用的jquerycdn&#34;&gt;国内外常用的jQueryCDN：&lt;/h3&gt;

&lt;p&gt;1.jQuery官网： &lt;a href=&#34;http://code.jquery.com/jquery-2.0.0.min.js&#34;&gt;http://code.jquery.com/jquery-2.0.0.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.CDNJS： &lt;a href=&#34;http://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.0/jquery.min.js&#34;&gt;http://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.0/jquery.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.Google Hosted Libraries： &lt;a href=&#34;http://ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js&#34;&gt;http://ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.jsDeliver： &lt;a href=&#34;http://cdn.jsdelivr.net/jquery/2.0.0/jquery-2.0.0.min.js&#34;&gt;http://cdn.jsdelivr.net/jquery/2.0.0/jquery-2.0.0.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.七牛: &lt;a href=&#34;http://cdn.staticfile.org/jquery/2.0.0/jquery.min.js&#34;&gt;http://cdn.staticfile.org/jquery/2.0.0/jquery.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;6.百度: &lt;a href=&#34;http://libs.baidu.com/jquery/2.0.0/jquery.min.js&#34;&gt;http://libs.baidu.com/jquery/2.0.0/jquery.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;7.新浪: &lt;a href=&#34;http://lib.sinaapp.com/js/jquery/2.0/jquery.min.js&#34;&gt;http://lib.sinaapp.com/js/jquery/2.0/jquery.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;8.又拍云: &lt;a href=&#34;http://upcdn.b0.upaiyun.com/libs/jquery/jquery-2.0.0.min.js&#34;&gt;http://upcdn.b0.upaiyun.com/libs/jquery/jquery-2.0.0.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;9.360: &lt;a href=&#34;http://libs.useso.com/js/jquery/2.0.0/jquery.min.js&#34;&gt;http://libs.useso.com/js/jquery/2.0.0/jquery.min.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;当然，毕竟第三方的服务也不一定完全靠谱，如果引用的是国外的站点的话，哪天被墙了也有可能。所以，我们可以加入以下代码，当
CDN加载失败时，还可以加载自己本地的jQuery文件。&lt;a href=&#34;https://paulund.co.uk/fallback-on-local-jquery-if-cdn-fails&#34;&gt;以下代码来源链接&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;
    window.jQuery || document.write(&#39;&amp;lt;script src=&amp;quot;js/libs/jquery-2.1.0.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&#39;);
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>前端工程师应该具备的SEO基础知识</title>
      <link>http://www.wangxingfeng.com/seo</link>
      <pubDate>Mon, 01 Aug 2016 21:49:40 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/seo</guid>
      <description>

&lt;h2 id=&#34;seo-是什么&#34;&gt;SEO 是什么？&lt;/h2&gt;

&lt;p&gt;SEO 是“Search Engine Optimization”（搜索引擎优化）或“Search Engine Optimizer”（搜索引擎优化服务商）的首字母缩略词。通俗地说，SEO就是通过对网站内部调整优化及站外优化，使网站满足搜索引擎收录排名需求，在搜索引擎中提高关键词排名，从而把精准用户带到网站，获得免费流量，产生直接销售或品牌推广。&lt;/p&gt;

&lt;p&gt;新手入门可以阅读&lt;a href=&#34;https://support.google.com/webmasters/answer/35291?hl=zh-Hans&#34;&gt;Google 搜索引擎优化 (SEO) 单页指南.pdf&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;如果想要进一步学习，可以参考&lt;a href=&#34;http://static.googleusercontent.com/media/www.google.com/en/us/intl/zh-cn/webmasters/docs/search-engine-optimization-starter-guide-zh-cn.pdf&#34;&gt;Google搜索引擎优化入门指南&lt;/a&gt; （需翻墙），&lt;a href=&#34;http://www.wangxingfeng.com/posts/search-engine-optimization-starter-guide-zh-cn.pdf&#34;&gt;如果翻不了，可以点击这里&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&#34;前端工程师应该掌握的seo知识&#34;&gt;前端工程师应该掌握的SEO知识&lt;/h2&gt;

&lt;p&gt;目前不少公司设有SEO的专职岗位，而前端工程师不是专业做SEO优化推广的，并不需要变成SEO专家，但应掌握以下SEO基础知识。&lt;/p&gt;

&lt;h3 id=&#34;一-结构布局的优化&#34;&gt;一、结构布局的优化&lt;/h3&gt;

&lt;p&gt;1.结构扁平化。&lt;/p&gt;

&lt;p&gt;网站的层次结构尽量不超过三层。这样搜索引擎或者用户点击跳转3次可以到达网站内任何一个内页。&lt;/p&gt;

&lt;p&gt;2.优化导航。&lt;/p&gt;

&lt;p&gt;设置页面的主导航、副导航、分类导航、面包屑导航、分页页码等，方便用户跳转到想访问的页面。&lt;/p&gt;

&lt;h3 id=&#34;二-标签的语义化&#34;&gt;二、标签的语义化&lt;/h3&gt;

&lt;p&gt;搜索引擎的爬虫会依赖于标记来确定上下文和各个关键字的权重.因此，正确使用语义化的标签有利于搜索引擎抓取和收录网页内容。&lt;/p&gt;

&lt;p&gt;1.锚链接 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 标签：&lt;/p&gt;

&lt;p&gt;1）添加属性 &lt;strong&gt;title=&amp;ldquo;链接的文字说明&amp;rdquo;&lt;/strong&gt;，增加对该链接的说明，尤其是指向本站的链接。&lt;/p&gt;

&lt;p&gt;2）添加属性 &lt;strong&gt;rel=&amp;ldquo;no follow&amp;rdquo;&lt;/strong&gt;。 对于指向非本站的链接，增加这个属性是告诉爬虫该页面无需追踪。&lt;/p&gt;

&lt;p&gt;2.正文标题用&lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;,副标题用&lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;, 不要滥用标题。&lt;/p&gt;

&lt;p&gt;3.正文内容用&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;，正文内的换行用&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;， 其他地方不要滥用&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;来换行，而是通过CSS样式来设置。&lt;/p&gt;

&lt;p&gt;4.图片&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;添加属性 &lt;strong&gt;alt=&amp;ldquo;图片的文字注释&amp;rdquo;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;5.表格用&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; ，表格的标题使用 &lt;code&gt;&amp;lt;caption&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;6.有序列表用&lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt;， 无序列表用&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;， 定义列表用&lt;code&gt;&amp;lt; dl&amp;gt;&lt;/code&gt;、&lt;/p&gt;

&lt;p&gt;7.强调标签： &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; 表示强调， 可以用于突出关键词，有较大的权重。&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;也表示强调，权重比strong稍低。&lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt;标签虽然也有加粗效果，但没有强调的作用，因此不会增加标签内的文本权重。&lt;/p&gt;

&lt;p&gt;8.减少&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;的使用。iframes 阻塞页面加载, 延迟触发window.onload事件，给用户的感觉就是这个网页非常慢。&lt;/p&gt;

&lt;p&gt;9.重要内容HTML代码放在最前面，然后通过CSS属性控制位置。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title> CSS3 动画效果</title>
      <link>http://www.wangxingfeng.com/css3-%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C</link>
      <pubDate>Mon, 11 Jul 2016 21:03:27 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/css3-%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C</guid>
      <description>

&lt;h2 id=&#34;作用&#34;&gt;作用&lt;/h2&gt;

&lt;p&gt;用来定义样式变化的过渡效果, 在某些情况下（移动端），可以代替JavaScript代码来实现动画效果。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;transition&lt;/code&gt;属性是一个简写属性，用于设置四个过渡属性：&lt;/p&gt;

&lt;h3 id=&#34;1-transition-property&#34;&gt;1. transition-property&lt;/h3&gt;

&lt;p&gt;规定设置过渡效果的 CSS 属性的名称, 默认值为&lt;code&gt;all&lt;/code&gt;, 表示所有属性，也可以单独设置某个css属性。&lt;/p&gt;

&lt;h3 id=&#34;2-transition-duration&#34;&gt;2. transition-duration&lt;/h3&gt;

&lt;p&gt;过渡时间，值以秒或毫秒计。&lt;/p&gt;

&lt;h3 id=&#34;3-transition-timing-function&#34;&gt;3. transition-timing-function&lt;/h3&gt;

&lt;p&gt;过渡效果的速度曲线。该属性允许过渡效果随着时间来改变其速度。&lt;/p&gt;

&lt;p&gt;默认值为&lt;code&gt;linear&lt;/code&gt;。常见的有以下值：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;linear  匀速
ease    慢速开始，然后变快，然后慢速结束。
ease-in 以慢速开始
ease-out    以慢速结束
ease-in-out 以慢速开始和结束的过渡效果
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-transition-delay&#34;&gt;4. transition-delay&lt;/h3&gt;

&lt;p&gt;过渡效果的延迟，值以秒或毫秒计。默认为0。如果为正值，则表示延迟执行过渡效果；如果为负值（如-0.1s)，则会从过渡效果的执行0.1s的状态为初始状态开始执行过渡效果。&lt;/p&gt;

&lt;h2 id=&#34;兼容性&#34;&gt;兼容性&lt;/h2&gt;

&lt;p&gt;Internet Explorer 10、Firefox、Opera 和 Chrome等现代浏览器 支持 transition 属性。
Safari 支持替代的 -webkit-transition 属性。&lt;/p&gt;

&lt;h2 id=&#34;示例&#34;&gt;示例&lt;/h2&gt;

&lt;style&gt;
 .trans {
    display:block;
    width:100px;
    height:30px;
    background:#0ff;
    transition:width 2s ease;
 }
 .trans:hover{
    width:500px;
 }
&lt;/style&gt;

&lt;p&gt;&lt;a class=&#34;trans&#34;&gt;过渡效果&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>实现Tab切换的几种方式</title>
      <link>http://www.wangxingfeng.com/tab</link>
      <pubDate>Sun, 08 May 2016 23:36:44 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/tab</guid>
      <description>

&lt;p&gt;Tab 切换是网页中常见的组件。适当地使用，可以节省页面空间，在同一个大小的页面中展现更多的内容。Tab 切换的效果千差万别，只需要学会基本的思路，便可变换出各种各样的效果。下面我分别使用了原生js和jQuery来实现四种不同的Tab切换效果。&lt;/p&gt;

&lt;h2 id=&#34;方式一-用原生js实现各种tab切换效果&#34;&gt;方式一：用原生js实现各种Tab切换效果。&lt;/h2&gt;

&lt;h3 id=&#34;1-鼠标滑动切换&#34;&gt;1.鼠标滑动切换 :&lt;/h3&gt;

&lt;p&gt;这是最简单的Tab切换。鼠标滑过时，切换Tab.&lt;/p&gt;

&lt;p&gt;首先，通过getElementById、 getElementsByTagNameL等方法来获取相应的元素。&lt;/p&gt;

&lt;p&gt;然后，对相应的元素绑定mouseover事件即可。&lt;/p&gt;

&lt;p&gt;具体代码见  &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/js-mouseover-tab.html&#34;&gt;js-mouseover-tab.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo/js-mouseover-tab.html&#34;&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-鼠标点击切换&#34;&gt;2.鼠标点击切换&lt;/h3&gt;

&lt;p&gt;与第一种的区别在于绑定的事件不同。获取元素的方法是一样的，只需把绑定mouseovers事件改为click事件即可。&lt;/p&gt;

&lt;p&gt;具体代码见  &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/js-click-tab.html&#34;&gt;js-click-tab.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo/js-click-tab.html&#34;&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-鼠标滑动延迟切换&#34;&gt;3.鼠标滑动延迟切换&lt;/h3&gt;

&lt;p&gt;延迟切换涉及到了一个时间问题，可以通过设置定时器来实现延迟的效果。定时器有setTimeout()和setInterval()两种方式来设置。&lt;/p&gt;

&lt;p&gt;setTimeout() 方法用于在指定的毫秒数后调用函数或计算表达式。setTimeout() 只执行 code 一次。如果要多次调用，需要使用 setInterval()。&lt;/p&gt;

&lt;p&gt;setInterval() 方法可按照指定的周期（以毫秒计）来调用函数或计算表达式。setInterval() 方法会不停地调用函数，直到 clearInterval() 被调用或窗口被关闭。由 setInterval() 返回的 ID 值可用作 clearInterval() 方法的参数。&lt;/p&gt;

&lt;p&gt;因为这里的延迟切换是在指定的延迟时间之后才实现切换效果，所以使用setTimeout() 。&lt;/p&gt;

&lt;p&gt;具体代码见  &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/js-delay-tab.html&#34;&gt;js-delay-tab.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo/js-delay-tab.html&#34;&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;4-自动切换&#34;&gt;4.自动切换&lt;/h3&gt;

&lt;p&gt;自动切换，即按指定的周期自动切换到下一个Tab。这里也需要一个定时器，而且是按周期调用函数，因此使用setInterval() 方法来实现。
当鼠标滑动到某个Tab时，高亮显示当前页，同时停止自动切换，此时需要用到 clearInterval()方法来清除定时器。&lt;/p&gt;

&lt;p&gt;具体代码见  &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/js-auto-tab-01.html&#34;&gt;js-auto-tab-01.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;优化后的代码见 &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/js-auto-tab-02.html&#34;&gt;js-auto-tab-02.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo/js-auto-tab-02.html&#34;&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;方式二-用jquery实现各种tab切换效果-实现思路与原生的javascript是一样的-只是jquery封装了一些方法可以更方便操作dom元素&#34;&gt;方式二：用jQuery实现各种Tab切换效果: 实现思路与原生的JavaScript是一样的,只是jQuery封装了一些方法可以更方便操作DOM元素。&lt;/h2&gt;

&lt;h3 id=&#34;1-鼠标滑动切换-1&#34;&gt;1.鼠标滑动切换&lt;/h3&gt;

&lt;p&gt;具体代码见  &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/jQ-mouseover-tab.html&#34;&gt;jQ-mouseover-tab.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo/jQ-mouseover-tab.html&#34;&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;2-鼠标点击切换-1&#34;&gt;2.鼠标点击切换&lt;/h3&gt;

&lt;p&gt;具体代码见  &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/jQ-click-tab.html&#34;&gt;jQ-click-tab.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo/jQ-click-tab.html&#34;&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;3-鼠标滑动延迟切换-1&#34;&gt;3.鼠标滑动延迟切换&lt;/h3&gt;

&lt;p&gt;具体代码见  &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/jQ-delay-tab.html&#34;&gt;jQ-delay-tab.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo/jQ-delay-tab.html&#34;&gt;DEMO&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;4-自动切换-1&#34;&gt;4.自动切换&lt;/h3&gt;

&lt;p&gt;具体代码见  &lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/jQ-auto-tab-01.html&#34;&gt;jQ-auto-tab-01.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;优化后的代码 见&lt;a href=&#34;https://github.com/frankwang0909/Tab/blob/master/jQ-auto-tab-02.html&#34;&gt;jQ-auto-tab-02.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo/jQ-auto-tab-02.html&#34;&gt;DEMO&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>实现返回顶部效果的3种方式</title>
      <link>http://www.wangxingfeng.com/back-to-top</link>
      <pubDate>Fri, 22 Apr 2016 22:56:30 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/back-to-top</guid>
      <description>

&lt;p&gt;现在的网页内容比较多，基本上无法在一屏完全显示出来。这个时候，用户需要移动滚动条（滑动鼠标滚轮）来查看全部内容，如果想要返回顶部同样需要移动滚动条。如果页面太长，这样的体验显然不够好。因此，&lt;code&gt;返回顶部&lt;/code&gt;的按钮就应运而生了。&lt;/p&gt;

&lt;p&gt;返回顶部的实现方式主要有以下3种。&lt;/p&gt;

&lt;h2 id=&#34;实现方式一-设置锚链接&#34;&gt;实现方式一：设置锚链接&lt;/h2&gt;

&lt;p&gt;最简单快捷的方式是设置锚链接&lt;code&gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;&lt;/code&gt; 。&lt;code&gt;京东&lt;/code&gt;就是使用这种方式。&lt;/p&gt;

&lt;p&gt;优点：简单快速，没有浏览器兼容问题。&lt;/p&gt;

&lt;p&gt;参考代码如下：&lt;/p&gt;

&lt;p&gt;HTML代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;div id=&amp;quot;go-top&amp;quot;&amp;gt;
        &amp;lt;a href=&amp;quot;#&amp;quot;  id=&amp;quot;gotop-btn&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;!-- 直接使用锚链接来返回顶部 --&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;实现方式二-借助jquery来实现&#34;&gt;实现方式二：借助jQuery来实现&lt;/h2&gt;

&lt;p&gt;参考代码如下：&lt;/p&gt;

&lt;p&gt;HTML代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div id=&amp;quot;go-top&amp;quot;&amp;gt;
    &amp;lt;a href=&amp;quot;javascript:;&amp;quot;  id=&amp;quot;gotop-btn&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;JavaScript代码&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    $(function() {
        $(window).scroll(function(){
            // 当滚动条距顶部超过100像素时，返回顶部按钮出现，否则消失
    if ($(window).scrollTop()&amp;gt;=100){
        $(&amp;quot;#gotop-btn&amp;quot;).fadeIn(500);
    }
    else{
        $(&amp;quot;#gotop-btn&amp;quot;).fadeOut(500);
    }
    });
    //当点击跳转链接后，回到页面顶部位置
    $(&amp;quot;#gotop-btn&amp;quot;).click(function(){
        $(&#39;body,html&#39;).animate({scrollTop:0},300);
    });
});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;实现方式三-通过原生javascript来动态操作&#34;&gt;实现方式三：通过原生JavaScript来动态操作。&lt;/h2&gt;

&lt;p&gt;需要用到以下知识&lt;/p&gt;

&lt;h3 id=&#34;dom-操作&#34;&gt;DOM 操作：&lt;/h3&gt;

&lt;p&gt;1.根据ID获取元素：&lt;code&gt;document.getElementById&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;2.滚动条的数值，可读写：&lt;code&gt;document.documentElment.scrollTop&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;事件运用&#34;&gt;事件运用：&lt;/h3&gt;

&lt;p&gt;1.页面加载完毕后触发&lt;code&gt;window.onload&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;2.点击后触发&lt;code&gt;onclick&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;3.滚动条滚动时触发 &lt;code&gt;window.onscroll&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;定时器&#34;&gt;定时器：&lt;/h3&gt;

&lt;p&gt;1.&lt;code&gt;setInterval()&lt;/code&gt; : 设置定时器，需要传两个参数。&lt;/p&gt;

&lt;p&gt;2.&lt;code&gt;clearInterval()&lt;/code&gt;: 关闭定时器，需要传两个参数。&lt;/p&gt;

&lt;p&gt;参考代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;HTML代码
&amp;lt;div id=&amp;quot;go-top&amp;quot;&amp;gt;
    &amp;lt;a href=&amp;quot;javascript:;&amp;quot;  id=&amp;quot;gotop-btn&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;

js代码
&amp;lt;script  type=&amp;quot;text/javascript&amp;quot; &amp;gt;
    // 加载后触发事件
    window.onload = function() {
        var obtn = document.getElementById(&#39;gotop-btn&#39;);
        // 获取页面可视区域高度
        var clientHeight = document.documentElement.clientHeight;
        var timer = null;
        var isTop = true;
        // 滚动条滚动时触发事件，清除定时器，停在当前位置。
        window.onscroll = function() {
            // 获取滚动条距离顶部的数值
            var osTop = document.documentElement.scrollTop || document.body.scrollTop; 

            if(osTop &amp;gt;= clientHeight){
                // 显示返回按钮
                obtn.style.display = &amp;quot;block&amp;quot;;
            }
            else{
                // 隐藏返回按钮
                obtn.style.display = &amp;quot;none&amp;quot;;
            }
            if(!isTop){
                clearInterval(timer);
            }
            isTop = false;
        }
        obtn.onclick = function() {
            // 设置定时器
            timer = setInterval(function() {
                var osTop = document.documentElement.scrollTop || document.body.scrollTop; 
                // chrome使用document.body.scrollTop 来获取滚动条到顶部的距离。
                // 滚动条滚动由快到慢，即减少的距离从大到小。
                var ispeed = Math.floor(-osTop /6);
                // Math.floor()向下取整, 如果ispeed去正数，会导致osTop最后无法等于0，从而无法消除定时器。
                document.documentElement.scrollTop = document.body.scrollTop = osTop + ispeed;
                //滚动条到了顶部之后，清除定时器，否则会一直返回顶部没法下拉滚动条看底下的网页内容。
                isTop = true;
                // console.log(osTop-ispeed);
                if(osTop == 0){
                    clearInterval(timer);
                }
            },50)
        }
    }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>常见的下拉菜单</title>
      <link>http://www.wangxingfeng.com/dropdown-menu</link>
      <pubDate>Thu, 03 Mar 2016 23:55:37 +0800</pubDate>
      
      <guid>http://www.wangxingfeng.com/dropdown-menu</guid>
      <description>

&lt;h2 id=&#34;html结构&#34;&gt;HTML结构&lt;/h2&gt;

&lt;p&gt;网页中导航栏是一个很常见的组件。通常，我们使用无序列表来制作导航栏。比如&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div id=&amp;quot;nav&amp;quot;&amp;gt;
    &amp;lt;ul class=&amp;quot;navMenu&amp;quot;&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;首页&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;跟团游&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;自助游&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;游轮&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;自驾&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
    &amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;有些导航栏有下拉的二级菜单，那么我们在相应的位置上再加上列表构成二级菜单，比如&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div id=&amp;quot;nav&amp;quot;&amp;gt;
    &amp;lt;ul class=&amp;quot;navMenu&amp;quot;&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;首页&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;跟团游&amp;lt;/a&amp;gt;
            &amp;lt;ul class=&amp;quot;subMenu&amp;quot;&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;出境跟团&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;国内跟团&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;周边跟团&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;当地参团&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
        &amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;自助游&amp;lt;/a&amp;gt;
            &amp;lt;ul class=&amp;quot;subMenu&amp;quot; &amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;出境自助&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;国内自助&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;机票+酒店&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;火车+酒店&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
        &amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;游轮&amp;lt;/a&amp;gt;
            &amp;lt;ul class=&amp;quot;subMenu&amp;quot;&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;包船专享&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;日韩航线&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;欧洲航线&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;三峡航线&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;美洲航线&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
        &amp;lt;/li&amp;gt;
        &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;自驾&amp;lt;/a&amp;gt;
            &amp;lt;ul class=&amp;quot;subMenu&amp;quot;&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;周边自驾&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;国内自驾&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;出境自驾&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
        &amp;lt;/li&amp;gt;
    &amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;基本的css样式&#34;&gt;基本的CSS样式&lt;/h2&gt;

&lt;p&gt;列表默认是垂直方向排列的，而常见的导航栏主菜单是水平方向排列，二级下拉菜单是垂直方向排列的，所以我们需要对主菜单的li元素设置浮动，让其水平排列。设置浮动后，应记得清除浮动。可以使用class来作为公共的浮动和清除浮动的样式，然后在需要浮动的元素上添加相应的class，在浮动元素的父元素上添加清除浮动的class。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CSS代码&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;style type=&amp;quot;text/css&amp;quot;&amp;gt;
    /*reset*/
    body, div, ul,li, a{padding: 0; margin:0;}
    ul{list-style: none; }
    /*浮动和清除浮动*/
    .fl{float: left; }
    .clearfix:after{content:&amp;quot;&amp;quot;;display:block;clear:both;}
    .clearfix{zoom:1;} 
    /*导航栏*/
    #nav{width: 600px; height: 40px; margin:0 auto; background-color: #eee; }
    .navMenu li{ text-align: center; line-height: 40px; position: relative;}
    .navMenu li a{text-decoration: none;color:#000; padding: 0 20px; display: block; width:80px; }
    .subMenu{position: absolute; top: 40px; left: 0;display: none;}/*默认隐藏二级菜单*/
    .subMenu li{float:none; background-color:#eee; margin-left: 2px; }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;HTML代码&lt;/strong&gt; 改为如下所示：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;body&amp;gt;
    &amp;lt;div id=&amp;quot;nav&amp;quot;&amp;gt;
        &amp;lt;ul class=&amp;quot;navMenu clearfix&amp;quot;&amp;gt;
            &amp;lt;li class=&amp;quot;fl&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;首页&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li class=&amp;quot;fl&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;跟团游&amp;lt;/a&amp;gt;
                &amp;lt;ul class=&amp;quot;subMenu&amp;quot;&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;出境跟团&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;国内跟团&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;周边跟团&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;当地参团&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li class=&amp;quot;fl&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;自助游&amp;lt;/a&amp;gt;
                &amp;lt;ul class=&amp;quot;subMenu&amp;quot; &amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;出境自助&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;国内自助&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;机票+酒店&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;火车+酒店&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li class=&amp;quot;fl&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;游轮&amp;lt;/a&amp;gt;
                &amp;lt;ul class=&amp;quot;subMenu&amp;quot;&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;包船专享&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;日韩航线&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;欧洲航线&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;三峡航线&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;美洲航线&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
            &amp;lt;/li&amp;gt;
            &amp;lt;li class=&amp;quot;fl&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;自驾&amp;lt;/a&amp;gt;
                &amp;lt;ul class=&amp;quot;subMenu&amp;quot;&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;周边自驾&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;国内自驾&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;出境自驾&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;/ul&amp;gt;
            &amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;下拉菜单效果的实现&#34;&gt;下拉菜单效果的实现&lt;/h2&gt;

&lt;p&gt;如何实现鼠标移动到主菜单相应的li元素位置时，显示二级菜单，而移开鼠标则隐藏二级菜单。基本的实现方法纯CSS样式、jQuery、 原生JavaScript等三种实现方法。&lt;/p&gt;

&lt;h3 id=&#34;方法一-纯css样式-见demo1-http-www-wangxingfeng-com-posts-demo1-html&#34;&gt;方法一、 纯CSS样式：&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo1.html&#34;&gt;见demo1&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;最简单的方式是直接使用css的 &lt;code&gt;:hover&lt;/code&gt; 来实现。当鼠标移动到主菜单的对应的li上时，二级菜单设置为可见的块级元素  &lt;code&gt;display: block;&lt;/code&gt;
    .navMenu li:hover .subMenu{display: block;} /&lt;em&gt;hover是显示二级菜单&lt;/em&gt;/&lt;/p&gt;

&lt;h3 id=&#34;方法二-jquery-见demo2-http-www-wangxingfeng-com-posts-demo2-html&#34;&gt;方法二、 jQuery：&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo2.html&#34;&gt;见demo2&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;使用jQuery获取li元素，绑定mouseover、mouseout事件，调用jQuery的show()、hide()方法。参考代码如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;js/jquery-2.2.3.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    $(function() {
        $(&#39;.navMenu&amp;gt;li&#39;).mouseover( function() {
            $(this).children(&#39;ul&#39;).show();
        });
            $(&#39;.navMenu&amp;gt;li&#39;).mouseout( function() {
            $(this).children(&#39;ul&#39;).hide();
        });
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;方法三-原生javascript-见demo3-http-www-wangxingfeng-com-posts-demo3-html&#34;&gt;方法三、 原生JavaScript：&lt;a href=&#34;http://www.wangxingfeng.com/posts/demo3.html&#34;&gt;见demo3&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;先定义显示和隐藏元素的函数&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34;&gt;
    // 定义显示函数
    function showsubmenu(li) {
        var submenu = li.getElementsByClassName(&#39;subMenu&#39;)[0];
        submenu.style.display=&#34;block&#34;;
    }
    // 定义隐藏函数
    function hidesubmenu(li){
        var submenu = li.getElementsByClassName(&#39;subMenu&#39;)[0];
        submenu.style.display=&#34;none&#34;;
    }
&lt;/script&gt;

&lt;p&gt;再调用函数， 在HTML代码中对应的li元素，添加函数的调用，代码修改如下。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div id=&amp;quot;nav&amp;quot;&amp;gt;
    &amp;lt;ul class=&amp;quot;navMenu clearfix&amp;quot;&amp;gt;
        &amp;lt;li class=&amp;quot;fl&amp;quot; onmouseover=&amp;quot;showsubmenu(this)&amp;quot; onmouseout=&amp;quot;hidesubmenu(this)&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;首页&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;li class=&amp;quot;fl&amp;quot; onmouseover=&amp;quot;showsubmenu(this)&amp;quot; onmouseout=&amp;quot;hidesubmenu(this)&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;跟团游&amp;lt;/a&amp;gt;
            &amp;lt;ul class=&amp;quot;subMenu&amp;quot;&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;出境跟团&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;国内跟团&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;周边跟团&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;当地参团&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
        &amp;lt;/li&amp;gt;
        &amp;lt;li class=&amp;quot;fl&amp;quot; onmouseover=&amp;quot;showsubmenu(this)&amp;quot; onmouseout=&amp;quot;hidesubmenu(this)&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;自助游&amp;lt;/a&amp;gt;
            &amp;lt;ul class=&amp;quot;subMenu&amp;quot; &amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;出境自助&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;国内自助&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;机票+酒店&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;火车+酒店&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
        &amp;lt;/li&amp;gt;
        &amp;lt;li class=&amp;quot;fl&amp;quot; onmouseover=&amp;quot;showsubmenu(this)&amp;quot; onmouseout=&amp;quot;hidesubmenu(this)&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;游轮&amp;lt;/a&amp;gt;
            &amp;lt;ul class=&amp;quot;subMenu&amp;quot;&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;包船专享&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;日韩航线&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;欧洲航线&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;三峡航线&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;美洲航线&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
        &amp;lt;/li&amp;gt;
        &amp;lt;li class=&amp;quot;fl&amp;quot; onmouseover=&amp;quot;showsubmenu(this)&amp;quot; onmouseout=&amp;quot;hidesubmenu(this)&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;自驾&amp;lt;/a&amp;gt;
            &amp;lt;ul class=&amp;quot;subMenu&amp;quot;&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;周边自驾&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;国内自驾&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
                &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;出境自驾&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;/ul&amp;gt;
        &amp;lt;/li&amp;gt;
    &amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>